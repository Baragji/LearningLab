**New Revised Plan - Updated 2024-05-31**

**Status:** Phase 1 er fuldført. Phase 2 er næsten fuldført, med fokus nu på verifikation og potentielle justeringer.

**Phase 1: Prisma Schema and Database Synchronization - FULDFØRT**

1.  **Objective:** Align the Prisma schema (`prisma/schema.prisma`) with the target data model (`Målsætning.md`). - **FULDFØRT**
    *   **Action 1.1:** Rename `SubjectArea` to `EducationProgram`. - **FULDFØRT**
        *   Relations in `Course` updated.
    *   **Action 1.2:** Rename `Module` to `Topic`. - **FULDFØRT**
        *   Relations in `Lesson` and `Quiz` updated.
        *   `Course` to `Topic` relation updated.
    *   **Action 1.3:** Update `Lesson` relation. - **FULDFØRT**
        *   `Lesson` to `Topic` relation (`topicId`) ensured.
    *   **Action 1.4:** Add `semesterNumber` (Int?) to the `Course` model. - **FULDFØRT**
    *   **Action 1.5:** Add `subjectCategory` (`FagCategory` enum) to the `Topic` model. `FagCategory` enum created. - **FULDFØRT**
    *   **Action 1.6:** Run Prisma migrations. - **FULDFØRT**
        *   `npx prisma migrate dev --name phase1-data-model-refactor` (og efterfølgende oprydning for at løse "ghost migration").
        *   `npx prisma generate`.
    *   **Verification:** Prisma Client er blevet inspiceret indirekte gennem succesfulde refaktoreringer i Phase 2, der bygger på disse ændringer. - **FULDFØRT**

**Phase 2: Backend Code Refactoring (NestJS API) - NÆSTEN FULDFØRT**

This phase involves systematically updating the backend controllers, services, DTOs, and modules to reflect the Prisma schema changes.

1.  **Objective:** Refactor `EducationProgram` related files. - **FULDFØRT**
    *   **Action 2.1 & 2.2:** Files, classes, and code for `EducationProgram` (NestJS version: `educationProgram.controller.nest.ts`, `educationProgram.service.ts`, DTOs) updated. Forældet `subjectArea.controller.ts` og `subjectArea.controller.nest.updated.ts` slettet. Non-NestJS controller `educationProgram.controller.ts` er også slettet, da funktionaliteten dækkes af NestJS controlleren.
        *   **Note:** Felterne `tags`, `categories`, `image`, `banner` er midlertidigt udkommenteret i `educationProgram.service.ts` `updateEducationProgram` metode, da de ikke er på Prisma-modellen `EducationProgram` pt. Skal afklares om de skal tilføjes til modellen.

2.  **Objective:** Refactor `Topic` related files. - **FULDFØRT**
    *   **Action 2.3 & 2.4:** Files, classes, and code for `Topic` (NestJS version: `topic.controller.nest.ts`, `topic.service.ts`, DTOs) updated. Forældet `modules.module.ts` slettet. Den non-eksisterende `module.controller.ts` (non-NestJS) er ikke blevet oprettet som `topic.controller.ts`, da routing konsolideres i NestJS.

3.  **Objective:** Refactor `Course` related files. - **FULDFØRT**
    *   **Action 2.5:** Code in `apps/api/src/controllers/course.controller.nest.ts` updated to use `educationProgramId` and `topics`. Non-NestJS controller `course.controller.ts` er slettet.

4.  **Objective:** Refactor `Lesson` related files. - **FULDFØRT**
    *   **Action 2.6:** Code in `apps/api/src/controllers/lesson.controller.nest.ts` updated to use `topicId`. Non-NestJS controller `lesson.controller.ts` er slettet.

5.  **Objective:** Refactor `UserProgress` related files. - **FULDFØRT**
    *   **Action 2.7:** Code in `apps/api/src/controllers/userProgress.controller.nest.ts` (og den nu slettede `userProgress.controller.ts`) opdateret med korrekte entitetsnavne og relationer.

6.  **Objective:** Refactor `SearchService` and `SearchController`. - **FULDFØRT**
    *   **Action 2.8:** Code in `apps/api/src/search/search.service.ts` and `apps/api/src/search/search.controller.ts` opdateret til at bruge `educationProgramId` og `topic`.

7.  **Objective:** Refactor Test/Seed Data. - **FULDFØRT**
    *   **Action 2.9:**
        *   `apps/api/src/create-test-data.ts` opdateret.
        *   `apps/api/src/test-quiz-fields.ts` opdateret.
        *   `apps/api/prisma/seed.ts` opdateret og linter-fejl rettet.

8.  **Objective:** Fix Route definitions & Consolidate Routing. - **FULDFØRT**
    *   **Action 2.10 & 2.11 (Kombineret):** Non-NestJS filen `apps/api/src/routes/pensum.routes.ts` er blevet slettet. De tilhørende non-NestJS controllere (`educationProgram.controller.ts`, `course.controller.ts`, `lesson.controller.ts`, `contentBlock.controller.ts`) er også slettet. Al routing håndteres nu af de respektive NestJS controllere (`*.nest.ts`). Dette adresserer også Action 2.11 (`subjectArea.controller.nest.updated.ts` som var forældet og er slettet).

9.  **Objective:** Address remaining specific file issues. - **FULDFØRT (som en del af ovenstående)**
    *   **Action 2.12:** Problemer i den gamle `educationProgram.controller.ts` (non-NestJS) er nu irrelevante, da filen er slettet. DTO'er i `@repo/core` er uden for scopet af denne backend refaktorering indtil videre.

**Phase 3: Testing, Validation, and Final Adjustments (NÆSTE SKRIDT)**

1.  **Objective:** Ensure the application compiles and runs without errors.
    *   **Action 3.1 (NÆSTE):** Kør `yarn dev` (eller tilsvarende kommando) for at identificere eventuelle kompileringsfejl efter de seneste ændringer og sletninger.
        *   Vær opmærksom på imports i `*.module.ts` filer, der måske refererede til de slettede non-NestJS controllere (f.eks. `apps/api/src/app.module.ts` eller andre feature modules).
    *   **Action 3.2:** Iterativt ret eventuelle resterende TypeScript eller Prisma-relaterede fejl.

2.  **Objective:** Address `EducationProgram` optional fields.
    *   **Action 3.3 (NÆSTE/PARALLELT):** Afklar om felterne `tags`, `categories`, `image`, `banner` skal være en del af `EducationProgram`-modellen i `schema.prisma`.
        *   Hvis ja: Opdater `schema.prisma`, kør `npx prisma migrate dev --name add-fields-to-educationprogram`, kør `npx prisma generate`, og juster `educationProgram.service.ts` (fjern udkommentering) samt DTO'er/controllere efter behov.
        *   Hvis nej: Overvej at fjerne disse felter fra `CreateEducationProgramDto` og `UpdateEducationProgramDto` for at undgå forvirring, og fjern den udkommenterede kode i `educationProgram.service.ts`.

3.  **Objective:** Verify API functionality.
    *   **Action 3.4:** Test CRUD-operationer for `EducationProgram`, `Course`, `Topic`, `Lesson`, `ContentBlock` via API-kald til NestJS-controllerne.
    *   **Action 3.5:** Verificer at relationer virker som forventet (f.eks. at et `Course` inkluderer dets `Topics`).
    *   **Action 3.6:** Test søgefunktionaliteten.

4.  **Objective:** Frontend Consideration (Udenfor direkte scope, men noter).
    *   **Action 3.7:** Hvis klientapplikationen (frontend) brugte de gamle stier fra `pensum.routes.ts` eller non-NestJS controller-stier, skal den opdateres til at bruge de nye stier fra NestJS-controllerne.

**General Guidelines during Refactoring:**

*   **Incremental Changes:** (Anvendt)
*   **Frequent Prisma Generation:** (Anvendt)
*   **TypeScript Compiler as Guide:** (Anvendes løbende)
*   **Version Control:** Commit frequently after successful steps.