This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.github/
  workflows/
    ci.yml
.repomix/
  bundles.json
api/
  web.txt
apps/
  api/
    prisma/
      migrations/
        20220307034109_initial_migrate/
          migration.sql
        20250517073440_add_user_auth_fields/
          migration.sql
        20250517122525_add_password_reset_fields/
          migration.sql
        20250520211803_add_pensum_and_quiz_models/
          migration.sql
        migration_lock.toml
      schema.prisma
    src/
      auth/
        dto/
          forgot-password.dto.ts
          login.dto.ts
          refresh-token.dto.ts
          reset-password.dto.ts
        guards/
          jwt-auth.guard.ts
          local-auth.guard.ts
          login-throttler.guard.ts
        strategies/
          jwt/
            jwt.ts
          local/
            local.ts
        auth.controller.ts
        auth.module.ts
        auth.service.ts
      common/
        filters/
          global-exception.filter.ts
        middleware/
          csrf.middleware.ts
      config/
        environment-variables.ts
      controllers/
        contentBlock.controller.ts
        course.controller.ts
        lesson.controller.ts
        module.controller.ts
        quiz.controller.ts
        quizAttempt.controller.ts
        subjectArea.controller.ts
        userProgress.controller.ts
      middleware/
        auth.middleware.ts
      persistence/
        prisma/
          prisma.service.spec.ts
          prisma.service.ts
        persistence.module.ts
      routes/
        pensum.routes.ts
        quiz.routes.ts
      types/
        express.d.ts
      users/
        dto/
          create-user.dto.ts
        users.controller.spec.ts
        users.controller.ts
        users.module.ts
        users.service.spec.ts
        users.service.ts
      app.controller.spec.ts
      app.controller.ts
      app.module.ts
      app.service.ts
      main.ts
    test/
      app.e2e-spec.ts
      jest-e2e.json
    .eslintrc.js
    .prettierrc
    nest-cli.json
    package.json
    tsconfig.build.json
    tsconfig.build.tsbuildinfo
    tsconfig.json
    tsconfig.tsbuildinfo
    webpack-hmr.config.js
  web/
    pages/
      courses/
        [slug]/
          quizzes/
            [id]/
              results.tsx
            [id].tsx
        [slug].tsx
        index.tsx
      lessons/
        [id].tsx
      _app.tsx
      dashboard.tsx
      forgot-password.tsx
      index.tsx
      login.tsx
      profile.tsx
      reset-password.tsx
      signup.tsx
    src/
      components/
        auth/
          ProtectedRoute.tsx
        common/
          OfflineIndicator.tsx
        layout/
          Header.tsx
          Layout.tsx
          Sidebar.tsx
        quiz/
          IncorrectAnswersList.tsx
          OfflineQuizNotification.tsx
          QuizContainer.tsx
          QuizNavigation.tsx
          QuizProgress.tsx
          QuizQuestion.tsx
          RadialProgress.tsx
          ScoreToast.tsx
      context/
        AuthContext.tsx
        ProgressContext.tsx
        QuizContext.tsx
        ThemeContext.tsx
        useAuth.ts
      hooks/
        useOfflineStatus.ts
        useQuizProgress.ts
      screens/
        auth/
          forgot-password/
            forgot-password.tsx
          login/
            login.test.tsx
            login.tsx
          reset-password/
            reset-password.tsx
          signup/
            signup.tsx
      services/
        apiClient.ts
        userProgressApi.ts
      store/
        services/
          api.ts
        index.ts
      styles/
        global.css
      utils/
        offlineSync.ts
    .eslintrc.js
    jest.config.js
    jest.setup.js
    next-env.d.ts
    next.config.js
    package.json
    postcss.config.js
    README.md
    tailwind.config.js
    tsconfig.json
    tsconfig.tsbuildinfo
packages/
  config/
    src/
      env.d.ts
      env.d.ts.map
      env.js
      env.js.map
      env.ts
      index.d.ts
      index.d.ts.map
      index.js
      index.js.map
      index.ts
    .eslintrc.js
    eslint-preset.js
    nginx.conf
    package.json
    postcss.config.js
    tailwind.config.js
    tsconfig.json
    tsconfig.tsbuildinfo
  core/
    src/
      types/
        pensum.types.d.ts
        pensum.types.d.ts.map
        pensum.types.js
        pensum.types.js.map
        pensum.types.ts
        quiz.types.d.ts
        quiz.types.d.ts.map
        quiz.types.js
        quiz.types.js.map
        quiz.types.ts
        user.types.d.ts
        user.types.d.ts.map
        user.types.js
        user.types.js.map
        user.types.ts
      index.d.ts
      index.d.ts.map
      index.js
      index.js.map
      index.ts
    .eslintrc.js
    package.json
    tsconfig.json
    tsconfig.tsbuildinfo
  tsconfig/
    base.json
    nestjs.json
    nextjs.json
    package.json
    react-library.json
    README.md
  ui/
    components/
      Button/
        Button.tsx
    index.tsx
    package.json
    tsconfig.json
prisma/
  migrations/
    20250520183549_new/
      migration.sql
    migration_lock.toml
  schema.prisma
.gitignore
.node-version
.yarnrc.yml
docker-compose.yml
E1-MVP-UI-Plan.md
E2-Quiz-Core-Plan.md
gitlog.txt
Jira style.txt
kommando fejl.txt
LICENSE
milesten.txt
package-scripts.js
package.json
Planen.txt
README.md
render.yaml
smil.txt
Struktur.txt
tsconfig.json
turbo.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".repomix/bundles.json">
{
  "bundles": {}
}
</file>

<file path="api/web.txt">
2.name: api-ci

on:
  push:
    branches: [master]
    paths:
      - "apps/api/**"
  pull_request:
    branches: [master]
    paths:
      - "apps/api/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: "postgresql://test:test@localhost:5433/mydb"

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn global add turbo
      - run: npx nps prepare.ci.api
      - run: npx nps build.ci.api
      - run: npx nps test.ci.api

2. 
# This is a basic workflow to help you get started with Actions

name: web-ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
    paths:
      - "apps/web/**"
  pull_request:
    branches: [master]
    paths:
      - "apps/web/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn global add turbo
      - run: npx nps prepare.ci.web
      - run: npx nps build.ci.web
      - run: npx nps test.ci.web
</file>

<file path="apps/api/prisma/migrations/20220307034109_initial_migrate/migration.sql">
-- CreateTable
CREATE TABLE "User" (
    "id" SERIAL NOT NULL,
    "email" TEXT NOT NULL,
    "name" TEXT,

    CONSTRAINT "User_pkey" PRIMARY KEY ("id")
);

-- CreateIndex
CREATE UNIQUE INDEX "User_email_key" ON "User"("email");
</file>

<file path="apps/api/prisma/migrations/20250517073440_add_user_auth_fields/migration.sql">
/*
  Warnings:

  - Added the required column `passwordHash` to the `User` table without a default value. This is not possible if the table is not empty.
  - Added the required column `updatedAt` to the `User` table without a default value. This is not possible if the table is not empty.

*/
-- CreateEnum
CREATE TYPE "Role" AS ENUM ('USER', 'ADMIN');

-- AlterTable
ALTER TABLE "User" ADD COLUMN     "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
ADD COLUMN     "passwordHash" TEXT NOT NULL,
ADD COLUMN     "role" "Role" NOT NULL DEFAULT 'USER',
ADD COLUMN     "updatedAt" TIMESTAMP(3) NOT NULL;
</file>

<file path="apps/api/prisma/migrations/20250517122525_add_password_reset_fields/migration.sql">
/*
  Warnings:

  - A unique constraint covering the columns `[passwordResetToken]` on the table `User` will be added. If there are existing duplicate values, this will fail.

*/
-- AlterTable
ALTER TABLE "User" ADD COLUMN     "passwordResetExpires" TIMESTAMP(3),
ADD COLUMN     "passwordResetToken" TEXT;

-- CreateIndex
CREATE UNIQUE INDEX "User_passwordResetToken_key" ON "User"("passwordResetToken");
</file>

<file path="apps/api/prisma/migrations/20250520211803_add_pensum_and_quiz_models/migration.sql">
-- CreateEnum
CREATE TYPE "ContentBlockType" AS ENUM ('TEXT', 'IMAGE_URL', 'VIDEO_URL', 'QUIZ_REF');

-- CreateEnum
CREATE TYPE "QuestionType" AS ENUM ('MULTIPLE_CHOICE', 'FILL_IN_BLANK', 'MATCHING');

-- CreateEnum
CREATE TYPE "ProgressStatus" AS ENUM ('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED');

-- CreateTable
CREATE TABLE "SubjectArea" (
    "id" SERIAL NOT NULL,
    "name" TEXT NOT NULL,
    "slug" TEXT NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "SubjectArea_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Course" (
    "id" SERIAL NOT NULL,
    "title" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "slug" TEXT NOT NULL,
    "subjectAreaId" INTEGER NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "Course_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Module" (
    "id" SERIAL NOT NULL,
    "title" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "order" INTEGER NOT NULL,
    "courseId" INTEGER NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "Module_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Lesson" (
    "id" SERIAL NOT NULL,
    "title" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "order" INTEGER NOT NULL,
    "moduleId" INTEGER NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "Lesson_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ContentBlock" (
    "id" SERIAL NOT NULL,
    "type" "ContentBlockType" NOT NULL,
    "content" TEXT NOT NULL,
    "order" INTEGER NOT NULL,
    "lessonId" INTEGER NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "ContentBlock_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Quiz" (
    "id" SERIAL NOT NULL,
    "title" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "lessonId" INTEGER,
    "moduleId" INTEGER,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "Quiz_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Question" (
    "id" SERIAL NOT NULL,
    "text" TEXT NOT NULL,
    "type" "QuestionType" NOT NULL,
    "quizId" INTEGER NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "Question_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "AnswerOption" (
    "id" SERIAL NOT NULL,
    "text" TEXT NOT NULL,
    "isCorrect" BOOLEAN NOT NULL,
    "questionId" INTEGER NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "AnswerOption_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "QuizAttempt" (
    "id" SERIAL NOT NULL,
    "userId" INTEGER NOT NULL,
    "quizId" INTEGER NOT NULL,
    "score" INTEGER NOT NULL DEFAULT 0,
    "startedAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "completedAt" TIMESTAMP(3),
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "QuizAttempt_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "UserAnswer" (
    "id" SERIAL NOT NULL,
    "quizAttemptId" INTEGER NOT NULL,
    "questionId" INTEGER NOT NULL,
    "selectedAnswerOptionId" INTEGER,
    "inputText" TEXT,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "UserAnswer_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "UserProgress" (
    "id" SERIAL NOT NULL,
    "userId" INTEGER NOT NULL,
    "lessonId" INTEGER,
    "quizId" INTEGER,
    "status" "ProgressStatus" NOT NULL DEFAULT 'NOT_STARTED',
    "score" INTEGER,
    "quizAttemptId" INTEGER,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "UserProgress_pkey" PRIMARY KEY ("id")
);

-- CreateIndex
CREATE UNIQUE INDEX "SubjectArea_slug_key" ON "SubjectArea"("slug");

-- CreateIndex
CREATE UNIQUE INDEX "Course_slug_key" ON "Course"("slug");

-- AddForeignKey
ALTER TABLE "Course" ADD CONSTRAINT "Course_subjectAreaId_fkey" FOREIGN KEY ("subjectAreaId") REFERENCES "SubjectArea"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Module" ADD CONSTRAINT "Module_courseId_fkey" FOREIGN KEY ("courseId") REFERENCES "Course"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Lesson" ADD CONSTRAINT "Lesson_moduleId_fkey" FOREIGN KEY ("moduleId") REFERENCES "Module"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ContentBlock" ADD CONSTRAINT "ContentBlock_lessonId_fkey" FOREIGN KEY ("lessonId") REFERENCES "Lesson"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Quiz" ADD CONSTRAINT "Quiz_lessonId_fkey" FOREIGN KEY ("lessonId") REFERENCES "Lesson"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Quiz" ADD CONSTRAINT "Quiz_moduleId_fkey" FOREIGN KEY ("moduleId") REFERENCES "Module"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Question" ADD CONSTRAINT "Question_quizId_fkey" FOREIGN KEY ("quizId") REFERENCES "Quiz"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "AnswerOption" ADD CONSTRAINT "AnswerOption_questionId_fkey" FOREIGN KEY ("questionId") REFERENCES "Question"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuizAttempt" ADD CONSTRAINT "QuizAttempt_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuizAttempt" ADD CONSTRAINT "QuizAttempt_quizId_fkey" FOREIGN KEY ("quizId") REFERENCES "Quiz"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserAnswer" ADD CONSTRAINT "UserAnswer_quizAttemptId_fkey" FOREIGN KEY ("quizAttemptId") REFERENCES "QuizAttempt"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserAnswer" ADD CONSTRAINT "UserAnswer_questionId_fkey" FOREIGN KEY ("questionId") REFERENCES "Question"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserAnswer" ADD CONSTRAINT "UserAnswer_selectedAnswerOptionId_fkey" FOREIGN KEY ("selectedAnswerOptionId") REFERENCES "AnswerOption"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserProgress" ADD CONSTRAINT "UserProgress_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserProgress" ADD CONSTRAINT "UserProgress_lessonId_fkey" FOREIGN KEY ("lessonId") REFERENCES "Lesson"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserProgress" ADD CONSTRAINT "UserProgress_quizId_fkey" FOREIGN KEY ("quizId") REFERENCES "Quiz"("id") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "UserProgress" ADD CONSTRAINT "UserProgress_quizAttemptId_fkey" FOREIGN KEY ("quizAttemptId") REFERENCES "QuizAttempt"("id") ON DELETE SET NULL ON UPDATE CASCADE;
</file>

<file path="apps/api/prisma/migrations/migration_lock.toml">
# Please do not edit this file manually
# It should be added in your version-control system (i.e. Git)
provider = "postgresql"
</file>

<file path="apps/api/src/auth/dto/forgot-password.dto.ts">
// apps/api/src/auth/dto/forgot-password.dto.ts
import { IsEmail, IsNotEmpty } from 'class-validator';

export class ForgotPasswordDto {
  @IsEmail({}, { message: 'Email skal være en gyldig email-adresse.' })
  @IsNotEmpty({ message: 'Email må ikke være tom.' })
  email: string;
}
</file>

<file path="apps/api/src/auth/dto/refresh-token.dto.ts">
// apps/api/src/auth/dto/refresh-token.dto.ts
import { IsNotEmpty, IsString } from 'class-validator';

export class RefreshTokenDto {
  @IsString({ message: 'Refresh token skal være en streng.' })
  @IsNotEmpty({ message: 'Refresh token må ikke være tomt.' })
  refresh_token: string;
}
</file>

<file path="apps/api/src/auth/guards/local-auth.guard.ts">
// apps/api/src/auth/guards/local-auth.guard.ts
import { Injectable } from '@nestjs/common';
import { AuthGuard } from '@nestjs/passport';

/**
 * A guard that invokes the local Passport strategy.
 * It automatically handles the logic of calling the LocalStrategy's validate() method
 * and setting up req.user upon successful authentication.
 * If authentication fails, it automatically sends a 401 Unauthorized response.
 */
@Injectable()
export class LocalAuthGuard extends AuthGuard('local') {}
</file>

<file path="apps/api/src/auth/guards/login-throttler.guard.ts">
// apps/api/src/auth/guards/login-throttler.guard.ts
import { Injectable } from '@nestjs/common';
import { ThrottlerGuard } from '@nestjs/throttler';

@Injectable()
export class LoginThrottlerGuard extends ThrottlerGuard {
  protected getTracker(req: Record<string, any>): Promise<string> {
    // Brug både IP og email (hvis tilgængelig) for at forhindre brute force-angreb
    const email = req.body?.email || 'anonymous';
    return Promise.resolve(`${req.ip}-${email}`);
  }
}
</file>

<file path="apps/api/src/common/filters/global-exception.filter.ts">
// apps/api/src/common/filters/global-exception.filter.ts
import {
  ExceptionFilter,
  Catch,
  ArgumentsHost,
  HttpException,
  HttpStatus,
  Logger,
} from '@nestjs/common';
import { Request, Response } from 'express';

@Catch()
export class GlobalExceptionFilter implements ExceptionFilter {
  private readonly logger = new Logger(GlobalExceptionFilter.name);

  catch(exception: unknown, host: ArgumentsHost) {
    const ctx = host.switchToHttp();
    const response = ctx.getResponse<Response>();
    const request = ctx.getRequest<Request>();

    // Standardværdier for status og fejlbesked
    let status = HttpStatus.INTERNAL_SERVER_ERROR;
    let message = 'Der opstod en intern serverfejl.';
    let error = 'Internal Server Error';

    // Hvis det er en HttpException, brug dens status og besked
    if (exception instanceof HttpException) {
      status = exception.getStatus();
      const exceptionResponse = exception.getResponse();

      if (typeof exceptionResponse === 'object' && exceptionResponse !== null) {
        message = (exceptionResponse as any).message || message;
        error = (exceptionResponse as any).error || exception.name;
      } else if (typeof exceptionResponse === 'string') {
        message = exceptionResponse;
      }
    }

    // Log fejlen med detaljer
    this.logger.error(
      `${request.method} ${request.url} - Status: ${status}, Message: ${message}`,
      exception instanceof Error ? exception.stack : 'No stack trace available',
    );

    // Send et struktureret svar tilbage til klienten
    response.status(status).json({
      statusCode: status,
      timestamp: new Date().toISOString(),
      path: request.url,
      error,
      message,
    });
  }
}
</file>

<file path="apps/api/src/common/middleware/csrf.middleware.ts">
// apps/api/src/common/middleware/csrf.middleware.ts
import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';

// Extend the Express Request interface to include csrfToken method
interface CsrfRequest extends Request {
  csrfToken(): string;
}

@Injectable()
export class CsrfMiddleware implements NestMiddleware {
  use(req: CsrfRequest, res: Response, next: NextFunction) {
    // Sæt CSRF token i response header, så frontend kan bruge det
    res.cookie('XSRF-TOKEN', req.csrfToken(), {
      httpOnly: false, // Frontend skal kunne læse denne cookie
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'strict',
    });
    next();
  }
}
</file>

<file path="apps/api/src/config/environment-variables.ts">
import * as Joi from 'joi';

export interface EnvironmentVariables {
  DATABASE_URL: string;
}

export const validationSchemaForEnv = Joi.object<EnvironmentVariables, true>({
  DATABASE_URL: Joi.string().required(),
});
</file>

<file path="apps/api/src/controllers/contentBlock.controller.ts">
// apps/api/src/controllers/contentBlock.controller.ts

import { Request, Response } from 'express';
import { PrismaClient, ContentBlockType } from '@prisma/client';
import { CreateContentBlockInput } from '@repo/core';

const prisma = new PrismaClient();

/**
 * Henter alle indholdsblokke for en specifik lektion
 */
export const getContentBlocksByLesson = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { lessonId } = req.params;

  try {
    const contentBlocks = await prisma.contentBlock.findMany({
      where: { lessonId: Number(lessonId) },
      orderBy: { order: 'asc' },
    });

    res.status(200).json(contentBlocks);
  } catch (error) {
    console.error(
      `Fejl ved hentning af indholdsblokke for lektion ${lessonId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af indholdsblokke' });
  }
};

/**
 * Henter en specifik indholdsblok ud fra ID
 */
export const getContentBlockById = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    const contentBlock = await prisma.contentBlock.findUnique({
      where: { id: Number(id) },
      include: {
        lesson: true,
      },
    });

    if (!contentBlock) {
      res.status(404).json({ message: 'Indholdsblokken blev ikke fundet' });
      return;
    }

    res.status(200).json(contentBlock);
  } catch (error) {
    console.error(`Fejl ved hentning af indholdsblok med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af indholdsblokken' });
  }
};

/**
 * Opretter en ny indholdsblok
 */
export const createContentBlock = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { type, content, order, lessonId }: CreateContentBlockInput = req.body;

  try {
    // Tjek om lektionen eksisterer
    const lesson = await prisma.lesson.findUnique({
      where: { id: lessonId },
    });

    if (!lesson) {
      res.status(404).json({ message: 'Den angivne lektion findes ikke' });
      return;
    }

    // Valider indholdstypen
    if (!Object.values(ContentBlockType).includes(type as ContentBlockType)) {
      res.status(400).json({ message: 'Ugyldig indholdstype' });
      return;
    }

    // Hvis der ikke er angivet en rækkefølge, sæt den til at være efter den sidste indholdsblok
    let blockOrder = order;
    if (blockOrder === undefined) {
      const lastBlock = await prisma.contentBlock.findFirst({
        where: { lessonId },
        orderBy: { order: 'desc' },
      });

      blockOrder = lastBlock ? lastBlock.order + 1 : 1;
    }

    const newContentBlock = await prisma.contentBlock.create({
      data: {
        type: type as ContentBlockType,
        content,
        order: blockOrder,
        lessonId,
      },
    });

    res.status(201).json(newContentBlock);
  } catch (error) {
    console.error('Fejl ved oprettelse af indholdsblok:', error);
    res.status(500).json({
      message: 'Der opstod en fejl ved oprettelse af indholdsblokken',
    });
  }
};

/**
 * Opdaterer en eksisterende indholdsblok
 */
export const updateContentBlock = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const { type, content, order, lessonId } = req.body;

  try {
    // Tjek om indholdsblokken eksisterer
    const existingContentBlock = await prisma.contentBlock.findUnique({
      where: { id: Number(id) },
    });

    if (!existingContentBlock) {
      res.status(404).json({ message: 'Indholdsblokken blev ikke fundet' });
      return;
    }

    // Hvis lessonId ændres, tjek om den nye lektion eksisterer
    if (lessonId && lessonId !== existingContentBlock.lessonId) {
      const lesson = await prisma.lesson.findUnique({
        where: { id: lessonId },
      });

      if (!lesson) {
        res.status(404).json({ message: 'Den angivne lektion findes ikke' });
        return;
      }
    }

    // Valider indholdstypen hvis den ændres
    if (type && type !== existingContentBlock.type) {
      if (!Object.values(ContentBlockType).includes(type as ContentBlockType)) {
        res.status(400).json({ message: 'Ugyldig indholdstype' });
        return;
      }
    }

    const updatedContentBlock = await prisma.contentBlock.update({
      where: { id: Number(id) },
      data: {
        type: type ? (type as ContentBlockType) : existingContentBlock.type,
        content: content || existingContentBlock.content,
        order: order !== undefined ? order : existingContentBlock.order,
        lessonId: lessonId || existingContentBlock.lessonId,
      },
    });

    res.status(200).json(updatedContentBlock);
  } catch (error) {
    console.error(`Fejl ved opdatering af indholdsblok med id ${id}:`, error);
    res.status(500).json({
      message: 'Der opstod en fejl ved opdatering af indholdsblokken',
    });
  }
};

/**
 * Opdaterer rækkefølgen af indholdsblokke i en lektion
 */
export const updateContentBlocksOrder = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { lessonId } = req.params;
  const { contentBlockIds } = req.body;

  if (!Array.isArray(contentBlockIds)) {
    res.status(400).json({
      message: "contentBlockIds skal være et array af indholdsblok-ID'er",
    });
    return;
  }

  try {
    // Tjek om lektionen eksisterer
    const lesson = await prisma.lesson.findUnique({
      where: { id: Number(lessonId) },
      include: { contentBlocks: true },
    });

    if (!lesson) {
      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
      return;
    }

    // Tjek om alle indholdsblokke tilhører lektionen
    const lessonContentBlockIds = lesson.contentBlocks.map((block) => block.id);
    const allBlocksExist = contentBlockIds.every((id) =>
      lessonContentBlockIds.includes(Number(id)),
    );

    if (!allBlocksExist) {
      res.status(400).json({
        message:
          'En eller flere indholdsblokke tilhører ikke den angivne lektion',
      });
      return;
    }

    // Opdater rækkefølgen af indholdsblokke
    const updates = contentBlockIds.map((blockId, index) => {
      return prisma.contentBlock.update({
        where: { id: Number(blockId) },
        data: { order: index + 1 },
      });
    });

    await prisma.$transaction(updates);

    const updatedContentBlocks = await prisma.contentBlock.findMany({
      where: { lessonId: Number(lessonId) },
      orderBy: { order: 'asc' },
    });

    res.status(200).json(updatedContentBlocks);
  } catch (error) {
    console.error(
      `Fejl ved opdatering af indholdsblokrækkefølge for lektion ${lessonId}:`,
      error,
    );
    res.status(500).json({
      message: 'Der opstod en fejl ved opdatering af indholdsblokrækkefølgen',
    });
  }
};

/**
 * Sletter en indholdsblok
 */
export const deleteContentBlock = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    // Tjek om indholdsblokken eksisterer
    const existingContentBlock = await prisma.contentBlock.findUnique({
      where: { id: Number(id) },
    });

    if (!existingContentBlock) {
      res.status(404).json({ message: 'Indholdsblokken blev ikke fundet' });
      return;
    }

    await prisma.contentBlock.delete({
      where: { id: Number(id) },
    });

    // Opdater rækkefølgen af de resterende indholdsblokke
    const remainingBlocks = await prisma.contentBlock.findMany({
      where: { lessonId: existingContentBlock.lessonId },
      orderBy: { order: 'asc' },
    });

    const updates = remainingBlocks.map((block, index) => {
      return prisma.contentBlock.update({
        where: { id: block.id },
        data: { order: index + 1 },
      });
    });

    await prisma.$transaction(updates);

    res.status(200).json({ message: 'Indholdsblokken blev slettet' });
  } catch (error) {
    console.error(`Fejl ved sletning af indholdsblok med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved sletning af indholdsblokken' });
  }
};
</file>

<file path="apps/api/src/controllers/course.controller.ts">
// apps/api/src/controllers/course.controller.ts

import { Request, Response } from 'express';
import { PrismaClient } from '@prisma/client';
import { CreateCourseInput } from '@repo/core';

const prisma = new PrismaClient();

/**
 * Henter alle kurser
 */
export const getAllCourses = async (
  req: Request,
  res: Response,
): Promise<void> => {
  try {
    const courses = await prisma.course.findMany({
      include: {
        subjectArea: true,
      },
      orderBy: { title: 'asc' },
    });

    res.status(200).json(courses);
  } catch (error) {
    console.error('Fejl ved hentning af kurser:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af kurser' });
  }
};

/**
 * Henter kurser for et specifikt fagområde
 */
export const getCoursesBySubjectArea = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { subjectAreaId } = req.params;

  try {
    const courses = await prisma.course.findMany({
      where: { subjectAreaId: Number(subjectAreaId) },
      orderBy: { title: 'asc' },
    });

    res.status(200).json(courses);
  } catch (error) {
    console.error(
      `Fejl ved hentning af kurser for fagområde ${subjectAreaId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af kurser' });
  }
};

/**
 * Henter et specifikt kursus ud fra ID
 */
export const getCourseById = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    const course = await prisma.course.findUnique({
      where: { id: Number(id) },
      include: {
        subjectArea: true,
        modules: {
          orderBy: { order: 'asc' },
        },
      },
    });

    if (!course) {
      res.status(404).json({ message: 'Kurset blev ikke fundet' });
      return;
    }

    res.status(200).json(course);
  } catch (error) {
    console.error(`Fejl ved hentning af kursus med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af kurset' });
  }
};

/**
 * Henter et specifikt kursus ud fra slug
 */
export const getCourseBySlug = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { slug } = req.params;

  try {
    const course = await prisma.course.findUnique({
      where: { slug },
      include: {
        subjectArea: true,
        modules: {
          orderBy: { order: 'asc' },
        },
      },
    });

    if (!course) {
      res.status(404).json({ message: 'Kurset blev ikke fundet' });
      return;
    }

    res.status(200).json(course);
  } catch (error) {
    console.error(`Fejl ved hentning af kursus med slug ${slug}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af kurset' });
  }
};

/**
 * Opretter et nyt kursus
 */
export const createCourse = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { title, description, slug, subjectAreaId }: CreateCourseInput =
    req.body;

  try {
    // Tjek om fagområdet eksisterer
    const subjectArea = await prisma.subjectArea.findUnique({
      where: { id: subjectAreaId },
    });

    if (!subjectArea) {
      res.status(404).json({ message: 'Det angivne fagområde findes ikke' });
      return;
    }

    // Tjek om slug allerede eksisterer
    const existingCourse = await prisma.course.findUnique({
      where: { slug },
    });

    if (existingCourse) {
      res
        .status(400)
        .json({ message: 'Et kursus med dette slug eksisterer allerede' });
      return;
    }

    const newCourse = await prisma.course.create({
      data: {
        title,
        description,
        slug,
        subjectAreaId,
      },
    });

    res.status(201).json(newCourse);
  } catch (error) {
    console.error('Fejl ved oprettelse af kursus:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved oprettelse af kurset' });
  }
};

/**
 * Opdaterer et eksisterende kursus
 */
export const updateCourse = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const { title, description, slug, subjectAreaId } = req.body;

  try {
    // Tjek om kurset eksisterer
    const existingCourse = await prisma.course.findUnique({
      where: { id: Number(id) },
    });

    if (!existingCourse) {
      res.status(404).json({ message: 'Kurset blev ikke fundet' });
      return;
    }

    // Hvis subjectAreaId ændres, tjek om det nye fagområde eksisterer
    if (subjectAreaId && subjectAreaId !== existingCourse.subjectAreaId) {
      const subjectArea = await prisma.subjectArea.findUnique({
        where: { id: subjectAreaId },
      });

      if (!subjectArea) {
        res.status(404).json({ message: 'Det angivne fagområde findes ikke' });
        return;
      }
    }

    // Hvis slug ændres, tjek om det nye slug allerede er i brug
    if (slug && slug !== existingCourse.slug) {
      const slugExists = await prisma.course.findUnique({
        where: { slug },
      });

      if (slugExists) {
        res
          .status(400)
          .json({ message: 'Et kursus med dette slug eksisterer allerede' });
        return;
      }
    }

    const updatedCourse = await prisma.course.update({
      where: { id: Number(id) },
      data: {
        title: title || existingCourse.title,
        description: description || existingCourse.description,
        slug: slug || existingCourse.slug,
        subjectAreaId: subjectAreaId || existingCourse.subjectAreaId,
      },
    });

    res.status(200).json(updatedCourse);
  } catch (error) {
    console.error(`Fejl ved opdatering af kursus med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved opdatering af kurset' });
  }
};

/**
 * Sletter et kursus
 */
export const deleteCourse = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    // Tjek om kurset eksisterer
    const existingCourse = await prisma.course.findUnique({
      where: { id: Number(id) },
      include: { modules: true },
    });

    if (!existingCourse) {
      res.status(404).json({ message: 'Kurset blev ikke fundet' });
      return;
    }

    // Tjek om der er moduler tilknyttet kurset
    if (existingCourse.modules.length > 0) {
      res.status(400).json({
        message:
          'Kurset kan ikke slettes, da der er moduler tilknyttet. Slet venligst modulerne først.',
      });
      return;
    }

    await prisma.course.delete({
      where: { id: Number(id) },
    });

    res.status(200).json({ message: 'Kurset blev slettet' });
  } catch (error) {
    console.error(`Fejl ved sletning af kursus med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved sletning af kurset' });
  }
};
</file>

<file path="apps/api/src/controllers/lesson.controller.ts">
// apps/api/src/controllers/lesson.controller.ts

import { Request, Response } from 'express';
import { PrismaClient } from '@prisma/client';
import { CreateLessonInput } from '@repo/core';

const prisma = new PrismaClient();

/**
 * Henter alle lektioner for et specifikt modul
 */
export const getLessonsByModule = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { moduleId } = req.params;

  try {
    const lessons = await prisma.lesson.findMany({
      where: { moduleId: Number(moduleId) },
      orderBy: { order: 'asc' },
    });

    res.status(200).json(lessons);
  } catch (error) {
    console.error(
      `Fejl ved hentning af lektioner for modul ${moduleId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af lektioner' });
  }
};

/**
 * Henter en specifik lektion ud fra ID
 */
export const getLessonById = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    const lesson = await prisma.lesson.findUnique({
      where: { id: Number(id) },
      include: {
        module: {
          include: {
            course: {
              include: {
                subjectArea: true,
              },
            },
          },
        },
        contentBlocks: {
          orderBy: { order: 'asc' },
        },
        quizzes: true,
      },
    });

    if (!lesson) {
      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
      return;
    }

    res.status(200).json(lesson);
  } catch (error) {
    console.error(`Fejl ved hentning af lektion med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af lektionen' });
  }
};

/**
 * Opretter en ny lektion
 */
export const createLesson = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { title, description, order, moduleId }: CreateLessonInput = req.body;

  try {
    // Tjek om modulet eksisterer
    const module = await prisma.module.findUnique({
      where: { id: moduleId },
    });

    if (!module) {
      res.status(404).json({ message: 'Det angivne modul findes ikke' });
      return;
    }

    // Hvis der ikke er angivet en rækkefølge, sæt den til at være efter den sidste lektion
    let lessonOrder = order;
    if (lessonOrder === undefined) {
      const lastLesson = await prisma.lesson.findFirst({
        where: { moduleId },
        orderBy: { order: 'desc' },
      });

      lessonOrder = lastLesson ? lastLesson.order + 1 : 1;
    }

    const newLesson = await prisma.lesson.create({
      data: {
        title,
        description,
        order: lessonOrder,
        moduleId,
      },
    });

    res.status(201).json(newLesson);
  } catch (error) {
    console.error('Fejl ved oprettelse af lektion:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved oprettelse af lektionen' });
  }
};

/**
 * Opdaterer en eksisterende lektion
 */
export const updateLesson = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const { title, description, order, moduleId } = req.body;

  try {
    // Tjek om lektionen eksisterer
    const existingLesson = await prisma.lesson.findUnique({
      where: { id: Number(id) },
    });

    if (!existingLesson) {
      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
      return;
    }

    // Hvis moduleId ændres, tjek om det nye modul eksisterer
    if (moduleId && moduleId !== existingLesson.moduleId) {
      const module = await prisma.module.findUnique({
        where: { id: moduleId },
      });

      if (!module) {
        res.status(404).json({ message: 'Det angivne modul findes ikke' });
        return;
      }
    }

    const updatedLesson = await prisma.lesson.update({
      where: { id: Number(id) },
      data: {
        title: title || existingLesson.title,
        description: description || existingLesson.description,
        order: order !== undefined ? order : existingLesson.order,
        moduleId: moduleId || existingLesson.moduleId,
      },
    });

    res.status(200).json(updatedLesson);
  } catch (error) {
    console.error(`Fejl ved opdatering af lektion med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved opdatering af lektionen' });
  }
};

/**
 * Opdaterer rækkefølgen af lektioner i et modul
 */
export const updateLessonsOrder = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { moduleId } = req.params;
  const { lessonIds } = req.body;

  if (!Array.isArray(lessonIds)) {
    res
      .status(400)
      .json({ message: "lessonIds skal være et array af lektion-ID'er" });
    return;
  }

  try {
    // Tjek om modulet eksisterer
    const module = await prisma.module.findUnique({
      where: { id: Number(moduleId) },
      include: { lessons: true },
    });

    if (!module) {
      res.status(404).json({ message: 'Modulet blev ikke fundet' });
      return;
    }

    // Tjek om alle lektioner tilhører modulet
    const moduleLessonIds = module.lessons.map((lesson) => lesson.id);
    const allLessonsExist = lessonIds.every((id) =>
      moduleLessonIds.includes(Number(id)),
    );

    if (!allLessonsExist) {
      res.status(400).json({
        message: 'En eller flere lektioner tilhører ikke det angivne modul',
      });
      return;
    }

    // Opdater rækkefølgen af lektioner
    const updates = lessonIds.map((lessonId, index) => {
      return prisma.lesson.update({
        where: { id: Number(lessonId) },
        data: { order: index + 1 },
      });
    });

    await prisma.$transaction(updates);

    const updatedLessons = await prisma.lesson.findMany({
      where: { moduleId: Number(moduleId) },
      orderBy: { order: 'asc' },
    });

    res.status(200).json(updatedLessons);
  } catch (error) {
    console.error(
      `Fejl ved opdatering af lektionsrækkefølge for modul ${moduleId}:`,
      error,
    );
    res.status(500).json({
      message: 'Der opstod en fejl ved opdatering af lektionsrækkefølgen',
    });
  }
};

/**
 * Sletter en lektion
 */
export const deleteLesson = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    // Tjek om lektionen eksisterer
    const existingLesson = await prisma.lesson.findUnique({
      where: { id: Number(id) },
      include: { contentBlocks: true, quizzes: true },
    });

    if (!existingLesson) {
      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
      return;
    }

    // Tjek om der er indholdsblokke eller quizzer tilknyttet lektionen
    if (
      existingLesson.contentBlocks.length > 0 ||
      existingLesson.quizzes.length > 0
    ) {
      res.status(400).json({
        message:
          'Lektionen kan ikke slettes, da der er indholdsblokke eller quizzer tilknyttet. Slet venligst disse først.',
      });
      return;
    }

    await prisma.lesson.delete({
      where: { id: Number(id) },
    });

    // Opdater rækkefølgen af de resterende lektioner
    const remainingLessons = await prisma.lesson.findMany({
      where: { moduleId: existingLesson.moduleId },
      orderBy: { order: 'asc' },
    });

    const updates = remainingLessons.map((lesson, index) => {
      return prisma.lesson.update({
        where: { id: lesson.id },
        data: { order: index + 1 },
      });
    });

    await prisma.$transaction(updates);

    res.status(200).json({ message: 'Lektionen blev slettet' });
  } catch (error) {
    console.error(`Fejl ved sletning af lektion med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved sletning af lektionen' });
  }
};
</file>

<file path="apps/api/src/controllers/module.controller.ts">
// apps/api/src/controllers/module.controller.ts

import { Request, Response } from 'express';
import { PrismaClient } from '@prisma/client';
import { CreateModuleInput } from '@repo/core';

const prisma = new PrismaClient();

/**
 * Henter alle moduler for et specifikt kursus
 */
export const getModulesByCourse = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { courseId } = req.params;

  try {
    const modules = await prisma.module.findMany({
      where: { courseId: Number(courseId) },
      orderBy: { order: 'asc' },
    });

    res.status(200).json(modules);
  } catch (error) {
    console.error(
      `Fejl ved hentning af moduler for kursus ${courseId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af moduler' });
  }
};

/**
 * Henter et specifikt modul ud fra ID
 */
export const getModuleById = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    const module = await prisma.module.findUnique({
      where: { id: Number(id) },
      include: {
        course: true,
        lessons: {
          orderBy: { order: 'asc' },
        },
        quizzes: true,
      },
    });

    if (!module) {
      res.status(404).json({ message: 'Modulet blev ikke fundet' });
      return;
    }

    res.status(200).json(module);
  } catch (error) {
    console.error(`Fejl ved hentning af modul med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af modulet' });
  }
};

/**
 * Opretter et nyt modul
 */
export const createModule = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { title, description, order, courseId }: CreateModuleInput = req.body;

  try {
    // Tjek om kurset eksisterer
    const course = await prisma.course.findUnique({
      where: { id: courseId },
    });

    if (!course) {
      res.status(404).json({ message: 'Det angivne kursus findes ikke' });
      return;
    }

    // Hvis der ikke er angivet en rækkefølge, sæt den til at være efter det sidste modul
    let moduleOrder = order;
    if (moduleOrder === undefined) {
      const lastModule = await prisma.module.findFirst({
        where: { courseId },
        orderBy: { order: 'desc' },
      });

      moduleOrder = lastModule ? lastModule.order + 1 : 1;
    }

    const newModule = await prisma.module.create({
      data: {
        title,
        description,
        order: moduleOrder,
        courseId,
      },
    });

    res.status(201).json(newModule);
  } catch (error) {
    console.error('Fejl ved oprettelse af modul:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved oprettelse af modulet' });
  }
};

/**
 * Opdaterer et eksisterende modul
 */
export const updateModule = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const { title, description, order, courseId } = req.body;

  try {
    // Tjek om modulet eksisterer
    const existingModule = await prisma.module.findUnique({
      where: { id: Number(id) },
    });

    if (!existingModule) {
      res.status(404).json({ message: 'Modulet blev ikke fundet' });
      return;
    }

    // Hvis courseId ændres, tjek om det nye kursus eksisterer
    if (courseId && courseId !== existingModule.courseId) {
      const course = await prisma.course.findUnique({
        where: { id: courseId },
      });

      if (!course) {
        res.status(404).json({ message: 'Det angivne kursus findes ikke' });
        return;
      }
    }

    const updatedModule = await prisma.module.update({
      where: { id: Number(id) },
      data: {
        title: title || existingModule.title,
        description: description || existingModule.description,
        order: order !== undefined ? order : existingModule.order,
        courseId: courseId || existingModule.courseId,
      },
    });

    res.status(200).json(updatedModule);
  } catch (error) {
    console.error(`Fejl ved opdatering af modul med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved opdatering af modulet' });
  }
};

/**
 * Opdaterer rækkefølgen af moduler i et kursus
 */
export const updateModulesOrder = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { courseId } = req.params;
  const { moduleIds } = req.body;

  if (!Array.isArray(moduleIds)) {
    res
      .status(400)
      .json({ message: "moduleIds skal være et array af modul-ID'er" });
    return;
  }

  try {
    // Tjek om kurset eksisterer
    const course = await prisma.course.findUnique({
      where: { id: Number(courseId) },
      include: { modules: true },
    });

    if (!course) {
      res.status(404).json({ message: 'Kurset blev ikke fundet' });
      return;
    }

    // Tjek om alle moduler tilhører kurset
    const courseModuleIds = course.modules.map((module) => module.id);
    const allModulesExist = moduleIds.every((id) =>
      courseModuleIds.includes(Number(id)),
    );

    if (!allModulesExist) {
      res.status(400).json({
        message: 'Et eller flere moduler tilhører ikke det angivne kursus',
      });
      return;
    }

    // Opdater rækkefølgen af moduler
    const updates = moduleIds.map((moduleId, index) => {
      return prisma.module.update({
        where: { id: Number(moduleId) },
        data: { order: index + 1 },
      });
    });

    await prisma.$transaction(updates);

    const updatedModules = await prisma.module.findMany({
      where: { courseId: Number(courseId) },
      orderBy: { order: 'asc' },
    });

    res.status(200).json(updatedModules);
  } catch (error) {
    console.error(
      `Fejl ved opdatering af modulrækkefølge for kursus ${courseId}:`,
      error,
    );
    res.status(500).json({
      message: 'Der opstod en fejl ved opdatering af modulrækkefølgen',
    });
  }
};

/**
 * Sletter et modul
 */
export const deleteModule = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    // Tjek om modulet eksisterer
    const existingModule = await prisma.module.findUnique({
      where: { id: Number(id) },
      include: { lessons: true, quizzes: true },
    });

    if (!existingModule) {
      res.status(404).json({ message: 'Modulet blev ikke fundet' });
      return;
    }

    // Tjek om der er lektioner eller quizzer tilknyttet modulet
    if (
      existingModule.lessons.length > 0 ||
      existingModule.quizzes.length > 0
    ) {
      res.status(400).json({
        message:
          'Modulet kan ikke slettes, da der er lektioner eller quizzer tilknyttet. Slet venligst disse først.',
      });
      return;
    }

    await prisma.module.delete({
      where: { id: Number(id) },
    });

    // Opdater rækkefølgen af de resterende moduler
    const remainingModules = await prisma.module.findMany({
      where: { courseId: existingModule.courseId },
      orderBy: { order: 'asc' },
    });

    const updates = remainingModules.map((module, index) => {
      return prisma.module.update({
        where: { id: module.id },
        data: { order: index + 1 },
      });
    });

    await prisma.$transaction(updates);

    res.status(200).json({ message: 'Modulet blev slettet' });
  } catch (error) {
    console.error(`Fejl ved sletning af modul med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved sletning af modulet' });
  }
};
</file>

<file path="apps/api/src/controllers/quiz.controller.ts">
// apps/api/src/controllers/quiz.controller.ts

import { Request, Response } from 'express';
import { PrismaClient, QuestionType } from '@prisma/client';
import {
  CreateQuizInput,
  CreateQuestionInput,
  CreateAnswerOptionInput,
} from '@repo/core';

const prisma = new PrismaClient();

/**
 * Henter alle quizzer
 */
export const getAllQuizzes = async (
  req: Request,
  res: Response,
): Promise<void> => {
  try {
    const quizzes = await prisma.quiz.findMany({
      include: {
        lesson: true,
        module: true,
        questions: {
          include: {
            _count: {
              select: { answerOptions: true },
            },
          },
        },
        _count: {
          select: { questions: true },
        },
      },
      orderBy: { title: 'asc' },
    });

    res.status(200).json(quizzes);
  } catch (error) {
    console.error('Fejl ved hentning af quizzer:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af quizzer' });
  }
};

/**
 * Henter quizzer for en specifik lektion
 */
export const getQuizzesByLesson = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { lessonId } = req.params;

  try {
    const quizzes = await prisma.quiz.findMany({
      where: { lessonId: Number(lessonId) },
      include: {
        questions: {
          include: {
            _count: {
              select: { answerOptions: true },
            },
          },
        },
        _count: {
          select: { questions: true },
        },
      },
      orderBy: { title: 'asc' },
    });

    res.status(200).json(quizzes);
  } catch (error) {
    console.error(
      `Fejl ved hentning af quizzer for lektion ${lessonId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af quizzer' });
  }
};

/**
 * Henter quizzer for et specifikt modul
 */
export const getQuizzesByModule = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { moduleId } = req.params;

  try {
    const quizzes = await prisma.quiz.findMany({
      where: { moduleId: Number(moduleId) },
      include: {
        questions: {
          include: {
            _count: {
              select: { answerOptions: true },
            },
          },
        },
        _count: {
          select: { questions: true },
        },
      },
      orderBy: { title: 'asc' },
    });

    res.status(200).json(quizzes);
  } catch (error) {
    console.error(`Fejl ved hentning af quizzer for modul ${moduleId}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af quizzer' });
  }
};

/**
 * Henter en specifik quiz ud fra ID
 */
export const getQuizById = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    const quiz = await prisma.quiz.findUnique({
      where: { id: Number(id) },
      include: {
        lesson: true,
        module: true,
        questions: {
          include: {
            answerOptions: true,
          },
          orderBy: { id: 'asc' },
        },
      },
    });

    if (!quiz) {
      res.status(404).json({ message: 'Quizzen blev ikke fundet' });
      return;
    }

    res.status(200).json(quiz);
  } catch (error) {
    console.error(`Fejl ved hentning af quiz med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af quizzen' });
  }
};

/**
 * Opretter en ny quiz
 */
export const createQuiz = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { title, description, lessonId, moduleId }: CreateQuizInput = req.body;

  try {
    // Tjek om enten lektion eller modul er angivet
    if (!lessonId && !moduleId) {
      res
        .status(400)
        .json({ message: 'Enten lessonId eller moduleId skal angives' });
      return;
    }

    // Tjek om lektionen eksisterer, hvis angivet
    if (lessonId) {
      const lesson = await prisma.lesson.findUnique({
        where: { id: lessonId },
      });

      if (!lesson) {
        res.status(404).json({ message: 'Den angivne lektion findes ikke' });
        return;
      }
    }

    // Tjek om modulet eksisterer, hvis angivet
    if (moduleId) {
      const module = await prisma.module.findUnique({
        where: { id: moduleId },
      });

      if (!module) {
        res.status(404).json({ message: 'Det angivne modul findes ikke' });
        return;
      }
    }

    const newQuiz = await prisma.quiz.create({
      data: {
        title,
        description,
        lessonId: lessonId || null,
        moduleId: moduleId || null,
      },
    });

    res.status(201).json(newQuiz);
  } catch (error) {
    console.error('Fejl ved oprettelse af quiz:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved oprettelse af quizzen' });
  }
};

/**
 * Opdaterer en eksisterende quiz
 */
export const updateQuiz = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const { title, description, lessonId, moduleId } = req.body;

  try {
    // Tjek om quizzen eksisterer
    const existingQuiz = await prisma.quiz.findUnique({
      where: { id: Number(id) },
    });

    if (!existingQuiz) {
      res.status(404).json({ message: 'Quizzen blev ikke fundet' });
      return;
    }

    // Tjek om lektionen eksisterer, hvis angivet
    if (lessonId) {
      const lesson = await prisma.lesson.findUnique({
        where: { id: lessonId },
      });

      if (!lesson) {
        res.status(404).json({ message: 'Den angivne lektion findes ikke' });
        return;
      }
    }

    // Tjek om modulet eksisterer, hvis angivet
    if (moduleId) {
      const module = await prisma.module.findUnique({
        where: { id: moduleId },
      });

      if (!module) {
        res.status(404).json({ message: 'Det angivne modul findes ikke' });
        return;
      }
    }

    const updatedQuiz = await prisma.quiz.update({
      where: { id: Number(id) },
      data: {
        title: title || existingQuiz.title,
        description: description || existingQuiz.description,
        lessonId: lessonId !== undefined ? lessonId : existingQuiz.lessonId,
        moduleId: moduleId !== undefined ? moduleId : existingQuiz.moduleId,
      },
    });

    res.status(200).json(updatedQuiz);
  } catch (error) {
    console.error(`Fejl ved opdatering af quiz med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved opdatering af quizzen' });
  }
};

/**
 * Sletter en quiz
 */
export const deleteQuiz = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    // Tjek om quizzen eksisterer
    const existingQuiz = await prisma.quiz.findUnique({
      where: { id: Number(id) },
      include: {
        questions: {
          include: {
            answerOptions: true,
          },
        },
        attempts: true,
      },
    });

    if (!existingQuiz) {
      res.status(404).json({ message: 'Quizzen blev ikke fundet' });
      return;
    }

    // Tjek om der er quiz-forsøg tilknyttet quizzen
    if (existingQuiz.attempts.length > 0) {
      res.status(400).json({
        message: 'Quizzen kan ikke slettes, da der er quiz-forsøg tilknyttet.',
      });
      return;
    }

    // Slet alle svarmuligheder for alle spørgsmål i quizzen
    for (const question of existingQuiz.questions) {
      if (question.answerOptions.length > 0) {
        await prisma.answerOption.deleteMany({
          where: { questionId: question.id },
        });
      }
    }

    // Slet alle spørgsmål i quizzen
    if (existingQuiz.questions.length > 0) {
      await prisma.question.deleteMany({
        where: { quizId: Number(id) },
      });
    }

    // Slet quizzen
    await prisma.quiz.delete({
      where: { id: Number(id) },
    });

    res.status(200).json({ message: 'Quizzen blev slettet' });
  } catch (error) {
    console.error(`Fejl ved sletning af quiz med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved sletning af quizzen' });
  }
};

/**
 * Opretter et nyt spørgsmål til en quiz
 */
export const createQuestion = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { text, type, quizId, answerOptions }: CreateQuestionInput = req.body;

  try {
    // Tjek om quizzen eksisterer
    const quiz = await prisma.quiz.findUnique({
      where: { id: quizId },
    });

    if (!quiz) {
      res.status(404).json({ message: 'Den angivne quiz findes ikke' });
      return;
    }

    // Valider spørgsmålstypen
    if (!Object.values(QuestionType).includes(type as QuestionType)) {
      res.status(400).json({ message: 'Ugyldig spørgsmålstype' });
      return;
    }

    // Opret spørgsmålet
    const newQuestion = await prisma.question.create({
      data: {
        text,
        type: type as QuestionType,
        quizId,
      },
    });

    // Opret svarmuligheder, hvis de er angivet
    if (answerOptions && answerOptions.length > 0) {
      const answerOptionPromises = answerOptions.map((option) => {
        return prisma.answerOption.create({
          data: {
            text: option.text,
            isCorrect: option.isCorrect,
            questionId: newQuestion.id,
          },
        });
      });

      await Promise.all(answerOptionPromises);
    }

    // Hent det oprettede spørgsmål med svarmuligheder
    const questionWithOptions = await prisma.question.findUnique({
      where: { id: newQuestion.id },
      include: { answerOptions: true },
    });

    res.status(201).json(questionWithOptions);
  } catch (error) {
    console.error('Fejl ved oprettelse af spørgsmål:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved oprettelse af spørgsmålet' });
  }
};

/**
 * Opdaterer et eksisterende spørgsmål
 */
export const updateQuestion = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const { text, type } = req.body;

  try {
    // Tjek om spørgsmålet eksisterer
    const existingQuestion = await prisma.question.findUnique({
      where: { id: Number(id) },
    });

    if (!existingQuestion) {
      res.status(404).json({ message: 'Spørgsmålet blev ikke fundet' });
      return;
    }

    // Valider spørgsmålstypen hvis den ændres
    if (type && type !== existingQuestion.type) {
      if (!Object.values(QuestionType).includes(type as QuestionType)) {
        res.status(400).json({ message: 'Ugyldig spørgsmålstype' });
        return;
      }
    }

    const updatedQuestion = await prisma.question.update({
      where: { id: Number(id) },
      data: {
        text: text || existingQuestion.text,
        type: type ? (type as QuestionType) : existingQuestion.type,
      },
      include: { answerOptions: true },
    });

    res.status(200).json(updatedQuestion);
  } catch (error) {
    console.error(`Fejl ved opdatering af spørgsmål med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved opdatering af spørgsmålet' });
  }
};

/**
 * Sletter et spørgsmål
 */
export const deleteQuestion = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    // Tjek om spørgsmålet eksisterer
    const existingQuestion = await prisma.question.findUnique({
      where: { id: Number(id) },
      include: { answerOptions: true, userAnswers: true },
    });

    if (!existingQuestion) {
      res.status(404).json({ message: 'Spørgsmålet blev ikke fundet' });
      return;
    }

    // Tjek om der er brugerbesvarelser tilknyttet spørgsmålet
    if (existingQuestion.userAnswers.length > 0) {
      res.status(400).json({
        message:
          'Spørgsmålet kan ikke slettes, da der er brugerbesvarelser tilknyttet.',
      });
      return;
    }

    // Slet alle svarmuligheder for spørgsmålet
    if (existingQuestion.answerOptions.length > 0) {
      await prisma.answerOption.deleteMany({
        where: { questionId: Number(id) },
      });
    }

    // Slet spørgsmålet
    await prisma.question.delete({
      where: { id: Number(id) },
    });

    res.status(200).json({ message: 'Spørgsmålet blev slettet' });
  } catch (error) {
    console.error(`Fejl ved sletning af spørgsmål med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved sletning af spørgsmålet' });
  }
};

/**
 * Opretter en ny svarmulighed til et spørgsmål
 */
export const createAnswerOption = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { questionId } = req.params;
  const { text, isCorrect }: CreateAnswerOptionInput = req.body;

  try {
    // Tjek om spørgsmålet eksisterer
    const question = await prisma.question.findUnique({
      where: { id: Number(questionId) },
    });

    if (!question) {
      res.status(404).json({ message: 'Det angivne spørgsmål findes ikke' });
      return;
    }

    const newAnswerOption = await prisma.answerOption.create({
      data: {
        text,
        isCorrect,
        questionId: Number(questionId),
      },
    });

    res.status(201).json(newAnswerOption);
  } catch (error) {
    console.error(
      `Fejl ved oprettelse af svarmulighed for spørgsmål ${questionId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved oprettelse af svarmuligheden' });
  }
};

/**
 * Opdaterer en eksisterende svarmulighed
 */
export const updateAnswerOption = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const { text, isCorrect } = req.body;

  try {
    // Tjek om svarmuligheden eksisterer
    const existingAnswerOption = await prisma.answerOption.findUnique({
      where: { id: Number(id) },
    });

    if (!existingAnswerOption) {
      res.status(404).json({ message: 'Svarmuligheden blev ikke fundet' });
      return;
    }

    const updatedAnswerOption = await prisma.answerOption.update({
      where: { id: Number(id) },
      data: {
        text: text || existingAnswerOption.text,
        isCorrect:
          isCorrect !== undefined ? isCorrect : existingAnswerOption.isCorrect,
      },
    });

    res.status(200).json(updatedAnswerOption);
  } catch (error) {
    console.error(`Fejl ved opdatering af svarmulighed med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved opdatering af svarmuligheden' });
  }
};

/**
 * Sletter en svarmulighed
 */
export const deleteAnswerOption = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    // Tjek om svarmuligheden eksisterer
    const existingAnswerOption = await prisma.answerOption.findUnique({
      where: { id: Number(id) },
      include: { userAnswers: true },
    });

    if (!existingAnswerOption) {
      res.status(404).json({ message: 'Svarmuligheden blev ikke fundet' });
      return;
    }

    // Tjek om der er brugerbesvarelser tilknyttet svarmuligheden
    if (existingAnswerOption.userAnswers.length > 0) {
      res.status(400).json({
        message:
          'Svarmuligheden kan ikke slettes, da der er brugerbesvarelser tilknyttet.',
      });
      return;
    }

    await prisma.answerOption.delete({
      where: { id: Number(id) },
    });

    res.status(200).json({ message: 'Svarmuligheden blev slettet' });
  } catch (error) {
    console.error(`Fejl ved sletning af svarmulighed med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved sletning af svarmuligheden' });
  }
};
</file>

<file path="apps/api/src/controllers/quizAttempt.controller.ts">
// apps/api/src/controllers/quizAttempt.controller.ts

import { Request, Response } from 'express';
import { PrismaClient, ProgressStatus } from '@prisma/client';
import {
  StartQuizAttemptInput,
  SubmitAnswerInput,
  CompleteQuizAttemptInput,
  User,
} from '@repo/core';

const prisma = new PrismaClient();

/**
 * Henter alle quiz-forsøg for en bruger
 */
export const getUserQuizAttempts = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  try {
    const quizAttempts = await prisma.quizAttempt.findMany({
      where: { userId },
      include: {
        quiz: true,
        _count: {
          select: { userAnswers: true },
        },
      },
      orderBy: { startedAt: 'desc' },
    });

    res.status(200).json(quizAttempts);
  } catch (error) {
    console.error(
      `Fejl ved hentning af quiz-forsøg for bruger ${userId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af quiz-forsøg' });
  }
};

/**
 * Henter et specifikt quiz-forsøg ud fra ID
 */
export const getQuizAttemptById = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  try {
    const quizAttempt = await prisma.quizAttempt.findUnique({
      where: { id: Number(id) },
      include: {
        quiz: {
          include: {
            questions: {
              include: {
                answerOptions: true,
              },
            },
          },
        },
        userAnswers: {
          include: {
            question: true,
            selectedAnswerOption: true,
          },
        },
      },
    });

    if (!quizAttempt) {
      res.status(404).json({ message: 'Quiz-forsøget blev ikke fundet' });
      return;
    }

    // Tjek om quiz-forsøget tilhører den aktuelle bruger
    if (quizAttempt.userId !== userId) {
      res
        .status(403)
        .json({ message: 'Du har ikke adgang til dette quiz-forsøg' });
      return;
    }

    res.status(200).json(quizAttempt);
  } catch (error) {
    console.error(`Fejl ved hentning af quiz-forsøg med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af quiz-forsøget' });
  }
};

/**
 * Starter et nyt quiz-forsøg
 */
export const startQuizAttempt = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { quizId }: StartQuizAttemptInput = req.body;
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  try {
    // Tjek om quizzen eksisterer
    const quiz = await prisma.quiz.findUnique({
      where: { id: quizId },
      include: { questions: true },
    });

    if (!quiz) {
      res.status(404).json({ message: 'Den angivne quiz findes ikke' });
      return;
    }

    // Tjek om quizzen har spørgsmål
    if (quiz.questions.length === 0) {
      res.status(400).json({ message: 'Quizzen har ingen spørgsmål' });
      return;
    }

    // Opret et nyt quiz-forsøg
    const newQuizAttempt = await prisma.quizAttempt.create({
      data: {
        userId,
        quizId,
        score: 0,
        startedAt: new Date(),
      },
    });

    // Opdater eller opret brugerens fremskridt for denne quiz
    const existingProgress = await prisma.userProgress.findFirst({
      where: {
        userId,
        quizId,
      },
    });

    if (existingProgress) {
      await prisma.userProgress.update({
        where: { id: existingProgress.id },
        data: {
          status: ProgressStatus.IN_PROGRESS,
          quizAttemptId: newQuizAttempt.id,
        },
      });
    } else {
      await prisma.userProgress.create({
        data: {
          userId,
          quizId,
          status: ProgressStatus.IN_PROGRESS,
          quizAttemptId: newQuizAttempt.id,
        },
      });
    }

    res.status(201).json(newQuizAttempt);
  } catch (error) {
    console.error(`Fejl ved start af quiz-forsøg for quiz ${quizId}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved start af quiz-forsøget' });
  }
};

/**
 * Indsender et svar på et spørgsmål i et quiz-forsøg
 */
export const submitAnswer = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const {
    quizAttemptId,
    questionId,
    selectedAnswerOptionId,
    inputText,
  }: SubmitAnswerInput = req.body;
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  try {
    // Tjek om quiz-forsøget eksisterer og tilhører brugeren
    const quizAttempt = await prisma.quizAttempt.findUnique({
      where: { id: quizAttemptId },
      include: { quiz: true },
    });

    if (!quizAttempt) {
      res.status(404).json({ message: 'Quiz-forsøget blev ikke fundet' });
      return;
    }

    if (quizAttempt.userId !== userId) {
      res
        .status(403)
        .json({ message: 'Du har ikke adgang til dette quiz-forsøg' });
      return;
    }

    // Tjek om quiz-forsøget er afsluttet
    if (quizAttempt.completedAt) {
      res.status(400).json({ message: 'Quiz-forsøget er allerede afsluttet' });
      return;
    }

    // Tjek om spørgsmålet eksisterer og tilhører quizzen
    const question = await prisma.question.findUnique({
      where: { id: questionId },
      include: { answerOptions: true },
    });

    if (!question) {
      res.status(404).json({ message: 'Spørgsmålet blev ikke fundet' });
      return;
    }

    if (question.quizId !== quizAttempt.quizId) {
      res.status(400).json({ message: 'Spørgsmålet tilhører ikke denne quiz' });
      return;
    }

    // Tjek om der allerede er et svar på dette spørgsmål i dette forsøg
    const existingAnswer = await prisma.userAnswer.findFirst({
      where: {
        quizAttemptId,
        questionId,
      },
    });

    // Hvis der er et eksisterende svar, opdater det
    if (existingAnswer) {
      const updatedAnswer = await prisma.userAnswer.update({
        where: { id: existingAnswer.id },
        data: {
          selectedAnswerOptionId: selectedAnswerOptionId || null,
          inputText: inputText || null,
        },
      });

      res.status(200).json(updatedAnswer);
      return;
    }

    // Ellers opret et nyt svar
    const newAnswer = await prisma.userAnswer.create({
      data: {
        quizAttemptId,
        questionId,
        selectedAnswerOptionId: selectedAnswerOptionId || null,
        inputText: inputText || null,
      },
    });

    res.status(201).json(newAnswer);
  } catch (error) {
    console.error(
      `Fejl ved indsendelse af svar for quiz-forsøg ${quizAttemptId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved indsendelse af svaret' });
  }
};

/**
 * Afslutter et quiz-forsøg og beregner scoren
 */
export const completeQuizAttempt = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { quizAttemptId }: CompleteQuizAttemptInput = req.body;
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  try {
    // Tjek om quiz-forsøget eksisterer og tilhører brugeren
    const quizAttempt = await prisma.quizAttempt.findUnique({
      where: { id: quizAttemptId },
      include: {
        quiz: {
          include: {
            questions: {
              include: {
                answerOptions: true,
              },
            },
          },
        },
        userAnswers: {
          include: {
            selectedAnswerOption: true,
          },
        },
      },
    });

    if (!quizAttempt) {
      res.status(404).json({ message: 'Quiz-forsøget blev ikke fundet' });
      return;
    }

    if (quizAttempt.userId !== userId) {
      res
        .status(403)
        .json({ message: 'Du har ikke adgang til dette quiz-forsøg' });
      return;
    }

    // Tjek om quiz-forsøget allerede er afsluttet
    if (quizAttempt.completedAt) {
      res.status(400).json({ message: 'Quiz-forsøget er allerede afsluttet' });
      return;
    }

    // Beregn scoren
    let score = 0;
    const totalQuestions = quizAttempt.quiz.questions.length;

    // For hvert spørgsmål, tjek om svaret er korrekt
    for (const question of quizAttempt.quiz.questions) {
      const userAnswer = quizAttempt.userAnswers.find(
        (answer) => answer.questionId === question.id,
      );

      if (
        userAnswer &&
        userAnswer.selectedAnswerOption &&
        userAnswer.selectedAnswerOption.isCorrect
      ) {
        score += 1;
      }
    }

    // Beregn procentvis score (0-100)
    const percentageScore =
      totalQuestions > 0 ? Math.round((score / totalQuestions) * 100) : 0;

    // Opdater quiz-forsøget med score og afslutningsdato
    const updatedQuizAttempt = await prisma.quizAttempt.update({
      where: { id: quizAttemptId },
      data: {
        score: percentageScore,
        completedAt: new Date(),
      },
    });

    // Opdater brugerens fremskridt for denne quiz
    await prisma.userProgress.updateMany({
      where: {
        userId,
        quizId: quizAttempt.quizId,
      },
      data: {
        status: ProgressStatus.COMPLETED,
        score: percentageScore,
      },
    });

    res.status(200).json({
      ...updatedQuizAttempt,
      totalQuestions,
      correctAnswers: score,
      percentageScore,
    });
  } catch (error) {
    console.error(
      `Fejl ved afslutning af quiz-forsøg ${quizAttemptId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved afslutning af quiz-forsøget' });
  }
};
</file>

<file path="apps/api/src/controllers/subjectArea.controller.ts">
// apps/api/src/controllers/subjectArea.controller.ts

import { Request, Response } from 'express';
import { PrismaClient } from '@prisma/client';
import { CreateSubjectAreaInput } from '@repo/core';

const prisma = new PrismaClient();

/**
 * Henter alle fagområder
 */
export const getAllSubjectAreas = async (
  req: Request,
  res: Response,
): Promise<void> => {
  try {
    const subjectAreas = await prisma.subjectArea.findMany({
      orderBy: { name: 'asc' },
    });

    res.status(200).json(subjectAreas);
  } catch (error) {
    console.error('Fejl ved hentning af fagområder:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af fagområder' });
  }
};

/**
 * Henter et specifikt fagområde ud fra ID
 */
export const getSubjectAreaById = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    const subjectArea = await prisma.subjectArea.findUnique({
      where: { id: Number(id) },
      include: { courses: true },
    });

    if (!subjectArea) {
      res.status(404).json({ message: 'Fagområdet blev ikke fundet' });
      return;
    }

    res.status(200).json(subjectArea);
  } catch (error) {
    console.error(`Fejl ved hentning af fagområde med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af fagområdet' });
  }
};

/**
 * Henter et specifikt fagområde ud fra slug
 */
export const getSubjectAreaBySlug = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { slug } = req.params;

  try {
    const subjectArea = await prisma.subjectArea.findUnique({
      where: { slug },
      include: { courses: true },
    });

    if (!subjectArea) {
      res.status(404).json({ message: 'Fagområdet blev ikke fundet' });
      return;
    }

    res.status(200).json(subjectArea);
  } catch (error) {
    console.error(`Fejl ved hentning af fagområde med slug ${slug}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af fagområdet' });
  }
};

/**
 * Opretter et nyt fagområde
 */
export const createSubjectArea = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { name, slug }: CreateSubjectAreaInput = req.body;

  try {
    // Tjek om slug allerede eksisterer
    const existingSubjectArea = await prisma.subjectArea.findUnique({
      where: { slug },
    });

    if (existingSubjectArea) {
      res
        .status(400)
        .json({ message: 'Et fagområde med dette slug eksisterer allerede' });
      return;
    }

    const newSubjectArea = await prisma.subjectArea.create({
      data: {
        name,
        slug,
      },
    });

    res.status(201).json(newSubjectArea);
  } catch (error) {
    console.error('Fejl ved oprettelse af fagområde:', error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved oprettelse af fagområdet' });
  }
};

/**
 * Opdaterer et eksisterende fagområde
 */
export const updateSubjectArea = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;
  const { name, slug } = req.body;

  try {
    // Tjek om fagområdet eksisterer
    const existingSubjectArea = await prisma.subjectArea.findUnique({
      where: { id: Number(id) },
    });

    if (!existingSubjectArea) {
      res.status(404).json({ message: 'Fagområdet blev ikke fundet' });
      return;
    }

    // Hvis slug ændres, tjek om det nye slug allerede er i brug
    if (slug && slug !== existingSubjectArea.slug) {
      const slugExists = await prisma.subjectArea.findUnique({
        where: { slug },
      });

      if (slugExists) {
        res
          .status(400)
          .json({ message: 'Et fagområde med dette slug eksisterer allerede' });
        return;
      }
    }

    const updatedSubjectArea = await prisma.subjectArea.update({
      where: { id: Number(id) },
      data: {
        name: name || existingSubjectArea.name,
        slug: slug || existingSubjectArea.slug,
      },
    });

    res.status(200).json(updatedSubjectArea);
  } catch (error) {
    console.error(`Fejl ved opdatering af fagområde med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved opdatering af fagområdet' });
  }
};

/**
 * Sletter et fagområde
 */
export const deleteSubjectArea = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { id } = req.params;

  try {
    // Tjek om fagområdet eksisterer
    const existingSubjectArea = await prisma.subjectArea.findUnique({
      where: { id: Number(id) },
      include: { courses: true },
    });

    if (!existingSubjectArea) {
      res.status(404).json({ message: 'Fagområdet blev ikke fundet' });
      return;
    }

    // Tjek om der er kurser tilknyttet fagområdet
    if (existingSubjectArea.courses.length > 0) {
      res.status(400).json({
        message:
          'Fagområdet kan ikke slettes, da der er kurser tilknyttet. Slet venligst kurserne først.',
      });
      return;
    }

    await prisma.subjectArea.delete({
      where: { id: Number(id) },
    });

    res.status(200).json({ message: 'Fagområdet blev slettet' });
  } catch (error) {
    console.error(`Fejl ved sletning af fagområde med id ${id}:`, error);
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved sletning af fagområdet' });
  }
};
</file>

<file path="apps/api/src/controllers/userProgress.controller.ts">
// apps/api/src/controllers/userProgress.controller.ts

import { Request, Response } from 'express';
import { PrismaClient, ProgressStatus } from '@prisma/client';
import { User, Role } from '@repo/core';

const prisma = new PrismaClient();

/**
 * Henter fremskridt for den aktuelle bruger
 */
export const getUserProgress = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  try {
    const progress = await prisma.userProgress.findMany({
      where: { userId },
      include: {
        lesson: {
          include: {
            module: {
              include: {
                course: {
                  include: {
                    subjectArea: true,
                  },
                },
              },
            },
          },
        },
        quiz: true,
        quizAttempt: true,
      },
    });

    res.status(200).json(progress);
  } catch (error) {
    console.error(
      `Fejl ved hentning af fremskridt for bruger ${userId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af fremskridt' });
  }
};

/**
 * Henter fremskridt for en specifik bruger (kun for admin)
 */
export const getUserProgressById = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { userId } = req.params;
  const currentUserId = (req.user as any)?.id as number;
  const isAdmin = (req.user as any)?.role === Role.ADMIN;

  if (!currentUserId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  // Kun admin kan se andre brugeres fremskridt
  if (Number(userId) !== currentUserId && !isAdmin) {
    res.status(403).json({
      message: 'Du har ikke tilladelse til at se denne brugers fremskridt',
    });
    return;
  }

  try {
    const progress = await prisma.userProgress.findMany({
      where: { userId: Number(userId) },
      include: {
        lesson: {
          include: {
            module: {
              include: {
                course: {
                  include: {
                    subjectArea: true,
                  },
                },
              },
            },
          },
        },
        quiz: true,
        quizAttempt: true,
      },
    });

    res.status(200).json(progress);
  } catch (error) {
    console.error(
      `Fejl ved hentning af fremskridt for bruger ${userId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af fremskridt' });
  }
};

/**
 * Henter fremskridt for en specifik lektion
 */
export const getLessonProgress = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { lessonId } = req.params;
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  try {
    // Tjek om lektionen eksisterer
    const lesson = await prisma.lesson.findUnique({
      where: { id: Number(lessonId) },
    });

    if (!lesson) {
      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
      return;
    }

    // Hent eller opret fremskridt for lektionen
    let progress = await prisma.userProgress.findFirst({
      where: {
        userId,
        lessonId: Number(lessonId),
      },
    });

    if (!progress) {
      // Hvis der ikke findes fremskridt, opret det med status NOT_STARTED
      progress = await prisma.userProgress.create({
        data: {
          userId,
          lessonId: Number(lessonId),
          status: ProgressStatus.NOT_STARTED,
        },
      });
    }

    res.status(200).json(progress);
  } catch (error) {
    console.error(
      `Fejl ved hentning af fremskridt for lektion ${lessonId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af fremskridt' });
  }
};

/**
 * Opdaterer fremskridt for en specifik lektion
 */
export const updateLessonProgress = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { lessonId } = req.params;
  const { status } = req.body;
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  // Valider status
  if (!Object.values(ProgressStatus).includes(status as ProgressStatus)) {
    res.status(400).json({ message: 'Ugyldig status' });
    return;
  }

  try {
    // Tjek om lektionen eksisterer
    const lesson = await prisma.lesson.findUnique({
      where: { id: Number(lessonId) },
    });

    if (!lesson) {
      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
      return;
    }

    // Opdater eller opret fremskridt for lektionen
    const existingProgress = await prisma.userProgress.findFirst({
      where: {
        userId,
        lessonId: Number(lessonId),
      },
    });

    let progress;
    if (existingProgress) {
      progress = await prisma.userProgress.update({
        where: { id: existingProgress.id },
        data: {
          status: status as ProgressStatus,
        },
      });
    } else {
      progress = await prisma.userProgress.create({
        data: {
          userId,
          lessonId: Number(lessonId),
          status: status as ProgressStatus,
        },
      });
    }

    res.status(200).json(progress);
  } catch (error) {
    console.error(
      `Fejl ved opdatering af fremskridt for lektion ${lessonId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved opdatering af fremskridt' });
  }
};

/**
 * Henter fremskridt for et specifikt kursus
 */
export const getCourseProgress = async (
  req: Request,
  res: Response,
): Promise<void> => {
  const { courseId } = req.params;
  const userId = (req.user as any)?.id as number;

  if (!userId) {
    res.status(401).json({ message: 'Ikke autoriseret' });
    return;
  }

  try {
    // Tjek om kurset eksisterer
    const course = await prisma.course.findUnique({
      where: { id: Number(courseId) },
      include: {
        modules: {
          include: {
            lessons: true,
            quizzes: true,
          },
        },
      },
    });

    if (!course) {
      res.status(404).json({ message: 'Kurset blev ikke fundet' });
      return;
    }

    // Hent alle lektioner og quizzer i kurset
    const lessonIds: number[] = [];
    const quizIds: number[] = [];

    course.modules.forEach((module) => {
      module.lessons.forEach((lesson) => lessonIds.push(lesson.id));
      module.quizzes.forEach((quiz) => quizIds.push(quiz.id));
    });

    // Hent fremskridt for alle lektioner og quizzer i kurset
    const progress = await prisma.userProgress.findMany({
      where: {
        userId,
        OR: [
          { lessonId: { in: lessonIds.length > 0 ? lessonIds : undefined } },
          { quizId: { in: quizIds.length > 0 ? quizIds : undefined } },
        ],
      },
    });

    // Beregn samlet fremskridt for kurset
    const totalItems = lessonIds.length + quizIds.length;
    const completedItems = progress.filter(
      (p) => p.status === ProgressStatus.COMPLETED,
    ).length;
    const inProgressItems = progress.filter(
      (p) => p.status === ProgressStatus.IN_PROGRESS,
    ).length;

    const percentageComplete =
      totalItems > 0 ? Math.round((completedItems / totalItems) * 100) : 0;

    res.status(200).json({
      courseId: Number(courseId),
      totalItems,
      completedItems,
      inProgressItems,
      percentageComplete,
      status:
        percentageComplete === 100
          ? ProgressStatus.COMPLETED
          : percentageComplete > 0
            ? ProgressStatus.IN_PROGRESS
            : ProgressStatus.NOT_STARTED,
      detailedProgress: progress,
    });
  } catch (error) {
    console.error(
      `Fejl ved hentning af fremskridt for kursus ${courseId}:`,
      error,
    );
    res
      .status(500)
      .json({ message: 'Der opstod en fejl ved hentning af fremskridt' });
  }
};
</file>

<file path="apps/api/src/middleware/auth.middleware.ts">
// apps/api/src/middleware/auth.middleware.ts

import { Request, Response, NextFunction } from 'express';
import { Role } from '@repo/core';
import jwt from 'jsonwebtoken';

// JWT authentication middleware
export const authenticateJWT = (
  req: Request,
  res: Response,
  next: NextFunction,
) => {
  const authHeader = req.headers.authorization;

  if (!authHeader) {
    return res
      .status(401)
      .json({ message: 'Adgang nægtet. Ingen token angivet.' });
  }

  const token = authHeader.split(' ')[1];

  try {
    const decoded = jwt.verify(
      token,
      process.env.JWT_SECRET || 'your-secret-key',
    );
    req.user = decoded as Express.User;
    next();
  } catch (error) {
    return res.status(403).json({ message: 'Ugyldig eller udløbet token.' });
  }
};

// Admin authorization middleware
export const authorizeAdmin = (
  req: Request,
  res: Response,
  next: NextFunction,
) => {
  if (!req.user) {
    return res
      .status(401)
      .json({ message: 'Adgang nægtet. Ikke autentificeret.' });
  }

  if ((req.user as any).role !== Role.ADMIN) {
    return res
      .status(403)
      .json({ message: 'Adgang nægtet. Kræver admin-rettigheder.' });
  }

  next();
};
</file>

<file path="apps/api/src/persistence/persistence.module.ts">
import { Module } from '@nestjs/common';
import { PrismaService } from './prisma/prisma.service';

@Module({
  providers: [PrismaService],
  exports: [PrismaService],
})
export class PersistenceModule {}
</file>

<file path="apps/api/src/routes/pensum.routes.ts">
// apps/api/src/routes/pensum.routes.ts

import express from 'express';
import * as subjectAreaController from '../controllers/subjectArea.controller';
import * as courseController from '../controllers/course.controller';
import * as moduleController from '../controllers/module.controller';
import * as lessonController from '../controllers/lesson.controller';
import * as contentBlockController from '../controllers/contentBlock.controller';
import { authenticateJWT, authorizeAdmin } from '../middleware/auth.middleware';

const router = express.Router();

// Subject Area routes
router.get('/subject-areas', subjectAreaController.getAllSubjectAreas);
router.get('/subject-areas/:id', subjectAreaController.getSubjectAreaById);
router.get(
  '/subject-areas/slug/:slug',
  subjectAreaController.getSubjectAreaBySlug,
);
router.post(
  '/subject-areas',
  authenticateJWT,
  authorizeAdmin,
  subjectAreaController.createSubjectArea,
);
router.put(
  '/subject-areas/:id',
  authenticateJWT,
  authorizeAdmin,
  subjectAreaController.updateSubjectArea,
);
router.delete(
  '/subject-areas/:id',
  authenticateJWT,
  authorizeAdmin,
  subjectAreaController.deleteSubjectArea,
);

// Course routes
router.get('/courses', courseController.getAllCourses);
router.get('/courses/:id', courseController.getCourseById);
router.get('/courses/slug/:slug', courseController.getCourseBySlug);
router.get(
  '/subject-areas/:subjectAreaId/courses',
  courseController.getCoursesBySubjectArea,
);
router.post(
  '/courses',
  authenticateJWT,
  authorizeAdmin,
  courseController.createCourse,
);
router.put(
  '/courses/:id',
  authenticateJWT,
  authorizeAdmin,
  courseController.updateCourse,
);
router.delete(
  '/courses/:id',
  authenticateJWT,
  authorizeAdmin,
  courseController.deleteCourse,
);

// Module routes
router.get('/courses/:courseId/modules', moduleController.getModulesByCourse);
router.get('/modules/:id', moduleController.getModuleById);
router.post(
  '/modules',
  authenticateJWT,
  authorizeAdmin,
  moduleController.createModule,
);
router.put(
  '/modules/:id',
  authenticateJWT,
  authorizeAdmin,
  moduleController.updateModule,
);
router.put(
  '/courses/:courseId/modules/order',
  authenticateJWT,
  authorizeAdmin,
  moduleController.updateModulesOrder,
);
router.delete(
  '/modules/:id',
  authenticateJWT,
  authorizeAdmin,
  moduleController.deleteModule,
);

// Lesson routes
router.get('/modules/:moduleId/lessons', lessonController.getLessonsByModule);
router.get('/lessons/:id', lessonController.getLessonById);
router.post(
  '/lessons',
  authenticateJWT,
  authorizeAdmin,
  lessonController.createLesson,
);
router.put(
  '/lessons/:id',
  authenticateJWT,
  authorizeAdmin,
  lessonController.updateLesson,
);
router.put(
  '/modules/:moduleId/lessons/order',
  authenticateJWT,
  authorizeAdmin,
  lessonController.updateLessonsOrder,
);
router.delete(
  '/lessons/:id',
  authenticateJWT,
  authorizeAdmin,
  lessonController.deleteLesson,
);

// Content Block routes
router.get(
  '/lessons/:lessonId/content-blocks',
  contentBlockController.getContentBlocksByLesson,
);
router.get('/content-blocks/:id', contentBlockController.getContentBlockById);
router.post(
  '/content-blocks',
  authenticateJWT,
  authorizeAdmin,
  contentBlockController.createContentBlock,
);
router.put(
  '/content-blocks/:id',
  authenticateJWT,
  authorizeAdmin,
  contentBlockController.updateContentBlock,
);
router.put(
  '/lessons/:lessonId/content-blocks/order',
  authenticateJWT,
  authorizeAdmin,
  contentBlockController.updateContentBlocksOrder,
);
router.delete(
  '/content-blocks/:id',
  authenticateJWT,
  authorizeAdmin,
  contentBlockController.deleteContentBlock,
);

export default router;
</file>

<file path="apps/api/src/routes/quiz.routes.ts">
// apps/api/src/routes/quiz.routes.ts

import express from 'express';
import * as quizController from '../controllers/quiz.controller';
import * as quizAttemptController from '../controllers/quizAttempt.controller';
import * as userProgressController from '../controllers/userProgress.controller';
import { authenticateJWT, authorizeAdmin } from '../middleware/auth.middleware';

const router = express.Router();

// Quiz routes
router.get('/quizzes', quizController.getAllQuizzes);
router.get('/lessons/:lessonId/quizzes', quizController.getQuizzesByLesson);
router.get('/modules/:moduleId/quizzes', quizController.getQuizzesByModule);
router.get('/quizzes/:id', quizController.getQuizById);
router.post(
  '/quizzes',
  authenticateJWT,
  authorizeAdmin,
  quizController.createQuiz,
);
router.put(
  '/quizzes/:id',
  authenticateJWT,
  authorizeAdmin,
  quizController.updateQuiz,
);
router.delete(
  '/quizzes/:id',
  authenticateJWT,
  authorizeAdmin,
  quizController.deleteQuiz,
);

// Question routes
router.post(
  '/questions',
  authenticateJWT,
  authorizeAdmin,
  quizController.createQuestion,
);
router.put(
  '/questions/:id',
  authenticateJWT,
  authorizeAdmin,
  quizController.updateQuestion,
);
router.delete(
  '/questions/:id',
  authenticateJWT,
  authorizeAdmin,
  quizController.deleteQuestion,
);

// Answer Option routes
router.post(
  '/questions/:questionId/answer-options',
  authenticateJWT,
  authorizeAdmin,
  quizController.createAnswerOption,
);
router.put(
  '/answer-options/:id',
  authenticateJWT,
  authorizeAdmin,
  quizController.updateAnswerOption,
);
router.delete(
  '/answer-options/:id',
  authenticateJWT,
  authorizeAdmin,
  quizController.deleteAnswerOption,
);

// Quiz Attempt routes
router.get(
  '/quiz-attempts',
  authenticateJWT,
  quizAttemptController.getUserQuizAttempts,
);
router.get(
  '/quiz-attempts/:id',
  authenticateJWT,
  quizAttemptController.getQuizAttemptById,
);
router.post(
  '/quiz-attempts/start',
  authenticateJWT,
  quizAttemptController.startQuizAttempt,
);
router.post(
  '/quiz-attempts/submit-answer',
  authenticateJWT,
  quizAttemptController.submitAnswer,
);
router.post(
  '/quiz-attempts/complete',
  authenticateJWT,
  quizAttemptController.completeQuizAttempt,
);

// User Progress routes
router.get(
  '/progress',
  authenticateJWT,
  userProgressController.getUserProgress,
);
router.get(
  '/progress/users/:userId',
  authenticateJWT,
  userProgressController.getUserProgressById,
);
router.get(
  '/progress/lessons/:lessonId',
  authenticateJWT,
  userProgressController.getLessonProgress,
);
router.put(
  '/progress/lessons/:lessonId',
  authenticateJWT,
  userProgressController.updateLessonProgress,
);
router.get(
  '/progress/courses/:courseId',
  authenticateJWT,
  userProgressController.getCourseProgress,
);

export default router;
</file>

<file path="apps/api/src/types/express.d.ts">
// apps/api/src/types/express.d.ts

import { User } from '@repo/core';

declare global {
  namespace Express {
    // This extends the Express Request interface to include the user property
    export interface Request {
      user?: User;
    }
  }
}

// This ensures the file is treated as a module
export {};
</file>

<file path="apps/api/src/users/users.module.ts">
// apps/api/src/users/users.module.ts
import { Module } from '@nestjs/common';
import { UsersService } from './users.service';
import { UsersController } from './users.controller';
import { PersistenceModule } from '../persistence/persistence.module'; // Importer PersistenceModule, der indeholder PrismaService

@Module({
  imports: [PersistenceModule], // Gør PrismaService tilgængelig for UsersService
  controllers: [UsersController],
  providers: [UsersService],
  exports: [UsersService], // Gør UsersService tilgængelig for andre moduler (f.eks. AuthModule senere)
})
export class UsersModule {}
</file>

<file path="apps/api/src/app.controller.ts">
import { Controller, Get } from '@nestjs/common';
import { AppService } from './app.service';

@Controller()
export class AppController {
  constructor(private readonly appService: AppService) {}

  @Get()
  async getHello(): Promise<{ message: string }> {
    return await this.appService.getHello();
  }
}
</file>

<file path="apps/api/src/app.service.ts">
import { Injectable } from '@nestjs/common';

@Injectable()
export class AppService {
  async getHello(): Promise<{ message: string }> {
    return { message: 'Hello World' };
  }
}
</file>

<file path="apps/api/test/jest-e2e.json">
{
  "moduleFileExtensions": ["js", "json", "ts"],
  "rootDir": ".",
  "testEnvironment": "node",
  "testRegex": ".e2e-spec.ts$",
  "transform": {
    "^.+\\.(t|j)s$": "ts-jest"
  }
}
</file>

<file path="apps/api/.prettierrc">
{
  "singleQuote": true,
  "trailingComma": "all"
}
</file>

<file path="apps/api/nest-cli.json">
{
  "collection": "@nestjs/schematics",
  "sourceRoot": "src"
}
</file>

<file path="apps/web/pages/forgot-password.tsx">
// apps/web/pages/forgot-password.tsx
import { ForgotPasswordScreen } from '../src/screens/auth/forgot-password/forgot-password';

export default function ForgotPasswordPage() {
  return <ForgotPasswordScreen />;
}
</file>

<file path="apps/web/pages/login.tsx">
// apps/web/pages/login.tsx
import { LoginScreen } from '../src/screens/auth/login/login';

export default function LoginPage() {
  return <LoginScreen />;
}
</file>

<file path="apps/web/pages/reset-password.tsx">
// apps/web/pages/reset-password.tsx
import { ResetPasswordScreen } from '../src/screens/auth/reset-password/reset-password';

export default function ResetPasswordPage() {
  return <ResetPasswordScreen />;
}
</file>

<file path="apps/web/pages/signup.tsx">
// apps/web/pages/signup.tsx
    import { SignupScreen } from '../src/screens/auth/signup/signup'; // Sørg for at stien er korrekt

    export default function SignupPage() {
      return <SignupScreen />;
    }
</file>

<file path="apps/web/src/components/common/OfflineIndicator.tsx">
import React, { useState, useEffect } from 'react';
import useOfflineStatus from '../../hooks/useOfflineStatus';

const OfflineIndicator: React.FC = () => {
  const { isOnline, pendingUpdates, hasPendingUpdates } = useOfflineStatus();
  const [showIndicator, setShowIndicator] = useState<boolean>(false);

  useEffect(() => {
    // Show indicator when offline or has pending updates
    if (!isOnline || hasPendingUpdates) {
      setShowIndicator(true);
    } else {
      // Hide indicator after 5 seconds if online and no pending updates
      const timer = setTimeout(() => {
        setShowIndicator(false);
      }, 5000);
      
      return () => clearTimeout(timer);
    }
  }, [isOnline, hasPendingUpdates]);
  
  // Don't render anything if online and no pending updates and indicator is hidden
  if (isOnline && !hasPendingUpdates && !showIndicator) {
    return null;
  }
  
  return (
    <div className={`fixed bottom-4 left-4 z-50 px-4 py-2 rounded-md shadow-md transition-all duration-300 ${
      isOnline ? 'bg-blue-500 text-white' : 'bg-red-500 text-white'
    }`}>
      <div className="flex items-center space-x-2">
        <div className={`h-2 w-2 rounded-full ${isOnline ? 'bg-green-300' : 'bg-red-300'} animate-pulse`}></div>
        <span className="text-sm font-medium">
          {!isOnline ? 'Offline' : pendingUpdates > 0 ? `Synkroniserer data (${pendingUpdates})` : 'Online'}
        </span>
      </div>
    </div>
  );
};

export default OfflineIndicator;
</file>

<file path="apps/web/src/components/layout/Header.tsx">
// apps/web/src/components/layout/Header.tsx
import React, { useState } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { useTheme } from '../../context/ThemeContext';
import { useAuth } from '../../context/AuthContext';

const Header: React.FC = () => {
  const { theme, toggleTheme } = useTheme();
  const { user, logout } = useAuth();
  const [userMenuOpen, setUserMenuOpen] = useState(false);

  const toggleUserMenu = () => {
    setUserMenuOpen(!userMenuOpen);
  };

  return (
    <header className="bg-white dark:bg-gray-800 shadow-md">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between h-16">
          {/* Logo and navigation */}
          <div className="flex">
            <div className="flex-shrink-0 flex items-center">
              <Link href="/" className="flex items-center">
                {/* Logo - replace with your actual logo */}
                <div className="h-8 w-8 mr-2 bg-blue-600 dark:bg-blue-500 rounded-md flex items-center justify-center">
                  <span className="text-white font-bold">LL</span>
                </div>
                <span className="text-gray-900 dark:text-white font-semibold text-lg">LearningLab</span>
              </Link>
            </div>
            
            {/* Desktop navigation */}
            <nav className="hidden md:ml-6 md:flex md:space-x-4">
              <Link href="/dashboard" className="px-3 py-2 rounded-md text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">
                Dashboard
              </Link>
              <Link href="/courses" className="px-3 py-2 rounded-md text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">
                Kurser
              </Link>
              <Link href="/profile" className="px-3 py-2 rounded-md text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">
                Min Profil
              </Link>
            </nav>
          </div>
          
          {/* Right side controls */}
          <div className="flex items-center">
            {/* Theme toggle */}
            <button 
              onClick={toggleTheme}
              className="p-2 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none"
              aria-label={theme === 'dark' ? 'Switch to light mode' : 'Switch to dark mode'}
            >
              {theme === 'dark' ? (
                <svg className="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clipRule="evenodd" />
                </svg>
              ) : (
                <svg className="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
                </svg>
              )}
            </button>
            
            {/* User menu */}
            <div className="ml-4 relative">
              <div>
                <button
                  onClick={toggleUserMenu}
                  className="flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  id="user-menu"
                  aria-expanded="false"
                  aria-haspopup="true"
                >
                  <span className="sr-only">Åbn brugermenu</span>
                  {user ? (
                    <div className="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center text-white">
                      {user.name ? user.name.charAt(0).toUpperCase() : user.email.charAt(0).toUpperCase()}
                    </div>
                  ) : (
                    <div className="h-8 w-8 rounded-full bg-gray-300 dark:bg-gray-600 flex items-center justify-center">
                      <svg className="h-5 w-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clipRule="evenodd" />
                      </svg>
                    </div>
                  )}
                </button>
              </div>
              
              {/* User dropdown menu */}
              {userMenuOpen && (
                <div
                  className="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none"
                  role="menu"
                  aria-orientation="vertical"
                  aria-labelledby="user-menu"
                >
                  {user ? (
                    <>
                      <div className="px-4 py-2 text-sm text-gray-700 dark:text-gray-200 border-b border-gray-200 dark:border-gray-600">
                        <p className="font-medium">{user.name || 'Bruger'}</p>
                        <p className="text-xs text-gray-500 dark:text-gray-400 truncate">{user.email}</p>
                      </div>
                      <Link href="/profile" className="block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">
                        Min Profil
                      </Link>
                      <Link href="/settings" className="block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">
                        Indstillinger
                      </Link>
                      <button
                        onClick={logout}
                        className="w-full text-left block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600"
                      >
                        Log ud
                      </button>
                    </>
                  ) : (
                    <>
                      <Link href="/login" className="block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">
                        Log ind
                      </Link>
                      <Link href="/signup" className="block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">
                        Opret konto
                      </Link>
                    </>
                  )}
                </div>
              )}
            </div>
            
            {/* Mobile menu button */}
            <div className="ml-4 md:hidden flex items-center">
              <button
                className="p-2 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none"
                aria-label="Open mobile menu"
              >
                <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
      
      {/* Mobile menu, show/hide based on menu state */}
      <div className="md:hidden hidden">
        <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3">
          <Link href="/dashboard" className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">
            Dashboard
          </Link>
          <Link href="/courses" className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">
            Kurser
          </Link>
          <Link href="/profile" className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">
            Min Profil
          </Link>
        </div>
      </div>
    </header>
  );
};

export default Header;
</file>

<file path="apps/web/src/components/layout/Sidebar.tsx">
// apps/web/src/components/layout/Sidebar.tsx
import React from 'react';
import Link from 'next/link';
import { useRouter } from 'next/router';

interface SidebarProps {
  isOpen: boolean;
  toggleSidebar: () => void;
}

const Sidebar: React.FC<SidebarProps> = ({ isOpen, toggleSidebar }) => {
  const router = useRouter();

  // Navigation items
  const navItems = [
    { name: 'Dashboard', href: '/dashboard', icon: 'M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6' },
    { name: 'Kurser', href: '/courses', icon: 'M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253' },
    { name: 'Mine Kurser', href: '/my-courses', icon: 'M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z' },
    { name: 'Statistik', href: '/statistics', icon: 'M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z' },
    { name: 'Indstillinger', href: '/settings', icon: 'M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z' },
  ];

  return (
    <>
      {/* Sidebar backdrop for mobile */}
      {isOpen && (
        <div 
          className="fixed inset-0 z-20 bg-black bg-opacity-50 transition-opacity lg:hidden"
          onClick={toggleSidebar}
        ></div>
      )}

      {/* Sidebar */}
      <aside
        className={`fixed inset-y-0 left-0 z-30 w-64 transform bg-white dark:bg-gray-800 shadow-lg transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0 ${
          isOpen ? 'translate-x-0' : '-translate-x-full'
        }`}
      >
        <div className="h-full flex flex-col">
          {/* Sidebar header */}
          <div className="h-16 flex items-center justify-between px-4 border-b border-gray-200 dark:border-gray-700">
            <div className="flex items-center">
              <div className="h-8 w-8 mr-2 bg-blue-600 dark:bg-blue-500 rounded-md flex items-center justify-center">
                <span className="text-white font-bold">LL</span>
              </div>
              <span className="text-gray-900 dark:text-white font-semibold text-lg">LearningLab</span>
            </div>
            <button
              onClick={toggleSidebar}
              className="lg:hidden p-2 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none"
            >
              <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>

          {/* Navigation */}
          <nav className="flex-1 px-2 py-4 space-y-1 overflow-y-auto">
            {navItems.map((item) => {
              const isActive = router.pathname === item.href || router.pathname.startsWith(`${item.href}/`);
              return (
                <Link
                  key={item.name}
                  href={item.href}
                  className={`flex items-center px-4 py-2 text-sm font-medium rounded-md ${
                    isActive
                      ? 'bg-blue-100 text-blue-700 dark:bg-blue-800 dark:text-blue-100'
                      : 'text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700'
                  }`}
                >
                  <svg
                    className={`mr-3 h-5 w-5 ${
                      isActive ? 'text-blue-500 dark:text-blue-400' : 'text-gray-500 dark:text-gray-400'
                    }`}
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d={item.icon} />
                  </svg>
                  {item.name}
                </Link>
              );
            })}
          </nav>

          {/* Sidebar footer */}
          <div className="p-4 border-t border-gray-200 dark:border-gray-700">
            <button
              onClick={toggleSidebar}
              className="hidden lg:flex items-center w-full px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700"
            >
              <svg
                className="mr-3 h-5 w-5 text-gray-500 dark:text-gray-400 transform rotate-180"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
              </svg>
              Skjul menu
            </button>
          </div>
        </div>
      </aside>
    </>
  );
};

export default Sidebar;
</file>

<file path="apps/web/src/components/quiz/IncorrectAnswersList.tsx">
import React from 'react';
import { Question, AnswerOption } from '@repo/core/src/types/quiz.types';

interface IncorrectAnswersListProps {
  incorrectAnswers: Array<{
    question: Question;
    selectedOption: AnswerOption;
    correctOption: AnswerOption;
  }>;
}

const IncorrectAnswersList: React.FC<IncorrectAnswersListProps> = ({ incorrectAnswers }) => {
  if (incorrectAnswers.length === 0) {
    return (
      <div className="text-center p-6 bg-gray-100 dark:bg-gray-800 rounded-lg">
        <p className="text-gray-700 dark:text-gray-300">
          Alle svar var korrekte! Godt klaret!
        </p>
      </div>
    );
  }
  
  return (
    <div className="space-y-6">
      {incorrectAnswers.map(({ question, selectedOption, correctOption }) => (
        <div 
          key={question.id} 
          className="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-700"
        >
          <h4 className="font-medium text-gray-900 dark:text-white mb-3">
            {question.text}
          </h4>
          
          <div className="space-y-3">
            {/* User's incorrect answer */}
            <div className="flex items-start">
              <div className="flex-shrink-0 mt-0.5">
                <svg 
                  xmlns="http://www.w3.org/2000/svg" 
                  className="h-5 w-5 text-red-500" 
                  viewBox="0 0 20 20" 
                  fill="currentColor"
                >
                  <path 
                    fillRule="evenodd" 
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" 
                    clipRule="evenodd" 
                  />
                </svg>
              </div>
              <div className="ml-3">
                <p className="text-sm text-gray-700 dark:text-gray-300">
                  <span className="font-medium">Dit svar:</span> {selectedOption.text}
                </p>
              </div>
            </div>
            
            {/* Correct answer */}
            <div className="flex items-start">
              <div className="flex-shrink-0 mt-0.5">
                <svg 
                  xmlns="http://www.w3.org/2000/svg" 
                  className="h-5 w-5 text-green-500" 
                  viewBox="0 0 20 20" 
                  fill="currentColor"
                >
                  <path 
                    fillRule="evenodd" 
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" 
                    clipRule="evenodd" 
                  />
                </svg>
              </div>
              <div className="ml-3">
                <p className="text-sm text-gray-700 dark:text-gray-300">
                  <span className="font-medium">Korrekt svar:</span> {correctOption.text}
                </p>
              </div>
            </div>
          </div>
          
          {/* Explanation if available */}
          {question.explanation && (
            <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded text-sm text-blue-800 dark:text-blue-200">
              <p className="font-medium mb-1">Forklaring:</p>
              <p>{question.explanation}</p>
            </div>
          )}
        </div>
      ))}
    </div>
  );
};

export default IncorrectAnswersList;
</file>

<file path="apps/web/src/components/quiz/OfflineQuizNotification.tsx">
import React from 'react';
import useOfflineStatus from '../../hooks/useOfflineStatus';

interface OfflineQuizNotificationProps {
  className?: string;
}

const OfflineQuizNotification: React.FC<OfflineQuizNotificationProps> = ({ className = '' }) => {
  const { isOnline, hasPendingUpdates, pendingUpdates } = useOfflineStatus();
  
  // Don't show anything if online and no pending updates
  if (isOnline && !hasPendingUpdates) {
    return null;
  }
  
  return (
    <div className={`p-4 rounded-md ${className} ${
      isOnline 
        ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800' 
        : 'bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800'
    }`}>
      <div className="flex items-start">
        <div className="flex-shrink-0">
          {isOnline ? (
            <svg className="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
            </svg>
          ) : (
            <svg className="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
            </svg>
          )}
        </div>
        <div className="ml-3">
          <h3 className={`text-sm font-medium ${
            isOnline 
              ? 'text-blue-800 dark:text-blue-300' 
              : 'text-yellow-800 dark:text-yellow-300'
          }`}>
            {isOnline 
              ? 'Synkroniserer quiz-resultater' 
              : 'Du er offline'}
          </h3>
          <div className={`mt-2 text-sm ${
            isOnline 
              ? 'text-blue-700 dark:text-blue-200' 
              : 'text-yellow-700 dark:text-yellow-200'
          }`}>
            <p>
              {isOnline 
                ? `Dine quiz-resultater bliver synkroniseret (${pendingUpdates} ${pendingUpdates === 1 ? 'resultat' : 'resultater'} venter).` 
                : 'Dine quiz-resultater vil blive gemt lokalt og synkroniseret, når du er online igen.'}
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OfflineQuizNotification;
</file>

<file path="apps/web/src/components/quiz/QuizProgress.tsx">
import React from 'react';
import { useQuiz } from '../../context/QuizContext';

const QuizProgress: React.FC = () => {
  const { currentQuestionIndex, totalQuestions, userAnswers } = useQuiz();
  
  // Calculate progress percentage
  const progressPercentage = (currentQuestionIndex / (totalQuestions - 1)) * 100;
  
  // Count answered questions
  const answeredCount = Object.keys(userAnswers).length;
  
  return (
    <div className="mb-6">
      <div className="flex justify-between items-center mb-2">
        <span className="text-sm font-medium text-gray-700 dark:text-gray-300">
          Spørgsmål {currentQuestionIndex + 1} af {totalQuestions}
        </span>
        <span className="text-sm text-gray-500 dark:text-gray-400">
          {answeredCount} besvaret
        </span>
      </div>
      
      <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5">
        <div 
          className="bg-blue-600 dark:bg-blue-500 h-2.5 rounded-full transition-all duration-300 ease-in-out" 
          style={{ width: `${progressPercentage}%` }}
        ></div>
      </div>
    </div>
  );
};

export default QuizProgress;
</file>

<file path="apps/web/src/components/quiz/RadialProgress.tsx">
import React from 'react';

interface RadialProgressProps {
  percentage: number;
  size?: number;
  strokeWidth?: number;
  passed?: boolean;
}

const RadialProgress: React.FC<RadialProgressProps> = ({
  percentage,
  size = 120,
  strokeWidth = 10,
  passed = false,
}) => {
  // Calculate values for SVG
  const radius = (size - strokeWidth) / 2;
  const circumference = radius * 2 * Math.PI;
  const strokeDashoffset = circumference - (percentage / 100) * circumference;
  
  // Center position
  const center = size / 2;
  
  // Determine color based on passed status
  const getColor = () => {
    if (passed) return '#10B981'; // Green for passed
    return '#EF4444'; // Red for failed
  };
  
  return (
    <div className="relative inline-flex flex-col items-center justify-center">
      <svg
        width={size}
        height={size}
        viewBox={`0 0 ${size} ${size}`}
        className="transform -rotate-90"
      >
        {/* Background circle */}
        <circle
          cx={center}
          cy={center}
          r={radius}
          fill="none"
          stroke="#E5E7EB"
          strokeWidth={strokeWidth}
          className="dark:stroke-gray-700"
        />
        
        {/* Progress circle */}
        <circle
          cx={center}
          cy={center}
          r={radius}
          fill="none"
          stroke={getColor()}
          strokeWidth={strokeWidth}
          strokeDasharray={circumference}
          strokeDashoffset={strokeDashoffset}
          strokeLinecap="round"
          className="transition-all duration-500 ease-in-out"
        />
      </svg>
      
      {/* Percentage text */}
      <div className="absolute flex flex-col items-center justify-center">
        <span className="text-3xl font-bold text-gray-900 dark:text-white">
          {percentage}%
        </span>
        <span className="text-sm text-gray-500 dark:text-gray-400">
          {passed ? 'Bestået' : 'Ikke bestået'}
        </span>
      </div>
    </div>
  );
};

export default RadialProgress;
</file>

<file path="apps/web/src/components/quiz/ScoreToast.tsx">
import React, { useEffect, useState } from 'react';
import { Quiz } from '@repo/core/src/types/quiz.types';
import { useQuiz } from '../../context/QuizContext';

// Extended Quiz type for our application
interface ExtendedQuiz extends Quiz {
  passingScore?: number;
}

interface ScoreToastProps {
  onClose?: () => void;
}

const ScoreToast: React.FC<ScoreToastProps> = ({ onClose }) => {
  const { score, quiz } = useQuiz();
  const [visible, setVisible] = useState(false);
  
  useEffect(() => {
    if (score !== null) {
      setVisible(true);
      
      // Auto-hide after 5 seconds
      const timer = setTimeout(() => {
        setVisible(false);
        if (onClose) onClose();
      }, 5000);
      
      return () => clearTimeout(timer);
    }
  }, [score, onClose]);
  
  if (score === null || !visible) return null;
  
  const isPassing = quiz?.passingScore ? score >= quiz.passingScore : score >= 70;
  
  return (
    <div className="fixed bottom-4 right-4 max-w-sm w-full bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 overflow-hidden">
      <div className={`h-1 ${isPassing ? 'bg-green-500' : 'bg-red-500'}`}></div>
      
      <div className="p-4">
        <div className="flex items-start">
          <div className={`flex-shrink-0 h-10 w-10 rounded-full flex items-center justify-center ${
            isPassing ? 'bg-green-100 dark:bg-green-900/20' : 'bg-red-100 dark:bg-red-900/20'
          }`}>
            {isPassing ? (
              <svg className="h-6 w-6 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
              </svg>
            ) : (
              <svg className="h-6 w-6 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            )}
          </div>
          
          <div className="ml-3 w-0 flex-1">
            <p className="text-sm font-medium text-gray-900 dark:text-white">
              {isPassing ? 'Godt klaret!' : 'Prøv igen!'}
            </p>
            <p className="mt-1 text-sm text-gray-500 dark:text-gray-400">
              Du fik {score}% rigtige svar.
              {quiz?.passingScore && (
                <span> Beståelseskrav: {quiz.passingScore}%.</span>
              )}
            </p>
          </div>
          
          <div className="ml-4 flex-shrink-0 flex">
            <button
              onClick={() => {
                setVisible(false);
                if (onClose) onClose();
              }}
              className="bg-white dark:bg-transparent rounded-md inline-flex text-gray-400 hover:text-gray-500 dark:hover:text-gray-300 focus:outline-none"
            >
              <span className="sr-only">Luk</span>
              <svg className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ScoreToast;
</file>

<file path="apps/web/src/context/ProgressContext.tsx">
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
import { UserProgress } from '@repo/core/src/types/quiz.types';
import { getCourseProgress } from '../services/userProgressApi';

interface ProgressContextType {
  courseProgress: Record<number, UserProgress | null>;
  isLoadingProgress: boolean;
  refreshCourseProgress: (courseId: number) => Promise<void>;
  error: Error | null;
}

const ProgressContext = createContext<ProgressContextType | undefined>(undefined);

interface ProgressProviderProps {
  children: ReactNode;
}

export const ProgressProvider: React.FC<ProgressProviderProps> = ({ children }) => {
  const [courseProgress, setCourseProgress] = useState<Record<number, UserProgress | null>>({});
  const [isLoadingProgress, setIsLoadingProgress] = useState(false);
  const [error, setError] = useState<Error | null>(null);
  
  const refreshCourseProgress = async (courseId: number) => {
    setIsLoadingProgress(true);
    setError(null);
    
    try {
      const progress = await getCourseProgress(courseId);
      setCourseProgress(prev => ({
        ...prev,
        [courseId]: progress,
      }));
    } catch (err) {
      const error = err instanceof Error ? err : new Error('Failed to fetch course progress');
      setError(error);
      console.error('Error fetching course progress:', error);
    } finally {
      setIsLoadingProgress(false);
    }
  };
  
  const value = {
    courseProgress,
    isLoadingProgress,
    refreshCourseProgress,
    error,
  };
  
  return (
    <ProgressContext.Provider value={value}>
      {children}
    </ProgressContext.Provider>
  );
};

export const useProgress = (): ProgressContextType => {
  const context = useContext(ProgressContext);
  if (context === undefined) {
    throw new Error('useProgress must be used within a ProgressProvider');
  }
  return context;
};
</file>

<file path="apps/web/src/context/ThemeContext.tsx">
// apps/web/src/context/ThemeContext.tsx
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';

type Theme = 'light' | 'dark';

interface ThemeContextType {
  theme: Theme;
  toggleTheme: () => void;
}

const ThemeContext = createContext<ThemeContextType | undefined>(undefined);

interface ThemeProviderProps {
  children: ReactNode;
}

export function ThemeProvider({ children }: ThemeProviderProps) {
  // Initialize theme from localStorage or system preference
  const [theme, setTheme] = useState<Theme>('light');

  // Effect to initialize theme from localStorage or system preference
  useEffect(() => {
    // Check if theme is stored in localStorage
    const storedTheme = localStorage.getItem('theme') as Theme | null;
    
    if (storedTheme) {
      setTheme(storedTheme);
    } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
      // If no stored theme, check system preference
      setTheme('dark');
    }
  }, []);

  // Effect to apply theme to document
  useEffect(() => {
    // Update document class based on theme
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
    
    // Store theme preference in localStorage
    localStorage.setItem('theme', theme);
  }, [theme]);

  // Function to toggle theme
  const toggleTheme = () => {
    setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));
  };

  return (
    <ThemeContext.Provider value={{ theme, toggleTheme }}>
      {children}
    </ThemeContext.Provider>
  );
}

// Custom hook to use the theme context
export function useTheme() {
  const context = useContext(ThemeContext);
  if (context === undefined) {
    throw new Error('useTheme must be used within a ThemeProvider');
  }
  return context;
}
</file>

<file path="apps/web/src/context/useAuth.ts">
// apps/web/src/context/useAuth.ts
// Re-export the useAuth hook from AuthContext.tsx for backward compatibility
export { useAuth } from './AuthContext';
</file>

<file path="apps/web/src/hooks/useOfflineStatus.ts">
import { useState, useEffect } from 'react';
import { hasPendingOfflineUpdates, getPendingOfflineUpdatesCount } from '../utils/offlineSync';

interface OfflineStatusHook {
  isOnline: boolean;
  pendingUpdates: number;
  hasPendingUpdates: boolean;
}

/**
 * Custom hook to track online/offline status and pending updates
 */
export const useOfflineStatus = (): OfflineStatusHook => {
  const [isOnline, setIsOnline] = useState<boolean>(true);
  const [pendingUpdates, setPendingUpdates] = useState<number>(0);
  
  useEffect(() => {
    // Check if window is defined (for SSR)
    if (typeof window !== 'undefined') {
      // Set initial state
      setIsOnline(navigator.onLine);
      setPendingUpdates(getPendingOfflineUpdatesCount());
      
      // Update state when online/offline status changes
      const handleOnline = () => {
        setIsOnline(true);
        // Check for pending updates
        setPendingUpdates(getPendingOfflineUpdatesCount());
      };
      
      const handleOffline = () => {
        setIsOnline(false);
      };
      
      // Check for pending updates periodically
      const checkPendingUpdates = () => {
        setPendingUpdates(getPendingOfflineUpdatesCount());
      };
      
      // Set up event listeners
      window.addEventListener('online', handleOnline);
      window.addEventListener('offline', handleOffline);
      
      // Check for pending updates every 10 seconds
      const interval = setInterval(checkPendingUpdates, 10000);
      
      // Clean up
      return () => {
        window.removeEventListener('online', handleOnline);
        window.removeEventListener('offline', handleOffline);
        clearInterval(interval);
      };
    }
  }, []);
  
  return {
    isOnline,
    pendingUpdates,
    hasPendingUpdates: pendingUpdates > 0
  };
};

export default useOfflineStatus;
</file>

<file path="apps/web/src/hooks/useQuizProgress.ts">
import { useState, useCallback } from 'react';
import { UserProgress } from '@repo/core/src/types/quiz.types';
import { updateQuizProgress } from '../services/userProgressApi';

interface UseQuizProgressProps {
  quizId: number;
}

interface UseQuizProgressReturn {
  isUpdating: boolean;
  updateProgress: (
    score: number,
    answers: Array<{
      questionId: number;
      selectedOptionId: number;
      isCorrect: boolean;
    }>
  ) => Promise<UserProgress>;
  error: Error | null;
}

/**
 * Custom hook to handle quiz progress updates
 */
export const useQuizProgress = ({ quizId }: UseQuizProgressProps): UseQuizProgressReturn => {
  const [isUpdating, setIsUpdating] = useState(false);
  const [error, setError] = useState<Error | null>(null);
  
  const updateProgress = useCallback(
    async (
      score: number,
      answers: Array<{
        questionId: number;
        selectedOptionId: number;
        isCorrect: boolean;
      }>
    ) => {
      setIsUpdating(true);
      setError(null);
      
      try {
        const result = await updateQuizProgress(quizId, score, answers);
        return result;
      } catch (err) {
        const error = err instanceof Error ? err : new Error('Failed to update quiz progress');
        setError(error);
        throw error;
      } finally {
        setIsUpdating(false);
      }
    },
    [quizId]
  );
  
  return {
    isUpdating,
    updateProgress,
    error,
  };
};

export default useQuizProgress;
</file>

<file path="apps/web/src/screens/auth/forgot-password/forgot-password.tsx">
// apps/web/src/screens/auth/forgot-password/forgot-password.tsx
import React, { useState, FormEvent } from 'react';
import { useRouter } from 'next/router'; // Selvom vi ikke omdirigerer direkte her, kan den være nyttig

export function ForgotPasswordScreen() {
  const router = useRouter();
  const [email, setEmail] = useState<string>('');
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);
  const [successMessage, setSuccessMessage] = useState<string | null>(null);

  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    setIsLoading(true);
    setError(null);
    setSuccessMessage(null);

    try {
      const response = await fetch('/api/auth/forgot-password', { // Kalder dit backend endpoint
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });

      // Backend returnerer altid 200 OK for forgot-password for ikke at afsløre om en email eksisterer.
      // Vi stoler på beskeden fra backend.
      const data = await response.json(); 

      if (!response.ok) {
        // Dette burde ikke ske ofte med forgot-password, medmindre der er en serverfejl
        // eller en uventet valideringsfejl, der ikke returnerer 200.
        let errorMessage = 'Anmodning om nulstilling af adgangskode fejlede.';
        if (data && data.message) {
          if (Array.isArray(data.message)) {
            errorMessage = data.message.join(', ');
          } else {
            errorMessage = data.message;
          }
        }
        throw new Error(errorMessage);
      }
      
      console.log('Anmodning om glemt adgangskode succesfuld:', data);
      // Backend sender en generisk succesbesked, som vi viser.
      setSuccessMessage(data.message || 'Hvis din email findes i systemet, vil du modtage et link til at nulstille dit password.');
      setEmail(''); // Ryd email feltet efter succes

    } catch (err: any) {
      console.error('Fejl ved glemt adgangskode:', err);
      setError(err.message || 'Der opstod en uventet fejl.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100 font-inter">
      <div className="w-full max-w-md p-8 space-y-6 bg-white rounded-xl shadow-xl">
        <h2 className="text-3xl font-bold text-center text-gray-900">
          Glemt Adgangskode?
        </h2>
        <p className="text-center text-sm text-gray-600">
          Indtast din emailadresse, så sender vi dig et link til at nulstille din adgangskode.
        </p>
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Email felt */}
          <div>
            <label
              htmlFor="email"
              className="block text-sm font-medium text-gray-700"
            >
              Emailadresse
            </label>
            <input
              id="email"
              name="email"
              type="email"
              autoComplete="email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              disabled={isLoading || !!successMessage}
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50"
              placeholder="din@email.com"
            />
          </div>
          
          {/* Fejlmeddelelse */}
          {error && (
            <div className="p-3 text-sm text-red-700 bg-red-100 border border-red-400 rounded-md">
              {error}
            </div>
          )}

          {/* Succesmeddelelse */}
          {successMessage && (
            <div className="p-3 text-sm text-green-700 bg-green-100 border border-green-400 rounded-md">
              {successMessage}
            </div>
          )}

          {/* Submit knap */}
          <div>
            <button
              type="submit"
              disabled={isLoading || !!successMessage}
              className="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400 disabled:cursor-not-allowed transition-colors duration-150"
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : (
                'Send Nulstillingslink'
              )}
            </button>
          </div>
        </form>
        <p className="text-sm text-center text-gray-600">
          Tilbage til{' '}
          <a href="/login" className="font-medium text-indigo-600 hover:text-indigo-500">
            Login
          </a>
        </p>
      </div>
    </div>
  );
}
</file>

<file path="apps/web/src/services/apiClient.ts">
import axios from 'axios';

// Create an axios instance with default config
export const apiClient = axios.create({
  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/api',
  headers: {
    'Content-Type': 'application/json',
  },
});

// Add a request interceptor to include auth token
apiClient.interceptors.request.use(
  (config) => {
    // Get token from localStorage
    const token = typeof window !== 'undefined' ? localStorage.getItem('authToken') : null;
    
    // If token exists, add it to the headers
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

// Add a response interceptor to handle common errors
apiClient.interceptors.response.use(
  (response) => {
    return response;
  },
  (error) => {
    // Handle unauthorized errors (401)
    if (error.response && error.response.status === 401) {
      // Clear local storage and redirect to login
      if (typeof window !== 'undefined') {
        localStorage.removeItem('authToken');
        localStorage.removeItem('user');
        window.location.href = '/login';
      }
    }
    
    return Promise.reject(error);
  }
);

// Check if we're online and sync any offline data
export const setupOnlineListener = (): void => {
  if (typeof window !== 'undefined') {
    window.addEventListener('online', () => {
      console.log('Back online, syncing data...');
      // Import and call syncOfflineData function
      import('./userProgressApi').then(({ syncOfflineQuizUpdates }) => {
        syncOfflineQuizUpdates();
      });
    });
  }
};

// Initialize online listener
if (typeof window !== 'undefined') {
  setupOnlineListener();
}
</file>

<file path="apps/web/src/services/userProgressApi.ts">
import { UserProgress, QuizResult } from '@repo/core/src/types/quiz.types';
import { apiClient } from './apiClient';

/**
 * Updates the user's quiz progress
 * @param quizId The ID of the quiz
 * @param score The score achieved (percentage)
 * @param answers The user's answers
 * @returns The updated user progress
 */
export const updateQuizProgress = async (
  quizId: number,
  score: number,
  answers: Array<{
    questionId: number;
    selectedOptionId: number;
    isCorrect: boolean;
  }>
): Promise<UserProgress> => {
  try {
    const response = await apiClient.patch<UserProgress>('/user-progress', {
      quizId,
      score,
      answers,
      completedAt: new Date().toISOString(),
    });
    
    return response.data;
  } catch (error) {
    console.error('Error updating quiz progress:', error);
    
    // Implement offline support by storing the data locally
    // This is a simplified version - in a real app, you would use a more robust solution
    const offlineData = {
      quizId,
      score,
      answers,
      completedAt: new Date().toISOString(),
    };
    
    // Store in localStorage for later sync
    const offlineUpdates = JSON.parse(localStorage.getItem('offlineQuizUpdates') || '[]');
    offlineUpdates.push(offlineData);
    localStorage.setItem('offlineQuizUpdates', JSON.stringify(offlineUpdates));
    
    // Return a mock response
    return {
      id: 0,
      userId: 0,
      quizId,
      status: 'COMPLETED',
      score,
      createdAt: new Date(),
      updatedAt: new Date(),
    } as UserProgress;
  }
};

/**
 * Syncs offline quiz progress updates when the user comes back online
 */
export const syncOfflineQuizUpdates = async (): Promise<void> => {
  const offlineUpdates = JSON.parse(localStorage.getItem('offlineQuizUpdates') || '[]');
  
  if (offlineUpdates.length === 0) {
    return;
  }
  
  try {
    // Process each offline update
    for (const update of offlineUpdates) {
      await apiClient.patch('/user-progress', update);
    }
    
    // Clear offline updates after successful sync
    localStorage.removeItem('offlineQuizUpdates');
  } catch (error) {
    console.error('Error syncing offline quiz updates:', error);
    // Keep the offline updates for the next sync attempt
  }
};

/**
 * Gets the user's progress for a specific course
 * @param courseId The ID of the course
 * @returns The user's progress for the course
 */
export const getCourseProgress = async (courseId: number): Promise<UserProgress> => {
  try {
    const response = await apiClient.get<UserProgress>(`/user-progress/course/${courseId}`);
    return response.data;
  } catch (error) {
    console.error('Error getting course progress:', error);
    throw error;
  }
};

/**
 * Gets the user's quiz results for a specific quiz
 * @param quizId The ID of the quiz
 * @returns The user's quiz results
 */
export const getQuizResults = async (quizId: number): Promise<QuizResult[]> => {
  try {
    const response = await apiClient.get<QuizResult[]>(`/user-progress/quiz/${quizId}`);
    return response.data;
  } catch (error) {
    console.error('Error getting quiz results:', error);
    throw error;
  }
};
</file>

<file path="apps/web/src/store/index.ts">
import { configureStore } from "@reduxjs/toolkit";
import { TypedUseSelectorHook, useDispatch, useSelector } from "react-redux";

import { api } from "./services/api";

export function makeStore() {
  return configureStore({
    reducer: {
      [api.reducerPath]: api.reducer,
    },

    middleware: (getDefaultMiddleware) =>
      getDefaultMiddleware().concat(api.middleware),
  });
}

const store = makeStore();

export type RootState = ReturnType<typeof store.getState>;

export type AppDispatch = typeof store.dispatch;

export const useAppDispatch = () => useDispatch<AppDispatch>();

export const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;

export default store;
</file>

<file path="apps/web/src/utils/offlineSync.ts">
import { syncOfflineQuizUpdates } from '../services/userProgressApi';

/**
 * Sets up listeners to detect when the user comes back online
 * and syncs offline quiz updates
 * @returns A cleanup function to remove event listeners
 */
export const setupOfflineSyncListeners = (): (() => void) | undefined => {
  // Check if window is defined (for SSR)
  if (typeof window !== 'undefined') {
    // Function to sync when coming online
    const handleOnline = async () => {
      console.log('Connection restored. Syncing offline data...');
      try {
        await syncOfflineQuizUpdates();
        console.log('Offline data synced successfully');
      } catch (error) {
        console.error('Failed to sync offline data:', error);
      }
    };

    // Add event listeners
    window.addEventListener('online', handleOnline);

    // Initial check - if already online and has offline data, sync it
    if (navigator.onLine) {
      const offlineUpdates = JSON.parse(localStorage.getItem('offlineQuizUpdates') || '[]');
      if (offlineUpdates.length > 0) {
        handleOnline();
      }
    }

    // Return cleanup function
    return () => {
      window.removeEventListener('online', handleOnline);
    };
  }
};

/**
 * Checks if there are any pending offline quiz updates
 */
export const hasPendingOfflineUpdates = (): boolean => {
  if (typeof window !== 'undefined') {
    const offlineUpdates = JSON.parse(localStorage.getItem('offlineQuizUpdates') || '[]');
    return offlineUpdates.length > 0;
  }
  return false;
};

/**
 * Gets the count of pending offline quiz updates
 */
export const getPendingOfflineUpdatesCount = (): number => {
  if (typeof window !== 'undefined') {
    const offlineUpdates = JSON.parse(localStorage.getItem('offlineQuizUpdates') || '[]');
    return offlineUpdates.length;
  }
  return 0;
};
</file>

<file path="apps/web/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="apps/web/next.config.js">
const withTM = require("next-transpile-modules")(["ui"]);

module.exports = withTM({
  reactStrictMode: true,
});
</file>

<file path="apps/web/README.md">
## Getting Started

First, run the development server:

```bash
yarn dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `pages/index.js`. The page auto-updates as you edit the file.

[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.js`.

The `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_source=github.com&utm_medium=referral&utm_campaign=turborepo-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.
</file>

<file path="packages/config/src/env.d.ts">
import { z } from 'zod';
export declare const serverSchema: z.ZodObject<{
    DATABASE_URL: z.ZodOptional<z.ZodString>;
    JWT_SECRET: z.ZodOptional<z.ZodString>;
    JWT_EXPIRES_IN: z.ZodDefault<z.ZodString>;
    SALT_ROUNDS: z.ZodDefault<z.ZodEffects<z.ZodNumber, number, unknown>>;
}, "strip", z.ZodTypeAny, {
    DATABASE_URL?: string;
    JWT_SECRET?: string;
    JWT_EXPIRES_IN?: string;
    SALT_ROUNDS?: number;
}, {
    DATABASE_URL?: string;
    JWT_SECRET?: string;
    JWT_EXPIRES_IN?: string;
    SALT_ROUNDS?: unknown;
}>;
export type ServerEnv = z.infer<typeof serverSchema>;
export declare const clientSchema: z.ZodObject<{
    NEXT_PUBLIC_APP_NAME: z.ZodDefault<z.ZodString>;
    NEXT_PUBLIC_API_URL: z.ZodDefault<z.ZodString>;
    NEXT_PUBLIC_WS_URL: z.ZodOptional<z.ZodDefault<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    NEXT_PUBLIC_APP_NAME?: string;
    NEXT_PUBLIC_API_URL?: string;
    NEXT_PUBLIC_WS_URL?: string;
}, {
    NEXT_PUBLIC_APP_NAME?: string;
    NEXT_PUBLIC_API_URL?: string;
    NEXT_PUBLIC_WS_URL?: string;
}>;
export type ClientEnv = z.infer<typeof clientSchema>;
export declare const serverEnv: () => Readonly<ServerEnv>;
export declare const clientEnv: () => Readonly<ClientEnv>;
//# sourceMappingURL=env.d.ts.map
</file>

<file path="packages/config/src/env.d.ts.map">
{"version":3,"file":"env.d.ts","sourceRoot":"","sources":["env.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAKxB,eAAO,MAAM,YAAY;;;;;;;;;;;;;;;EASvB,CAAC;AACH,MAAM,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,YAAY,CAAC,CAAC;AAKrD,eAAO,MAAM,YAAY;;;;;;;;;;;;EAIvB,CAAC;AACH,MAAM,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,YAAY,CAAC,CAAC;AA+DrD,eAAO,MAAM,SAAS,QAAO,QAAQ,CAAC,SAAS,CAK9C,CAAC;AAEF,eAAO,MAAM,SAAS,QAAO,QAAQ,CAAC,SAAS,CAK9C,CAAA"}
</file>

<file path="packages/config/src/env.js">
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.clientEnv = exports.serverEnv = exports.clientSchema = exports.serverSchema = void 0;
const zod_1 = require("zod");
exports.serverSchema = zod_1.z.object({
    DATABASE_URL: zod_1.z.string().url({ message: "DATABASE_URL skal være en gyldig URL." }).optional(),
    JWT_SECRET: zod_1.z.string().min(32, { message: "JWT_SECRET skal være mindst 32 tegn lang." }).optional(),
    JWT_EXPIRES_IN: zod_1.z.string().default('1h'),
    SALT_ROUNDS: zod_1.z.preprocess((val) => (typeof val === 'string' ? parseInt(val, 10) : typeof val === 'number' ? val : undefined), zod_1.z.number({ invalid_type_error: "SALT_ROUNDS skal være et tal." }).int().positive({ message: "SALT_ROUNDS skal være et positivt heltal." })).default(10),
});
exports.clientSchema = zod_1.z.object({
    NEXT_PUBLIC_APP_NAME: zod_1.z.string().default('Læringsplatform'),
    NEXT_PUBLIC_API_URL: zod_1.z.string().url({ message: "NEXT_PUBLIC_API_URL skal være en gyldig URL." }).default('http://localhost:5002/api'),
    NEXT_PUBLIC_WS_URL: zod_1.z.string().url({ message: "NEXT_PUBLIC_WS_URL skal være en gyldig URL." }).default('http://localhost:3001').optional(),
});
let memoizedServerEnv;
let memoizedClientEnv;
function parseServerEnv() {
    const source = {
        DATABASE_URL: process.env.DATABASE_URL,
        JWT_SECRET: process.env.JWT_SECRET,
        JWT_EXPIRES_IN: process.env.JWT_EXPIRES_IN,
        SALT_ROUNDS: process.env.SALT_ROUNDS,
    };
    if (process.env.CI || process.env.NODE_ENV === 'production') {
        return {
            DATABASE_URL: source.DATABASE_URL || 'postgresql://dummy:dummy@localhost:5432/dummy',
            JWT_SECRET: source.JWT_SECRET || 'dummy_secret_key_for_build_environment_only_32chars',
            JWT_EXPIRES_IN: source.JWT_EXPIRES_IN || '15m',
            SALT_ROUNDS: source.SALT_ROUNDS ? parseInt(source.SALT_ROUNDS, 10) : 10,
        };
    }
    const parsed = exports.serverSchema.safeParse(source);
    if (!parsed.success) {
        console.error('❌ Ugyldige server-side miljøvariabler:', parsed.error.flatten().fieldErrors);
        throw new Error('Ugyldige server-side miljøvariabler. Tjek .env filen og konsollen.');
    }
    return parsed.data;
}
function parseClientEnv() {
    const source = {
        NEXT_PUBLIC_APP_NAME: process.env.NEXT_PUBLIC_APP_NAME,
        NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,
        NEXT_PUBLIC_WS_URL: process.env.NEXT_PUBLIC_WS_URL,
    };
    const parsed = exports.clientSchema.safeParse(source);
    if (process.env.CI || process.env.NODE_ENV === 'production') {
        return exports.clientSchema.parse({
            NEXT_PUBLIC_APP_NAME: source.NEXT_PUBLIC_APP_NAME || 'Læringsplatform',
            NEXT_PUBLIC_API_URL: source.NEXT_PUBLIC_API_URL || 'http://localhost:5002/api',
            NEXT_PUBLIC_WS_URL: source.NEXT_PUBLIC_WS_URL || 'http://localhost:3001',
        });
    }
    if (!parsed.success) {
        console.error('❌ Ugyldige client-side miljøvariabler:', parsed.error.flatten().fieldErrors);
        throw new Error('Ugyldige client-side miljøvariabler. Tjek .env filen og konsollen.');
    }
    return parsed.data;
}
const serverEnv = () => {
    if (!memoizedServerEnv) {
        memoizedServerEnv = parseServerEnv();
    }
    return memoizedServerEnv;
};
exports.serverEnv = serverEnv;
const clientEnv = () => {
    if (!memoizedClientEnv) {
        memoizedClientEnv = parseClientEnv();
    }
    return memoizedClientEnv;
};
exports.clientEnv = clientEnv;
try {
    (0, exports.serverEnv)();
}
catch (error) {
    if (process.env.CI || process.env.NODE_ENV === 'production') {
        console.warn('⚠️ Kører i CI/CD eller produktionsmiljø, springer over streng miljøvariabel-validering');
    }
    else {
        console.error('❌ Fejl ved validering af server-miljøvariabler:', error);
        process.exit(1);
    }
}
//# sourceMappingURL=env.js.map
</file>

<file path="packages/config/src/env.js.map">
{"version":3,"file":"env.js","sourceRoot":"","sources":["env.ts"],"names":[],"mappings":";;;AACA,6BAAwB;AAKX,QAAA,YAAY,GAAG,OAAC,CAAC,MAAM,CAAC;IACnC,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC7F,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,2CAA2C,EAAE,CAAC,CAAC,QAAQ,EAAE;IACnG,cAAc,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IACxC,WAAW,EAAE,OAAC,CAAC,UAAU,CACvB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,EAClG,OAAC,CAAC,MAAM,CAAC,EAAE,kBAAkB,EAAE,+BAA+B,EAAC,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,2CAA2C,EAAC,CAAC,CACzI,CAAC,OAAO,CAAC,EAAE,CAAC;CAEd,CAAC,CAAC;AAMU,QAAA,YAAY,GAAG,OAAC,CAAC,MAAM,CAAC;IACnC,oBAAoB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC;IAC3D,mBAAmB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,8CAA8C,EAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC;IACpI,kBAAkB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,6CAA6C,EAAE,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,QAAQ,EAAE;CAC3I,CAAC,CAAC;AAGH,IAAI,iBAA4B,CAAC;AACjC,IAAI,iBAA4B,CAAC;AAEjC,SAAS,cAAc;IACrB,MAAM,MAAM,GAAG;QACb,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;QACtC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU;QAClC,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;QAC1C,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;KAErC,CAAC;IAGF,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;QAC5D,OAAO;YACL,YAAY,EAAE,MAAM,CAAC,YAAY,IAAI,+CAA+C;YACpF,UAAU,EAAE,MAAM,CAAC,UAAU,IAAI,qDAAqD;YACtF,cAAc,EAAE,MAAM,CAAC,cAAc,IAAI,KAAK;YAC9C,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;SAC3D,CAAC;IACjB,CAAC;IAED,MAAM,MAAM,GAAG,oBAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAE9C,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,OAAO,CAAC,KAAK,CACX,wCAAwC,EACxC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,WAAW,CACnC,CAAC;QACF,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;IACxF,CAAC;IACD,OAAO,MAAM,CAAC,IAAI,CAAC;AACrB,CAAC;AAED,SAAS,cAAc;IACpB,MAAM,MAAM,GAAG;QACd,oBAAoB,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB;QACtD,mBAAmB,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB;QACpD,kBAAkB,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;KACnD,CAAC;IACF,MAAM,MAAM,GAAG,oBAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAG9C,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;QAC5D,OAAO,oBAAY,CAAC,KAAK,CAAC;YACxB,oBAAoB,EAAE,MAAM,CAAC,oBAAoB,IAAI,iBAAiB;YACtE,mBAAmB,EAAE,MAAM,CAAC,mBAAmB,IAAI,2BAA2B;YAC9E,kBAAkB,EAAE,MAAM,CAAC,kBAAkB,IAAI,uBAAuB;SACzE,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACpB,OAAO,CAAC,KAAK,CACX,wCAAwC,EACxC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,WAAW,CACnC,CAAC;QACF,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;IACxF,CAAC;IACD,OAAO,MAAM,CAAC,IAAI,CAAC;AACrB,CAAC;AAEM,MAAM,SAAS,GAAG,GAAwB,EAAE;IACjD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACvB,iBAAiB,GAAG,cAAc,EAAE,CAAC;IACvC,CAAC;IACD,OAAO,iBAAiB,CAAC;AAC3B,CAAC,CAAC;AALW,QAAA,SAAS,aAKpB;AAEK,MAAM,SAAS,GAAG,GAAwB,EAAE;IACjD,IAAG,CAAC,iBAAiB,EAAE,CAAC;QACtB,iBAAiB,GAAG,cAAc,EAAE,CAAC;IACvC,CAAC;IACD,OAAO,iBAAiB,CAAC;AAC3B,CAAC,CAAA;AALY,QAAA,SAAS,aAKrB;AAGD,IAAI,CAAC;IACH,IAAA,iBAAS,GAAE,CAAC;AAEd,CAAC;AAAC,OAAO,KAAK,EAAE,CAAC;IAEf,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;QAC5D,OAAO,CAAC,IAAI,CAAC,wFAAwF,CAAC,CAAC;IACzG,CAAC;SAAM,CAAC;QACN,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC;QACxE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;AACH,CAAC"}
</file>

<file path="packages/config/src/index.d.ts">
export * from './env';
//# sourceMappingURL=index.d.ts.map
</file>

<file path="packages/config/src/index.d.ts.map">
{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAOA,cAAc,OAAO,CAAC"}
</file>

<file path="packages/config/src/index.js">
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./env"), exports);
//# sourceMappingURL=index.js.map
</file>

<file path="packages/config/src/index.js.map">
{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAOA,wCAAsB"}
</file>

<file path="packages/config/src/index.ts">
// packages/config/src/index.ts

/**
 * Hoved-eksportfil for @repo/config TypeScript-delen.
 * Herfra eksporteres validerede miljøvariabler og potentielt andre konfigurationsfunktioner.
 */

export * from './env';
</file>

<file path="packages/config/.eslintrc.js">
module.exports = {
  extends: ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
  parser: "@typescript-eslint/parser",
  plugins: ["@typescript-eslint"],
  root: true,
  env: {
    node: true,
    es6: true,
  },
  parserOptions: {
    ecmaVersion: 2020,
    sourceType: "module",
  },
  ignorePatterns: ["dist", "node_modules", "*.config.js"],
};
</file>

<file path="packages/config/eslint-preset.js">
module.exports = {
  extends: ["next", "prettier"],
  settings: {
    next: {
      rootDir: ["apps/*/", "packages/*/"],
    },
  },
  rules: {
    "@next/next/no-html-link-for-pages": "off",
    "react/jsx-key": "off",
  },
};
</file>

<file path="packages/config/postcss.config.js">
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};
</file>

<file path="packages/core/src/types/pensum.types.d.ts">
export interface SubjectArea {
    id: number;
    name: string;
    slug: string;
    createdAt: Date;
    updatedAt: Date;
}
export interface Course {
    id: number;
    title: string;
    description: string;
    slug: string;
    subjectAreaId: number;
    subjectArea?: SubjectArea;
    createdAt: Date;
    updatedAt: Date;
}
export interface Module {
    id: number;
    title: string;
    description: string;
    order: number;
    courseId: number;
    course?: Course;
    createdAt: Date;
    updatedAt: Date;
}
export interface Lesson {
    id: number;
    title: string;
    description: string;
    order: number;
    moduleId: number;
    module?: Module;
    createdAt: Date;
    updatedAt: Date;
}
export declare enum ContentBlockType {
    TEXT = "TEXT",
    IMAGE_URL = "IMAGE_URL",
    VIDEO_URL = "VIDEO_URL",
    QUIZ_REF = "QUIZ_REF"
}
export interface ContentBlock {
    id: number;
    type: ContentBlockType;
    content: string;
    order: number;
    lessonId: number;
    lesson?: Lesson;
    createdAt: Date;
    updatedAt: Date;
}
export interface CreateSubjectAreaInput {
    name: string;
    slug: string;
}
export interface CreateCourseInput {
    title: string;
    description: string;
    slug: string;
    subjectAreaId: number;
}
export interface CreateModuleInput {
    title: string;
    description: string;
    order: number;
    courseId: number;
}
export interface CreateLessonInput {
    title: string;
    description: string;
    order: number;
    moduleId: number;
}
export interface CreateContentBlockInput {
    type: ContentBlockType;
    content: string;
    order: number;
    lessonId: number;
}
//# sourceMappingURL=pensum.types.d.ts.map
</file>

<file path="packages/core/src/types/pensum.types.d.ts.map">
{"version":3,"file":"pensum.types.d.ts","sourceRoot":"","sources":["pensum.types.ts"],"names":[],"mappings":"AAOA,MAAM,WAAW,WAAW;IAC1B,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,MAAM;IACrB,EAAE,EAAE,MAAM,CAAC;IACX,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,IAAI,EAAE,MAAM,CAAC;IACb,aAAa,EAAE,MAAM,CAAC;IACtB,WAAW,CAAC,EAAE,WAAW,CAAC;IAC1B,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,MAAM;IACrB,EAAE,EAAE,MAAM,CAAC;IACX,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,KAAK,EAAE,MAAM,CAAC;IACd,QAAQ,EAAE,MAAM,CAAC;IACjB,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,MAAM;IACrB,EAAE,EAAE,MAAM,CAAC;IACX,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,KAAK,EAAE,MAAM,CAAC;IACd,QAAQ,EAAE,MAAM,CAAC;IACjB,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,oBAAY,gBAAgB;IAC1B,IAAI,SAAS;IACb,SAAS,cAAc;IACvB,SAAS,cAAc;IACvB,QAAQ,aAAa;CACtB;AAKD,MAAM,WAAW,YAAY;IAC3B,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,gBAAgB,CAAC;IACvB,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;IACd,QAAQ,EAAE,MAAM,CAAC;IACjB,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,sBAAsB;IACrC,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;CACd;AAKD,MAAM,WAAW,iBAAiB;IAChC,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,IAAI,EAAE,MAAM,CAAC;IACb,aAAa,EAAE,MAAM,CAAC;CACvB;AAKD,MAAM,WAAW,iBAAiB;IAChC,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,KAAK,EAAE,MAAM,CAAC;IACd,QAAQ,EAAE,MAAM,CAAC;CAClB;AAKD,MAAM,WAAW,iBAAiB;IAChC,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,KAAK,EAAE,MAAM,CAAC;IACd,QAAQ,EAAE,MAAM,CAAC;CAClB;AAKD,MAAM,WAAW,uBAAuB;IACtC,IAAI,EAAE,gBAAgB,CAAC;IACvB,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;IACd,QAAQ,EAAE,MAAM,CAAC;CAClB"}
</file>

<file path="packages/core/src/types/pensum.types.js">
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentBlockType = void 0;
var ContentBlockType;
(function (ContentBlockType) {
    ContentBlockType["TEXT"] = "TEXT";
    ContentBlockType["IMAGE_URL"] = "IMAGE_URL";
    ContentBlockType["VIDEO_URL"] = "VIDEO_URL";
    ContentBlockType["QUIZ_REF"] = "QUIZ_REF";
})(ContentBlockType || (exports.ContentBlockType = ContentBlockType = {}));
//# sourceMappingURL=pensum.types.js.map
</file>

<file path="packages/core/src/types/pensum.types.js.map">
{"version":3,"file":"pensum.types.js","sourceRoot":"","sources":["pensum.types.ts"],"names":[],"mappings":";;;AA4DA,IAAY,gBAKX;AALD,WAAY,gBAAgB;IAC1B,iCAAa,CAAA;IACb,2CAAuB,CAAA;IACvB,2CAAuB,CAAA;IACvB,yCAAqB,CAAA;AACvB,CAAC,EALW,gBAAgB,gCAAhB,gBAAgB,QAK3B"}
</file>

<file path="packages/core/src/types/pensum.types.ts">
/**
 * Core pensum types for the LearningLab platform
 */

/**
 * Represents a subject area or content context
 */
export interface SubjectArea {
  id: number;
  name: string;
  slug: string; // f.eks. "template-arabic", "lab-tech"
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Represents a course within a subject area
 */
export interface Course {
  id: number;
  title: string;
  description: string;
  slug: string;
  subjectAreaId: number;
  subjectArea?: SubjectArea;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Represents a module within a course
 */
export interface Module {
  id: number;
  title: string;
  description: string;
  order: number;
  courseId: number;
  course?: Course;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Represents a lesson within a module
 */
export interface Lesson {
  id: number;
  title: string;
  description: string;
  order: number;
  moduleId: number;
  module?: Module;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Content block types
 */
export enum ContentBlockType {
  TEXT = "TEXT",
  IMAGE_URL = "IMAGE_URL",
  VIDEO_URL = "VIDEO_URL",
  QUIZ_REF = "QUIZ_REF"
}

/**
 * Represents a content block within a lesson
 */
export interface ContentBlock {
  id: number;
  type: ContentBlockType;
  content: string;
  order: number;
  lessonId: number;
  lesson?: Lesson;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Input for creating a new subject area
 */
export interface CreateSubjectAreaInput {
  name: string;
  slug: string;
}

/**
 * Input for creating a new course
 */
export interface CreateCourseInput {
  title: string;
  description: string;
  slug: string;
  subjectAreaId: number;
}

/**
 * Input for creating a new module
 */
export interface CreateModuleInput {
  title: string;
  description: string;
  order: number;
  courseId: number;
}

/**
 * Input for creating a new lesson
 */
export interface CreateLessonInput {
  title: string;
  description: string;
  order: number;
  moduleId: number;
}

/**
 * Input for creating a new content block
 */
export interface CreateContentBlockInput {
  type: ContentBlockType;
  content: string;
  order: number;
  lessonId: number;
}
</file>

<file path="packages/core/src/types/quiz.types.d.ts">
export declare enum QuestionType {
    MULTIPLE_CHOICE = "MULTIPLE_CHOICE",
    FILL_IN_BLANK = "FILL_IN_BLANK",
    MATCHING = "MATCHING"
}
export declare enum ProgressStatus {
    NOT_STARTED = "NOT_STARTED",
    IN_PROGRESS = "IN_PROGRESS",
    COMPLETED = "COMPLETED"
}
export interface Quiz {
    id: number;
    title: string;
    description: string;
    lessonId?: number | null;
    moduleId?: number | null;
    createdAt: Date;
    updatedAt: Date;
}
export interface Question {
    id: number;
    text: string;
    type: QuestionType;
    quizId: number;
    quiz?: Quiz;
    createdAt: Date;
    updatedAt: Date;
}
export interface AnswerOption {
    id: number;
    text: string;
    isCorrect: boolean;
    questionId: number;
    question?: Question;
    createdAt: Date;
    updatedAt: Date;
}
export interface QuizAttempt {
    id: number;
    userId: number;
    quizId: number;
    score: number;
    startedAt: Date;
    completedAt?: Date | null;
    createdAt: Date;
    updatedAt: Date;
}
export interface UserAnswer {
    id: number;
    quizAttemptId: number;
    questionId: number;
    selectedAnswerOptionId?: number | null;
    inputText?: string | null;
    createdAt: Date;
    updatedAt: Date;
}
export interface UserProgress {
    id: number;
    userId: number;
    lessonId?: number | null;
    quizId?: number | null;
    status: ProgressStatus;
    score?: number | null;
    quizAttemptId?: number | null;
    createdAt: Date;
    updatedAt: Date;
}
export interface CreateQuizInput {
    title: string;
    description: string;
    lessonId?: number;
    moduleId?: number;
}
export interface CreateQuestionInput {
    text: string;
    type: QuestionType;
    quizId: number;
    answerOptions?: CreateAnswerOptionInput[];
}
export interface CreateAnswerOptionInput {
    text: string;
    isCorrect: boolean;
    questionId?: number;
}
export interface StartQuizAttemptInput {
    quizId: number;
}
export interface SubmitAnswerInput {
    quizAttemptId: number;
    questionId: number;
    selectedAnswerOptionId?: number;
    inputText?: string;
}
export interface CompleteQuizAttemptInput {
    quizAttemptId: number;
}
//# sourceMappingURL=quiz.types.d.ts.map
</file>

<file path="packages/core/src/types/quiz.types.d.ts.map">
{"version":3,"file":"quiz.types.d.ts","sourceRoot":"","sources":["quiz.types.ts"],"names":[],"mappings":"AAOA,oBAAY,YAAY;IACtB,eAAe,oBAAoB;IACnC,aAAa,kBAAkB;IAC/B,QAAQ,aAAa;CACtB;AAKD,oBAAY,cAAc;IACxB,WAAW,gBAAgB;IAC3B,WAAW,gBAAgB;IAC3B,SAAS,cAAc;CACxB;AAKD,MAAM,WAAW,IAAI;IACnB,EAAE,EAAE,MAAM,CAAC;IACX,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,QAAQ,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACzB,QAAQ,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACzB,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,QAAQ;IACvB,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,YAAY,CAAC;IACnB,MAAM,EAAE,MAAM,CAAC;IACf,IAAI,CAAC,EAAE,IAAI,CAAC;IACZ,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,YAAY;IAC3B,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,MAAM,CAAC;IACb,SAAS,EAAE,OAAO,CAAC;IACnB,UAAU,EAAE,MAAM,CAAC;IACnB,QAAQ,CAAC,EAAE,QAAQ,CAAC;IACpB,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,WAAW;IAC1B,EAAE,EAAE,MAAM,CAAC;IACX,MAAM,EAAE,MAAM,CAAC;IACf,MAAM,EAAE,MAAM,CAAC;IACf,KAAK,EAAE,MAAM,CAAC;IACd,SAAS,EAAE,IAAI,CAAC;IAChB,WAAW,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC;IAC1B,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,UAAU;IACzB,EAAE,EAAE,MAAM,CAAC;IACX,aAAa,EAAE,MAAM,CAAC;IACtB,UAAU,EAAE,MAAM,CAAC;IACnB,sBAAsB,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACvC,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC1B,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,YAAY;IAC3B,EAAE,EAAE,MAAM,CAAC;IACX,MAAM,EAAE,MAAM,CAAC;IACf,QAAQ,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACzB,MAAM,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACvB,MAAM,EAAE,cAAc,CAAC;IACvB,KAAK,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACtB,aAAa,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC9B,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAKD,MAAM,WAAW,eAAe;IAC9B,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,QAAQ,CAAC,EAAE,MAAM,CAAC;CACnB;AAKD,MAAM,WAAW,mBAAmB;IAClC,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,YAAY,CAAC;IACnB,MAAM,EAAE,MAAM,CAAC;IACf,aAAa,CAAC,EAAE,uBAAuB,EAAE,CAAC;CAC3C;AAKD,MAAM,WAAW,uBAAuB;IACtC,IAAI,EAAE,MAAM,CAAC;IACb,SAAS,EAAE,OAAO,CAAC;IACnB,UAAU,CAAC,EAAE,MAAM,CAAC;CACrB;AAKD,MAAM,WAAW,qBAAqB;IACpC,MAAM,EAAE,MAAM,CAAC;CAChB;AAKD,MAAM,WAAW,iBAAiB;IAChC,aAAa,EAAE,MAAM,CAAC;IACtB,UAAU,EAAE,MAAM,CAAC;IACnB,sBAAsB,CAAC,EAAE,MAAM,CAAC;IAChC,SAAS,CAAC,EAAE,MAAM,CAAC;CACpB;AAKD,MAAM,WAAW,wBAAwB;IACvC,aAAa,EAAE,MAAM,CAAC;CACvB"}
</file>

<file path="packages/core/src/types/quiz.types.js">
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProgressStatus = exports.QuestionType = void 0;
var QuestionType;
(function (QuestionType) {
    QuestionType["MULTIPLE_CHOICE"] = "MULTIPLE_CHOICE";
    QuestionType["FILL_IN_BLANK"] = "FILL_IN_BLANK";
    QuestionType["MATCHING"] = "MATCHING";
})(QuestionType || (exports.QuestionType = QuestionType = {}));
var ProgressStatus;
(function (ProgressStatus) {
    ProgressStatus["NOT_STARTED"] = "NOT_STARTED";
    ProgressStatus["IN_PROGRESS"] = "IN_PROGRESS";
    ProgressStatus["COMPLETED"] = "COMPLETED";
})(ProgressStatus || (exports.ProgressStatus = ProgressStatus = {}));
//# sourceMappingURL=quiz.types.js.map
</file>

<file path="packages/core/src/types/quiz.types.js.map">
{"version":3,"file":"quiz.types.js","sourceRoot":"","sources":["quiz.types.ts"],"names":[],"mappings":";;;AAOA,IAAY,YAIX;AAJD,WAAY,YAAY;IACtB,mDAAmC,CAAA;IACnC,+CAA+B,CAAA;IAC/B,qCAAqB,CAAA;AACvB,CAAC,EAJW,YAAY,4BAAZ,YAAY,QAIvB;AAKD,IAAY,cAIX;AAJD,WAAY,cAAc;IACxB,6CAA2B,CAAA;IAC3B,6CAA2B,CAAA;IAC3B,yCAAuB,CAAA;AACzB,CAAC,EAJW,cAAc,8BAAd,cAAc,QAIzB"}
</file>

<file path="packages/core/src/types/user.types.d.ts">
export declare enum Role {
    USER = "USER",
    ADMIN = "ADMIN"
}
export interface User {
    id: number;
    email: string;
    name?: string | null;
    role: Role;
    createdAt: Date;
    updatedAt: Date;
}
//# sourceMappingURL=user.types.d.ts.map
</file>

<file path="packages/core/src/types/user.types.d.ts.map">
{"version":3,"file":"user.types.d.ts","sourceRoot":"","sources":["user.types.ts"],"names":[],"mappings":"AAMA,oBAAY,IAAI;IACd,IAAI,SAAS;IACb,KAAK,UAAU;CAChB;AAOD,MAAM,WAAW,IAAI;IACnB,EAAE,EAAE,MAAM,CAAC;IACX,KAAK,EAAE,MAAM,CAAC;IACd,IAAI,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACrB,IAAI,EAAE,IAAI,CAAC;IACX,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CAGjB"}
</file>

<file path="packages/core/src/types/user.types.js">
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Role = void 0;
var Role;
(function (Role) {
    Role["USER"] = "USER";
    Role["ADMIN"] = "ADMIN";
})(Role || (exports.Role = Role = {}));
//# sourceMappingURL=user.types.js.map
</file>

<file path="packages/core/src/types/user.types.js.map">
{"version":3,"file":"user.types.js","sourceRoot":"","sources":["user.types.ts"],"names":[],"mappings":";;;AAMA,IAAY,IAGX;AAHD,WAAY,IAAI;IACd,qBAAa,CAAA;IACb,uBAAe,CAAA;AACjB,CAAC,EAHW,IAAI,oBAAJ,IAAI,QAGf"}
</file>

<file path="packages/core/src/types/user.types.ts">
// packages/core/src/types/user.types.ts

/**
 * Definerer de mulige roller en bruger kan have i systemet.
 * Disse matcher værdierne defineret i Prisma schemaet.
 */
export enum Role {
  USER = 'USER',
  ADMIN = 'ADMIN',
}

/**
 * Interface for en bruger.
 * Dette er en ren data-kontrakt og indeholder ikke backend-specifikke felter som passwordHash.
 * Den er beregnet til at blive brugt på tværs af frontend og backend for type-sikkerhed.
 */
export interface User {
  id: number;
  email: string;
  name?: string | null; // Navn er valgfrit og kan være null
  role: Role;
  createdAt: Date; // Tidspunkt for oprettelse af brugeren
  updatedAt: Date; // Tidspunkt for seneste opdatering af brugeren
  // passwordResetToken, passwordResetExpires og passwordHash er udeladt,
  // da de er backend-specifikke og ikke bør være en del af den delte kerne-type.
}
</file>

<file path="packages/core/src/index.d.ts">
export * from './types/user.types';
export * from './types/pensum.types';
export * from './types/quiz.types';
//# sourceMappingURL=index.d.ts.map
</file>

<file path="packages/core/src/index.d.ts.map">
{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AASA,cAAc,oBAAoB,CAAC;AAGnC,cAAc,sBAAsB,CAAC;AAGrC,cAAc,oBAAoB,CAAC"}
</file>

<file path="packages/core/src/index.js">
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./types/user.types"), exports);
__exportStar(require("./types/pensum.types"), exports);
__exportStar(require("./types/quiz.types"), exports);
//# sourceMappingURL=index.js.map
</file>

<file path="packages/core/src/index.js.map">
{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AASA,qDAAmC;AAGnC,uDAAqC;AAGrC,qDAAmC"}
</file>

<file path="packages/core/.eslintrc.js">
module.exports = {
  extends: ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
  parser: "@typescript-eslint/parser",
  plugins: ["@typescript-eslint"],
  root: true,
  env: {
    node: true,
    es6: true,
  },
  parserOptions: {
    ecmaVersion: 2020,
    sourceType: "module",
  },
  ignorePatterns: ["dist", "node_modules", "*.config.js"],
};
</file>

<file path="packages/tsconfig/base.json">
{
  "$schema": "https://json.schemastore.org/tsconfig",
  "display": "Default",
  "compilerOptions": {
    "composite": false,
    "declaration": true,
    "declarationMap": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "inlineSources": false,
    "isolatedModules": true,
    "moduleResolution": "node",
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    "preserveWatchOutput": true,
    "skipLibCheck": true,
    "strict": true
  },
  "exclude": ["node_modules"]
}
</file>

<file path="packages/tsconfig/nestjs.json">
{
  "$schema": "https://json.schemastore.org/tsconfig",
  "extends": "./base.json",
  "compilerOptions": {
    "module": "commonjs",
    "declaration": true,
    "removeComments": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "allowSyntheticDefaultImports": true,
    "target": "es2017",
    "sourceMap": true,
    "incremental": true,
    "skipLibCheck": true,
    "strictNullChecks": false,
    "noImplicitAny": false,
    "strictBindCallApply": false,
    "forceConsistentCasingInFileNames": false,
    "noFallthroughCasesInSwitch": false
  }
}
</file>

<file path="packages/tsconfig/nextjs.json">
{
  "$schema": "https://json.schemastore.org/tsconfig",
  "display": "Next.js",
  "extends": "./base.json",
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "incremental": true,
    "esModuleInterop": true,
    "module": "esnext",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve"
  },
  "include": ["src", "next-env.d.ts"],
  "exclude": ["node_modules"]
}
</file>

<file path="packages/tsconfig/react-library.json">
{
  "$schema": "https://json.schemastore.org/tsconfig",
  "display": "React Library",
  "extends": "./base.json",
  "compilerOptions": {
    "lib": ["ES2015"],
    "module": "ESNext",
    "target": "ES6",
    "jsx": "react-jsx"
  }
}
</file>

<file path="packages/tsconfig/README.md">
# `tsconfig`

These are base shared `tsconfig.json`s from which all other `tsconfig.json`'s inherit from.
</file>

<file path="packages/ui/components/Button/Button.tsx">
export const Button = () => {
  return <button className="text-lg bg-red-500">boo</button>;
};
</file>

<file path="packages/ui/index.tsx">
export * from "./components/Button/Button";
</file>

<file path="prisma/migrations/20250520183549_new/migration.sql">
-- CreateEnum
CREATE TYPE "Role" AS ENUM ('USER', 'ADMIN');

-- CreateTable
CREATE TABLE "User" (
    "id" SERIAL NOT NULL,
    "email" TEXT NOT NULL,
    "passwordHash" TEXT NOT NULL,
    "name" TEXT,
    "role" "Role" NOT NULL DEFAULT 'USER',
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,
    "passwordResetToken" TEXT,
    "passwordResetExpires" TIMESTAMP(3),

    CONSTRAINT "User_pkey" PRIMARY KEY ("id")
);

-- CreateIndex
CREATE UNIQUE INDEX "User_email_key" ON "User"("email");

-- CreateIndex
CREATE UNIQUE INDEX "User_passwordResetToken_key" ON "User"("passwordResetToken");
</file>

<file path="prisma/migrations/migration_lock.toml">
# Please do not edit this file manually
# It should be added in your version-control system (i.e. Git)
provider = "postgresql"
</file>

<file path="prisma/schema.prisma">
// apps/api/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  name         String?
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Nye felter til password reset
  passwordResetToken   String?   @unique // Gør tokenet unikt for at kunne slå det op
  passwordResetExpires DateTime?
}

enum Role {
  USER
  ADMIN
}
</file>

<file path=".node-version">
22
</file>

<file path="E1-MVP-UI-Plan.md">
# Plan for at færdiggøre E1 - MVP-UI

## Oversigt over E1 opgaver

| Key  | Summary                      | Status | SP | Beskrivelse                                                    |
| ---- | ---------------------------- | ------ | -- | -------------------------------------------------------------- |
| E1‑1 | Layout & App‑shell           | WIP    | 5  | Header m. logo, user‑menu; sidebar collapsible; dark‑mode toggle |
| E1‑2 | AuthContext + ProtectedRoute | TODO   | 3  | Uautoriseret redirect → `/login`; efter login redirect → lastRoute |
| E1‑3 | Dashboard page               | TODO   | 5  | Grid af kurser (`/courses` API) + placeholder statistik |
| E1‑4 | Kursusflow V1                | TODO   | 8  | `courses/[slug]` → modul‑liste; `lessons/[id]` viser TEXT‑contentBlocks |

## Detaljeret implementeringsplan

### 1. Færdiggørelse af E1-1: Layout & App-shell (WIP → DONE)

**Estimeret tid:** 1-2 dage

**Opgaver:**

1. **Færdiggør header-komponenten:**
   - Implementer logo og navigation
   - Tilføj user-menu dropdown med placeholder for brugerinfo
   - Tilføj responsive design for mobil/tablet

2. **Implementer sidebar:**
   - Opret collapsible sidebar-komponent
   - Tilføj navigation links til forskellige sektioner
   - Implementer toggle-funktion for at vise/skjule sidebar

3. **Tilføj dark-mode toggle:**
   - Implementer context for theme-state
   - Opret toggle-komponent for dark/light mode
   - Tilføj CSS-variabler for farver i begge temaer

4. **Integrér app-shell i layout:**
   - Opret en layout-komponent der indeholder header og sidebar
   - Implementer responsive design for hele app-shell
   - Test på forskellige skærmstørrelser

### 2. Implementering af E1-2: AuthContext + ProtectedRoute

**Estimeret tid:** 1 dag

**Opgaver:**

1. **Opret AuthContext:**
   - Implementer context med state for authentication (isAuthenticated, user, loading)
   - Tilføj login/logout funktioner
   - Tilføj token-håndtering (localStorage/sessionStorage)

2. **Implementer ProtectedRoute komponent:**
   - Opret HOC eller komponent der tjekker authentication status
   - Implementer redirect til login-side for uautoriserede brugere
   - Gem lastRoute i state/localStorage for at kunne redirecte tilbage efter login

3. **Opret login-side:**
   - Design simpel login-formular
   - Implementer form-validering
   - Tilslut til AuthContext for login-funktionalitet

4. **Test authentication flow:**
   - Test redirect fra beskyttede routes
   - Test login og redirect tilbage til oprindelig route

### 3. Implementering af E1-3: Dashboard page

**Estimeret tid:** 1-2 dage

**Opgaver:**

1. **Opret API-integration:**
   - Implementer service/hooks til at hente kurser fra `/courses` API
   - Tilføj loading og error states
   - Implementer caching af data hvis nødvendigt

2. **Design kursus-grid:**
   - Opret responsive grid-layout for kurser
   - Design kursus-kort med billede, titel, beskrivelse
   - Implementer hover/fokus effekter

3. **Tilføj placeholder statistik:**
   - Design widgets til statistik (antal kurser, fremskridt, etc.)
   - Implementer placeholder data indtil backend er klar
   - Gør widgets responsive

4. **Implementer filtrering/søgning:**
   - Tilføj søgefelt for kurser
   - Implementer filtrering efter kategori/tags
   - Tilføj sorteringsmuligheder

### 4. Implementering af E1-4: Kursusflow V1

**Estimeret tid:** 2-3 dage

**Opgaver:**

1. **Opret kursusside med dynamisk routing:**
   - Implementer `courses/[slug]` route
   - Hent kursusdata baseret på slug
   - Design kursusside med header, beskrivelse og moduler

2. **Implementer modulliste:**
   - Design liste over moduler i kurset
   - Tilføj progress-indikator for hvert modul
   - Implementer navigation mellem moduler

3. **Opret lesson-side:**
   - Implementer `lessons/[id]` route
   - Design lesson-side med navigation og indhold
   - Tilføj breadcrumb navigation

4. **Implementer content blocks:**
   - Opret komponenter for TEXT-contentBlocks
   - Implementer rendering af forskellige indholdstyper
   - Tilføj styling for indholdsblokke

## Tekniske overvejelser

1. **State Management:**
   - Brug React Context for global state (auth, theme)
   - Overvej React Query for data fetching og caching

2. **Styling:**
   - Brug Tailwind CSS for konsistent styling
   - Implementer responsive design fra starten
   - Brug CSS-variabler for theming

3. **Komponent-struktur:**
   - Opret genbrugelige komponenter i UI-pakken
   - Dokumenter komponenter med JSDoc/TSDoc
   - Implementer prop-validering med TypeScript

4. **Performance:**
   - Implementer lazy loading af routes
   - Optimer rendering med useMemo/useCallback hvor relevant
   - Brug Next.js Image-komponent for optimerede billeder

## Testplan

1. **Unit tests:**
   - Test AuthContext og ProtectedRoute logik
   - Test data fetching hooks/services

2. **Integration tests:**
   - Test navigation flow mellem sider
   - Test authentication flow

3. **Responsive tests:**
   - Test på forskellige skærmstørrelser
   - Test på forskellige browsere

## Definition af Done

- Alle komponenter er implementeret og stylet
- Responsive design fungerer på alle skærmstørrelser
- Authentication flow fungerer korrekt
- API-integration er implementeret (med mock data hvis nødvendigt)
- Alle acceptance kriterier er opfyldt
- Koden er dokumenteret og følger projektets kodestil
- Tests er skrevet og passerer

## Næste skridt efter E1

- Begynde på E2 - Quiz Core
- Forbedre UI/UX baseret på feedback
- Implementere backend integration for manglende endpoints
</file>

<file path="E2-Quiz-Core-Plan.md">
# E2 - Quiz Core Implementeringsplan

## Oversigt
E2 fokuserer på at implementere quiz-funktionaliteten i LearningLab, som er en central del af læringsoplevelsen. Dette inkluderer UI til at tage quizzer, visning af resultater og integration med backend for at gemme brugerens fremskridt.

## Tidsramme
**Target:** 5 udviklingsdage

## User Stories

### E2-1: Quiz UI V1 (8 SP)
**Beskrivelse:** Implementere en grundlæggende quiz-brugergrænseflade, der viser ét spørgsmål ad gangen og giver feedback efter indsendelse.

**Acceptance Criteria:**
- Brugeren kan se ét spørgsmål ad gangen
- Brugeren kan vælge et svar blandt flere muligheder
- Brugeren kan navigere mellem spørgsmål (næste/forrige)
- Ved indsendelse af quiz vises en score-toast med resultatet
- Korrekte og forkerte svar markeres tydeligt

**Tekniske Tasks:**
1. Opret `QuizComponent` til at vise et enkelt spørgsmål
2. Implementer `QuizNavigation` til at navigere mellem spørgsmål
3. Opret `QuizContext` til at håndtere quiz-tilstand
4. Implementer `SubmitQuiz`-funktion til at beregne score
5. Opret `ScoreToast`-komponent til at vise resultatet
6. Tilføj side til at starte en quiz (`/courses/[slug]/quizzes/[id]`)

### E2-2: Resultatside & fremdrift (5 SP)
**Beskrivelse:** Implementere en resultatside, der viser brugerens score og fremskridt, samt en liste over forkerte svar.

**Acceptance Criteria:**
- Efter en quiz vises en resultatside med samlet score
- Radial progress-indikator viser procentvis korrekte svar
- Liste over forkerte svar med korrekte svar vist
- Mulighed for at prøve quizzen igen
- Navigere tilbage til kurset

**Tekniske Tasks:**
1. Opret `QuizResultPage` komponent
2. Implementer `RadialProgress`-komponent
3. Opret `IncorrectAnswersList`-komponent
4. Tilføj "Prøv igen" og "Tilbage til kursus" knapper
5. Tilføj route til resultatside (`/courses/[slug]/quizzes/[id]/results`)

### E2-3: UserProgress API-integration (3 SP)
**Beskrivelse:** Integrere med backend API for at gemme brugerens fremskridt efter en quiz.

**Acceptance Criteria:**
- Efter en quiz sendes resultatet til backend via PATCH `/user-progress`
- Brugerens fremskridt opdateres i UI baseret på API-svar
- Fejlhåndtering ved netværksproblemer (offline-support)
- Loading-states under API-kald

**Tekniske Tasks:**
1. Opret `userProgressApi` service
2. Implementer `updateQuizProgress`-funktion
3. Integrer med `QuizContext` for at gemme resultater
4. Tilføj fejlhåndtering og retry-logik
5. Implementer loading-states under API-kald

## Teknisk Arkitektur

### Datamodeller

```typescript
// Quiz-relaterede typer
interface QuizQuestion {
  id: number;
  text: string;
  options: QuizOption[];
  explanation?: string;
}

interface QuizOption {
  id: number;
  text: string;
  isCorrect: boolean;
}

interface Quiz {
  id: number;
  title: string;
  description: string;
  courseId: number;
  moduleId: number;
  questions: QuizQuestion[];
  passingScore: number; // f.eks. 70%
}

// Brugerens svar og fremskridt
interface UserAnswer {
  questionId: number;
  selectedOptionId: number;
  isCorrect: boolean;
}

interface QuizResult {
  quizId: number;
  score: number; // Procentvis score
  answers: UserAnswer[];
  completedAt: string; // ISO-datostreng
  passed: boolean;
}

interface UserProgress {
  userId: number;
  courseId: number;
  completedLessons: number[];
  quizResults: QuizResult[];
  overallProgress: number; // Procentvis fremskridt i kurset
}
```

### Komponenter

#### Quiz UI
- `QuizContainer`: Overordnet container for quiz-oplevelsen
- `QuizQuestion`: Viser et enkelt spørgsmål med svarmuligheder
- `QuizNavigation`: Knapper til at navigere mellem spørgsmål
- `QuizProgress`: Viser fremskridt i quizzen (f.eks. "3 af 10 spørgsmål")
- `SubmitQuizButton`: Knap til at indsende quizzen
- `ScoreToast`: Toast-notifikation med resultatet

#### Resultatside
- `QuizResultPage`: Overordnet side for quiz-resultater
- `RadialProgress`: Cirkulær fremskridtsindikator
- `IncorrectAnswersList`: Liste over forkerte svar
- `CorrectAnswerCard`: Kort der viser det korrekte svar
- `RetryQuizButton`: Knap til at prøve quizzen igen

#### API Integration
- `userProgressApi`: Service til at kommunikere med backend
- `useQuizProgress`: Custom hook til at håndtere quiz-fremskridt
- `ProgressContext`: Context til at dele fremskridtsdata på tværs af komponenter

## Implementeringsplan

### Dag 1: Quiz UI Grundstruktur
- Opret grundlæggende quiz-komponenter
- Implementer quiz-datamodel
- Opsæt mock-data til udvikling
- Implementer grundlæggende navigation mellem spørgsmål

### Dag 2: Quiz Interaktion
- Implementer valg af svarmuligheder
- Tilføj validering af svar
- Implementer quiz-indsendelse
- Tilføj score-beregning

### Dag 3: Resultatside
- Opret resultatside-layout
- Implementer radial progress-komponent
- Tilføj liste over forkerte svar
- Implementer navigation til/fra resultatsiden

### Dag 4: API Integration
- Opsæt API-service til user progress
- Implementer PATCH `/user-progress`
- Tilføj fejlhåndtering
- Implementer loading-states

### Dag 5: Polering og Tests
- Tilføj animationer og overgange
- Forbedre responsivt design
- Implementer unit tests
- Gennemfør end-to-end test af quiz-flow

## Afhængigheder
- E1 skal være færdigimplementeret
- Backend API-endepunkt `/user-progress` skal være tilgængeligt
- Adgang til quiz-data fra backend

## Risici og Udfordringer
- Kompleksitet i at håndtere forskellige typer quiz-spørgsmål
- Offline-support kan være udfordrende
- Performance ved store quizzer med mange spørgsmål
- Synkronisering af brugerens fremskridt på tværs af enheder

## Definition af Done
- Alle acceptance-kriterier er opfyldt
- Koden er testet og reviewet
- Dokumentation er opdateret
- UI er responsivt og tilgængeligt
- Performance er optimeret
</file>

<file path="kommando fejl.txt">
1. direnv: loading ~/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/.envrc
direnv: export +DATABASE_URL +JWT_EXPIRES_IN +JWT_SECRET +NEXT_PUBLIC_API_URL ~PATH
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % nps prepare

nps is executing `prepare` : nps prepare.web prepare.api
nps is executing `prepare.web` : yarn
➤ YN0000: · Yarn 4.9.1
➤ YN0000: ┌ Resolution step
➤ YN0000: └ Completed in 0s 246ms
➤ YN0000: ┌ Fetch step
➤ YN0000: └ Completed in 0s 632ms
➤ YN0000: ┌ Link step
➤ YN0000: └ Completed in 0s 275ms
➤ YN0000: · Done in 1s 212ms
nps is executing `prepare.api` : nps prisma.migrate.dev
nps is executing `prisma.migrate.dev` : cd /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api && npx prisma migrate dev
/bin/sh: line 0: cd: /Users/Yousef_1/Dokumenter/Kodefiler/Projekt: No such file or directory
The script called "prisma.migrate.dev" which runs "cd /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api && npx prisma migrate dev" failed with exit code 1 https://github.com/sezna/nps/blob/master/other/ERRORS_AND_WARNINGS.md#failed-with-exit-code
The script called "prepare.api" which runs "nps prisma.migrate.dev" failed with exit code 1 https://github.com/sezna/nps/blob/master/other/ERRORS_AND_WARNINGS.md#failed-with-exit-code
The script called "prepare" which runs "nps prepare.web prepare.api" failed with exit code 1 https://github.com/sezna/nps/blob/master/other/ERRORS_AND_WARNINGS.md#failed-with-exit-code
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % nps dev

nps is executing `dev` : npx turbo run dev
• Packages in scope: @repo/config, @repo/core, api, tsconfig, ui, web
• Running dev in 6 packages
• Remote caching disabled
api:dev: cache bypass, force executing 3934ca971137b08f
web:dev: cache bypass, force executing 245466cf67251b3a
web:dev: - ready started server on 0.0.0.0:3000, url: http://localhost:3000
web:dev: - info Loaded env from /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/.env.local
api:dev: Environment variables loaded from .env
api:dev: Prisma schema loaded from prisma/schema.prisma
api:dev: 
api:dev: ✔ Generated Prisma Client (v5.22.0) to ./../../node_modules/@prisma/client in 46ms
api:dev: 
api:dev: Start by importing your Prisma Client (See: https://pris.ly/d/importing-client)
api:dev: 
api:dev: Tip: Curious about the SQL queries Prisma ORM generates? Optimize helps you enhance your visibility: https://pris.ly/tip-2-optimize
api:dev: 
web:dev: - info automatically enabled Fast Refresh for 1 custom loader
web:dev: - event compiled client and server successfully in 145 ms (18 modules)
api:dev: 
api:dev:  Info  Webpack is building your sources...
api:dev: 
web:dev: - wait compiling...
web:dev: - event compiled client and server successfully in 177 ms (18 modules)
api:dev: ERROR in ./src/auth/auth.service.ts:39:41
api:dev: TS2769: No overload matches this call.
api:dev:   Overload 1 of 4, '(propertyPath: never, options: ConfigGetOptions): string', gave the following error.
api:dev:     Argument of type '"JWT_SECRET"' is not assignable to parameter of type 'never'.
api:dev:   Overload 2 of 4, '(propertyPath: string | number | symbol, defaultValue: string): string', gave the following error.
api:dev:     Argument of type '{ infer: boolean; }' is not assignable to parameter of type 'string'.
api:dev:     37 |         this.saltRounds = saltFromEnv;
api:dev:     38 |     }
api:dev:   > 39 |     this.jwtSecret = this.configService.get('JWT_SECRET', { infer: true });
api:dev:        |                                         ^^^
api:dev:     40 |     this.jwtExpiresIn = this.configService.get('JWT_EXPIRES_IN', { infer: true });
api:dev:     41 |   }
api:dev:     42 |
api:dev: 
api:dev: ERROR in ./src/auth/auth.service.ts:40:44
api:dev: TS2769: No overload matches this call.
api:dev:   Overload 1 of 4, '(propertyPath: never, options: ConfigGetOptions): string', gave the following error.
api:dev:     Argument of type '"JWT_EXPIRES_IN"' is not assignable to parameter of type 'never'.
api:dev:   Overload 2 of 4, '(propertyPath: string | number | symbol, defaultValue: string): string', gave the following error.
api:dev:     Argument of type '{ infer: boolean; }' is not assignable to parameter of type 'string'.
api:dev:     38 |     }
api:dev:     39 |     this.jwtSecret = this.configService.get('JWT_SECRET', { infer: true });
api:dev:   > 40 |     this.jwtExpiresIn = this.configService.get('JWT_EXPIRES_IN', { infer: true });
api:dev:        |                                            ^^^
api:dev:     41 |   }
api:dev:     42 |
api:dev:     43 |   private mapToCoreUserFromPrisma(user: PrismaGeneratedUserType): Omit<CoreUser, 'passwordHash'> {
api:dev: 
api:dev: ERROR in ./src/config/environment-variables.ts:1:22
api:dev: TS2307: Cannot find module 'joi' or its corresponding type declarations.
api:dev:   > 1 | import * as Joi from 'joi';
api:dev:       |                      ^^^^^
api:dev:     2 |
api:dev:     3 | export interface EnvironmentVariables {
api:dev:     4 |   DATABASE_URL: string;
api:dev: 
api:dev: webpack 5.97.1 compiled with 3 errors in 3059 ms
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM     LOG [NestFactory] Starting Nest application...
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM     LOG [InstanceLoader] PersistenceModule dependencies initialized +387ms
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM     LOG [InstanceLoader] PassportModule dependencies initialized +0ms
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM     LOG [InstanceLoader] ConfigHostModule dependencies initialized +5ms
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM     LOG [InstanceLoader] JwtModule dependencies initialized +0ms
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM     LOG [InstanceLoader] ConfigModule dependencies initialized +1ms
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM     LOG [InstanceLoader] ConfigModule dependencies initialized +0ms
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM     LOG [InstanceLoader] AppModule dependencies initialized +1ms
api:dev: [Nest] 45285  - 05/20/2025, 7:18:15 PM   ERROR [ExceptionHandler] JwtStrategy requires a secret or key
api:dev: TypeError: JwtStrategy requires a secret or key
api:dev:     at new JwtStrategy (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/node_modules/passport-jwt/lib/strategy.js:45:15)
api:dev:     at new StrategyWithMixin (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api/dist/main.js:12396:13)
api:dev:     at new JwtStrategy (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api/dist/main.js:12633:9)
api:dev:     at Injector.instantiateClass (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api/dist/main.js:3555:19)
api:dev:     at callback (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api/dist/main.js:3247:45)
api:dev:     at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
api:dev:     at async Injector.resolveConstructorParams (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api/dist/main.js:3327:24)
api:dev:     at async Injector.loadInstance (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api/dist/main.js:3252:13)
api:dev:     at async Injector.loadProvider (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api/dist/main.js:3280:9)
api:dev:     at async /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api/dist/main.js:8771:13


2. direnv: loading ~/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/.envrc
direnv: export +DATABASE_URL +JWT_EXPIRES_IN +JWT_SECRET +NEXT_PUBLIC_API_URL ~PATH
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % npx tsc --build --force

error TS5083: Cannot read file '/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/tsconfig.json'.


Found 1 error.

Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % 

3. 
nps build
direnv: loading ~/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/.envrc
direnv: export +DATABASE_URL +JWT_EXPIRES_IN +JWT_SECRET +NEXT_PUBLIC_API_URL ~PATH
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % nps build

nps is executing `build` : npx turbo run build
• Packages in scope: @repo/config, @repo/core, api, tsconfig, ui, web
• Running build in 6 packages
• Remote caching disabled
@repo/core:build: cache miss, executing 53ca0db70895d2e2
@repo/config:build: cache hit, replaying logs a15f47f6011a3a03
web:build: cache miss, executing 16fa9b71a528c371
api:build: cache miss, executing 21817944745a79e7
web:build: - info Loaded env from /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/.env.local
web:build: - info Linting and checking validity of types...
web:build: - error ESLint: Cannot read config file: /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/.eslintrc.js Error: Cannot find module 'config/eslint-preset' Require stack: - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/.eslintrc.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/node_modules/@eslint/eslintrc/dist/eslintrc.cjs - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/node_modules/eslint/lib/cli-engine/cli-engine.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/node_modules/eslint/lib/eslint/eslint.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/node_modules/eslint/lib/eslint/index.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/node_modules/eslint/lib/api.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/node_modules/next/dist/lib/eslint/runLintCheck.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/node_modules/next/dist/compiled/jest-worker/processChild.js
api:build: src/auth/auth.service.ts:39:41 - error TS2769: No overload matches this call.
api:build:   Overload 1 of 4, '(propertyPath: never, options: ConfigGetOptions): string', gave the following error.
api:build:     Argument of type '"JWT_SECRET"' is not assignable to parameter of type 'never'.
api:build:   Overload 2 of 4, '(propertyPath: string | number | symbol, defaultValue: string): string', gave the following error.
api:build:     Argument of type '{ infer: boolean; }' is not assignable to parameter of type 'string'.
api:build: 
api:build: 39     this.jwtSecret = this.configService.get('JWT_SECRET', { infer: true });
api:build:                                            ~~~
api:build: 
api:build: src/auth/auth.service.ts:40:44 - error TS2769: No overload matches this call.
api:build:   Overload 1 of 4, '(propertyPath: never, options: ConfigGetOptions): string', gave the following error.
api:build:     Argument of type '"JWT_EXPIRES_IN"' is not assignable to parameter of type 'never'.
api:build:   Overload 2 of 4, '(propertyPath: string | number | symbol, defaultValue: string): string', gave the following error.
api:build:     Argument of type '{ infer: boolean; }' is not assignable to parameter of type 'string'.
api:build: 
api:build: 40     this.jwtExpiresIn = this.configService.get('JWT_EXPIRES_IN', { infer: true });
api:build:                                               ~~~
api:build: 
api:build: src/config/environment-variables.ts:1:22 - error TS2307: Cannot find module 'joi' or its corresponding type declarations.
api:build: 
api:build: 1 import * as Joi from 'joi';
api:build:                        ~~~~~
api:build: 
api:build: Found 3 error(s).
api:build: 
api:build: ERROR: command finished with error: command (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api) yarn run build exited (1)
api#build: command (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api) yarn run build exited (1)

 Tasks:    2 successful, 4 total
Cached:    1 cached, 4 total
  Time:    6.247s 
Failed:    api#build

 ERROR  run failed: command  exited (1)
The script called "build" which runs "npx turbo run build" failed with exit code 1 https://github.com/sezna/nps/blob/master/other/ERRORS_AND_WARNINGS.md#failed-with-exit-code
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % 
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % yarn build

• Packages in scope: @repo/config, @repo/core, api, tsconfig, ui, web
• Running build in 6 packages
• Remote caching disabled
@repo/core:build: cache hit (outputs already on disk), replaying logs 53ca0db70895d2e2
@repo/config:build: cache hit, replaying logs a15f47f6011a3a03
web:build: cache miss, executing 5bf4f2bc68ce92d2
api:build: cache miss, executing ae1d82d10d7e1fbb
web:build: - info Loaded env from /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/.env.local
web:build: - info Linting and checking validity of types...
web:build: - error ESLint: Cannot read config file: /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/.eslintrc.js Error: Cannot find module 'config/eslint-preset' Require stack: - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/.eslintrc.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/node_modules/@eslint/eslintrc/dist/eslintrc.cjs - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/node_modules/eslint/lib/cli-engine/cli-engine.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/node_modules/eslint/lib/eslint/eslint.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/node_modules/eslint/lib/eslint/index.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/web/node_modules/eslint/lib/api.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/node_modules/next/dist/lib/eslint/runLintCheck.js - /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/node_modules/next/dist/compiled/jest-worker/processChild.js
api:build: src/auth/auth.service.ts:39:41 - error TS2769: No overload matches this call.
api:build:   Overload 1 of 4, '(propertyPath: never, options: ConfigGetOptions): string', gave the following error.
api:build:     Argument of type '"JWT_SECRET"' is not assignable to parameter of type 'never'.
api:build:   Overload 2 of 4, '(propertyPath: string | number | symbol, defaultValue: string): string', gave the following error.
api:build:     Argument of type '{ infer: boolean; }' is not assignable to parameter of type 'string'.
api:build: 
api:build: 39     this.jwtSecret = this.configService.get('JWT_SECRET', { infer: true });
api:build:                                            ~~~
api:build: 
api:build: src/auth/auth.service.ts:40:44 - error TS2769: No overload matches this call.
api:build:   Overload 1 of 4, '(propertyPath: never, options: ConfigGetOptions): string', gave the following error.
api:build:     Argument of type '"JWT_EXPIRES_IN"' is not assignable to parameter of type 'never'.
api:build:   Overload 2 of 4, '(propertyPath: string | number | symbol, defaultValue: string): string', gave the following error.
api:build:     Argument of type '{ infer: boolean; }' is not assignable to parameter of type 'string'.
api:build: 
api:build: 40     this.jwtExpiresIn = this.configService.get('JWT_EXPIRES_IN', { infer: true });
api:build:                                               ~~~
api:build: 
api:build: src/config/environment-variables.ts:1:22 - error TS2307: Cannot find module 'joi' or its corresponding type declarations.
api:build: 
api:build: 1 import * as Joi from 'joi';
api:build:                        ~~~~~
api:build: 
api:build: Found 3 error(s).
api:build: 
api:build: ERROR: command finished with error: command (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api) yarn run build exited (1)
api#build: command (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/apps/api) yarn run build exited (1)

 Tasks:    2 successful, 4 total
Cached:    2 cached, 4 total
  Time:    4.513s 
Failed:    api#build

 ERROR  run failed: command  exited (1)
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % 

4. 
yarn lint
direnv: loading ~/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/.envrc
direnv: export +DATABASE_URL +JWT_EXPIRES_IN +JWT_SECRET +NEXT_PUBLIC_API_URL ~PATH
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % yarn l
int

• Packages in scope: @repo/config, @repo/core, api, tsconfig, ui, web
• Running lint in 6 packages
• Remote caching disabled
api:lint: cache miss, executing e5e515bb0372b0a5
@repo/core:lint: cache miss, executing 685113616400396e
@repo/config:lint: cache miss, executing 6a4cf30679e135a6
web:lint: cache miss, executing 3fceb7f42a4980a3
@repo/config:lint: 
@repo/config:lint: Oops! Something went wrong! :(
@repo/config:lint: 
@repo/config:lint: ESLint: 8.57.1
@repo/config:lint: 
@repo/config:lint: ESLint couldn't find a configuration file. To set up a configuration file for this project, please run:
@repo/config:lint: 
@repo/config:lint:     npm init @eslint/config
@repo/config:lint: 
@repo/config:lint: ESLint looked for configuration files in /Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/packages/config/dist and its ancestors. If it found none, it then looked in your home directory.
@repo/config:lint: 
@repo/config:lint: If you think you already have a configuration file or if you need more help, please stop by the ESLint Discord server: https://eslint.org/chat
@repo/config:lint: 
@repo/config:lint: ERROR: command finished with error: command (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/packages/config) yarn run lint exited (2)
@repo/config#lint: command (/Users/Yousef_1/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/packages/config) yarn run lint exited (2)

 Tasks:    0 successful, 4 total
Cached:    0 cached, 4 total
  Time:    1.491s 
Failed:    @repo/config#lint

 ERROR  run failed: command  exited (2)
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % 
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % 

5. 
direnv: loading ~/Dokumenter/Kodefiler/Projekt m. Ejaz template/LearningLab/LearningLab/.envrc
direnv: export +DATABASE_URL +JWT_EXPIRES_IN +JWT_SECRET +NEXT_PUBLIC_API_URL ~PATH
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % npx tsc --noEmit --build apps/api/tsconfig.json apps/web/tsconfig.json packages/**/*.json

error TS6369: Option '--build' must be the first command line argument.
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % cd apps/api
yarn test:ci

Environment variables loaded from .env
Prisma schema loaded from prisma/schema.prisma

✔ Generated Prisma Client (v5.22.0) to ./../../node_modules/@prisma/client in 48ms

Start by importing your Prisma Client (See: https://pris.ly/d/importing-client)

Help us improve the Prisma ORM for everyone. Share your feedback in a short 2-min survey: https://pris.ly/orm/survey/release-5-22

┌─────────────────────────────────────────────────────────┐
│  Update available 5.22.0 -> 6.8.2                       │
│                                                         │
│  This is a major update - please follow the guide at    │
│  https://pris.ly/d/major-version-upgrade                │
│                                                         │
│  Run the following to update                            │
│    yarn add --dev prisma@latest                         │
│    yarn add @prisma/client@latest                       │
└─────────────────────────────────────────────────────────┘
Determining test sui
 FAIL  src/persistence/prisma/prisma.service.spec.ts
  ● PrismaService › should call $connect on module init

    TypeError: service.onModuleInit is not a function

      34 |
      35 |   it('should call $connect on module init', async () => {
    > 36 |     await service.onModuleInit(); // Dette kalder this.$connect() internt
         |                   ^
      37 |     expect(mockPrismaClientInstance.$connect).toHaveBeenCalledTimes(1);
      38 |   });
      39 | });

      at Object.<anonymous> (persistence/prisma/prisma.service.spec.ts:36:19)

 PASS  src/users/users.service.spec.ts
 PASS  src/users/users.controller.spec.ts
 PASS  src/app.controller.spec.ts

Test Suites: 1 failed, 3 passed, 4 total
Tests:       1 failed, 13 passed, 14 total
Snapshots:   0 total
Time:        1.128 s, estimated 2 s
Ran all test suites.
Yousef@MacBook-Pro-tilhrende-Yousef api % npx prisma generate

Environment variables loaded from .env
Prisma schema loaded from prisma/schema.prisma

✔ Generated Prisma Client (v5.22.0) to ./../../node_modules/@prisma/client in 44ms

Start by importing your Prisma Client (See: https://pris.ly/d/importing-client)

Tip: Want to turn off tips and other hints? https://pris.ly/tip-4-nohints

Yousef@MacBook-Pro-tilhrende-Yousef api %
</file>

<file path="LICENSE">
MIT License

Copyright (c) 2022 Ejaz Ahmed

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</file>

<file path="Planen.txt">
Strategi for Robust Samarbejde og Håndtering af Genstarter

For at sikre en stabil og effektiv udviklingsproces, især med tanke på potentielle session-genstarter og AI'ens "hukommelsestab", følger vi disse strategier:

Canvas-dokumentet som Fælles Hukommelse: Dette dokument (samarbejdsproces_template) er vores primære, persistente referencepunkt. Det indeholder den overordnede vision, roller, meta-plan, detaljeret projektplan og denne samarbejdsstrategi. Det opdateres løbende.

Granulær Opdeling af Opgaver:

I "Detaljeret Projektplan" vil hver "Opgave" blive yderligere nedbrudt i mindre "Delopgaver/Action Steps".

Hver delopgave skal være lille, fokuseret på få filændringer, og resultere i en testbar ændring.

Eksplicit "State Capture" ved Behov:

Inden du (brugeren) afslutter en session, eller hvis der er mistanke om, at AI'en mister kontekst, kan du bede om en "Kort Statusrapport".

Denne rapport skal indeholde:

Den allersidste kodeblok AI'en leverede.

Den præcise fil den tilhører.

Den specifikke (del)opgave vi arbejdede på.

Det allernæste aftalte lille skridt.

Denne rapport bruges til hurtig briefing ved genstart.

Hyppige "Checkpoints" i Canvas-dokumentet:

Efter hver succesfuldt implementeret og testet (del)opgave opdateres dens status i "Detaljeret Projektplan" til "✅ Færdig".

Fokus på Én Ting Ad Gangen:

Vi bestræber os på kun at arbejde på én (del)opgave ad gangen. Den nuværende skal være implementeret, testet og markeret som færdig, før vi går videre.

Strategisk Kodelevering:

Ved start på nye, større filer/moduler leveres relevant kode (f.eks. repomixOLD.xml).

Ved små, iterative ændringer i samme fil kan det være tilstrækkeligt kun at levere indholdet af den specifikke fil.

Regelmæssige Synkroniserings- og Opsummeringspunkter:

AI'en vil proaktivt give korte opsummeringer efter afslutning af logiske dele af en opgave eller efter et antal interaktioner for at sikre fælles forståelse.

Arbejdsproces: Template

Dette dokument beskriver den aftalte arbejdsproces mellem dig (brugeren) og mig (AI-assistenten) for udviklingen og færdiggørelsen af Next.js-applikationen "Template".

Overordnet Mål: At udvikle en robust og generisk læringsplatform-template baseret på den tidligere udviklede platform (repomixOLD.xml). Denne template skal kunne tilpasses forskellige faglige indhold (f.eks. Quran-arabisk, laborant-studier) via konfigurerbare "indholdsscripts". Når template-kernen er færdig, kan vi implementere specifikke funktioner og indhold for "Template". UI-elementer og læringer fra den nyere v0.dev-genererede platform vil blive brugt som inspiration til frontend.

Vores Roller:

Din Rolle (Brugeren):

Identifikation af Arbejdsområder: Du udpeger, hvilke specifikke filer, komponenter eller funktionaliteter vi skal arbejde på, typisk med udgangspunkt i din overordnede projektplan.

Levering af Kodebase: Du leverer den relevante kode, oftest via repomix-output.xml eller ved at indsætte specifikke kodeblokke.

Test og Validering: Du indsætter den af mig leverede kode i dit lokale VS Code udviklingsmiljø. Her tester du grundigt for at sikre, at koden virker som forventet, og at der ikke opstår nye fejl.

Fejlrapportering: Hvis du opdager fejl, uoverensstemmelser, eller hvis funktionaliteten ikke er som ønsket, rapporterer du dette tilbage til mig. Dette kan være via en fejl.txt fil, beskrivelser af problemet, eller skærmbilleder.

Overordnet Projektledelse: Du bevarer det overordnede overblik over projektet, prioriterer opgaver og sikrer, at vi bevæger os i den rigtige retning i henhold til projektplanen. Du definerer også de overordnede krav til "template"-funktionaliteten og de forskellige "indholdsscripts".

Min Rolle (AI-Assistent):

Kodeanalyse og -forståelse: Jeg analyserer den kode og de problemstillinger, du præsenterer.

Kodeudvikling og -modifikation: Jeg skriver ny kode, refaktorerer eksisterende kode og implementerer løsninger baseret på dine anmodninger og vores aftalte mål.

Fokus på Kvalitet:

Best Practice: Jeg bestræber mig på at følge anerkendte "best practices" for Next.js, React, TypeScript, NestJS, Prisma og generel webudvikling.

Template-Design: Jeg vil designe datamodeller, API'er og frontend-komponenter med henblik på genbrugelighed og tilpasning via "indholdsscripts".

Fejlretning: Jeg retter de fejl, der identificeres.

Levering af Kode: Jeg leverer den opdaterede kode til dig i et klart og brugbart format.

Vigtigt: Da du (brugeren) har angivet, at du ikke selv koder, vil jeg altid bestræbe mig på at levere komplette og selvstændige kodeblokke, der er klar til test, frem for kun at levere ændrede linjer eller fragmenter.

Forklaring og Rådgivning: Jeg forklarer de ændringer, jeg har lavet, de bagvedliggende koncepter, og kan give råd om alternative løsninger.

Iterativ Proces: Vi arbejder iterativt på mindre, afgrænsede dele. Du leverer input, jeg output, du tester, og vi justerer.

Kommunikation: Klar og præcis kommunikation er nøglen.

Meta-Plan: Vejen til en Detaljeret Projektplan (for den gamle platform)

(Dette afsnit forbliver som det er, da det beskriver processen for at nå frem til den detaljerede plan)

Detaljeret Projektplan: Generisk Læringsplatform Template (baseret på repomixOLD.xml)

Fokus er at bygge en generisk kerneplatform. Specifikke funktioner for "Template" eller andre fagområder vil blive bygget ovenpå denne kerne senere.

Milesten 1: Backend Stabilisering og Konfiguration (apps/api)

Mål: Få backend-API'en (apps/api) til at køre stabilt, rette CI/CD-fejl fra terminalfejl.txt, og implementere nødvendige konfigurationsforbedringer fra forslag.txt.

Status: Ikke påbegyndt.

Opgaver: (Disse forbliver stort set som tidligere defineret, da de er fundamentale for en fungerende backend)

Fejlretning af Test-setup (apps/api):

Korriger moduleNameMapper for @repo/core etc.

Ret PrismaClient mocking i prisma.service.spec.ts.

Sikre prisma generate før tests.

Implementering af Konfigurationsforbedringer (apps/api, packages/config):

Udvid/konsolider miljøvariabel-validering (Zod i packages/config/src/env.ts) for JWT_SECRET, JWT_EXPIRES_IN, SALT_ROUNDS.

Korrekt ConfigModule setup i apps/api/src/app.module.ts.

Opdater services til at bruge ConfigService for envs.

Opdater tests til at mocke ConfigService.

CI/CD Pipeline Justering (.github/workflows/ci.yml):

Ret web#test:ci fejl (NextRouter was not mounted).

Verificer prisma generate i CI for api.

Database Migrationer og Konfiguration (apps/api/prisma):

Gennemgå User-model.

Bekræft DATABASE_URL opsætning.

Milesten 2: Bruger Autentificering Færdiggørelse (apps/api og apps/web)

Mål: Sikre et robust og komplet brugerautentificeringsflow.

Status: Ikke påbegyndt (afventer Milesten 1).

Opgaver: (Disse forbliver stort set som tidligere defineret)

Backend (apps/api): Færdiggør UsersService, AuthService (inkl. forgot/reset password token-logik, ekskl. e-mail afsendelse for nu), AuthController, Passport strategier, DTOs.

Frontend (apps/web): Færdiggør AuthContext (inkl. signup, forgot/reset password API-kald), Login, Signup, Forgot/Reset Password sider, Profil side, ProtectedRoute.

Milesten 3: Etablering af Kerne-Pakker & Generisk Datamodel Fundament

Mål: Oprette og strukturere de delte packages og definere de centrale, generiske datamodeller for platformens indhold.

Status: Ikke påbegyndt.

Opgaver:

Oprettelse/Strukturering af packages/core:

Opgave: Initialiser pakken. Flyt/definer fælles TypeScript interfaces/typer/enums (f.eks. User, Role). Prisma-specifikke decorators hører til i Prisma schema, ikke her.

Filer: packages/core/package.json, packages/core/tsconfig.json, packages/core/src/types/user.types.ts, packages/core/src/index.ts.

Oprettelse/Strukturering af packages/config:

Opgave: Initialiser pakken. Færdiggør centraliseret håndtering af miljøvariabler med Zod-validering.

Filer: packages/config/package.json, packages/config/tsconfig.json, packages/config/src/env.ts, packages/config/src/index.ts.

Refaktorering af apps/api og apps/web til at bruge packages/core og packages/config.

Definition af Generiske Pensum Datamodeller (apps/api/prisma/schema.prisma og packages/core/src/types):

Opgave: Design og implementer Prisma-modeller for:

Course (title, description, slug, subjectAreaId (til at linke til et "fagligt script"/kontekst)).

SubjectArea (eller ContentContext) (name, slug - f.eks. "template-arabic", "lab-tech").

Module (title, description, order, courseId).

Lesson (title, description, order, moduleId).

ContentBlock (type: TEXT, IMAGE_URL, VIDEO_URL, QUIZ_REF; content: string; order; lessonId).

Opgave: Definer tilsvarende TypeScript-typer i packages/core/src/types/pensum.types.ts (eller lignende).

Opgave: Kør Prisma migration.

Definition af Generiske Quiz Datamodeller (apps/api/prisma/schema.prisma og packages/core/src/types):

Opgave: Design og implementer Prisma-modeller for:

Quiz (title, description, lessonId? eller moduleId?).

Question (text, type: MULTIPLE_CHOICE, FILL_IN_BLANK, MATCHING; quizId).

AnswerOption (text, isCorrect, questionId).

UserProgress (userId, lessonId (status: COMPLETED), quizId (score, quizAttemptId)).

QuizAttempt (userId, quizId, score, startedAt, completedAt).

UserAnswer (quizAttemptId, questionId, selectedAnswerOptionId?, inputText?).

Opgave: Definer tilsvarende TypeScript-typer i packages/core/src/types/quiz.types.ts (eller lignende).

Opgave: Kør Prisma migration.

Milesten 4: Implementering af Generisk Pensum & Quiz Backend (apps/api)

Mål: Skabe API-endpoints til at håndtere (CRUD) og levere det generiske pensum- og quizindhold.

Status: Ikke påbegyndt.

Opgaver:

Pensum Service & Controller:

Implementer PensumService med CRUD-metoder for Course, Module, Lesson, ContentBlock.

Opret PensumController med beskyttede endpoints (admin for CUD, public for R). API'et skal kunne filtrere baseret på subjectAreaId.

Quiz Service & Controller:

Implementer QuizService med CRUD for Quiz, Question, AnswerOption.

Implementer logik i QuizService for at starte en quiz, modtage svar, evaluere og gemme QuizAttemptog UserAnswer.

Opret QuizController (bruger-rettet) og evt. QuizAdminController (admin-rettet).

UserProgress Service & Controller (udvidelse):

Udvid/opret service til at håndtere opdatering af UserProgress for lektioner og quizzer.

Milesten 5: Grundlæggende Frontend for Template (apps/web)

Mål: Implementere de basale UI-sider og komponenter, der kan vise og interagere med det generiske pensum og quiz-system. UI-inspiration fra v0.dev-platformen.

Status: Ikke påbegyndt.

Opgaver:

Basis UI-Komponenter (packages/ui):

Opret/flyt genbrugelige UI-komponenter (f.eks. Button, Card, Input, Progress) til packages/ui, inspireret af Shadcn UI / v0.dev.

Sider til Visning af Pensum:

Kursusoversigt (liste af kurser for et givent subjectArea).

Kursusdetaljeside (viser moduler/fag i et kursus).

Lektionsvisningsside (renderer ContentBlocks dynamisk, inkl. tekst, billeder, video-embeds).

Sider til Quiz-afvikling:

Start quiz side.

Spørgsmålsvisning (tilpasset Question.type).

Resultatside.

Grundlæggende Admin UI (meget simpelt til start):

Formularer/lister til at oprette/redigere Course, Module, Lesson, ContentBlock.

Formularer/lister til at oprette/redigere Quiz, Question, AnswerOption.

Integration med Backend:

Opdater apps/web/src/store/services/api.ts (RTK Query) med endpoints til at hente og sende data til de nye pensum- og quiz-API'er.

Forbind frontend-siderne til disse API-kald.

Responsivt Design & Grundlæggende Tilgængelighed: Sikre at de nye sider er responsive og følger basale tilgængelighedsprincipper.

Milesten 6: Indholdsscripts & Første Instansiering (f.eks. Laborantstudie / Arabiske studier )

Mål: Definere og implementere mekanismen for "indholdsscripts" og lave en første instansiering af platformen med indhold for "Template".

Status: Ikke påbegyndt.

Opgaver:

Strategi og Implementering af "Indholdsscripts":

Sammen: Fastlæg formatet (JSON, Markdown, database seeding script?).

Jeg (AI) & Du (Bruger): Implementer logikken i backend til at indlæse/fortolke disse scripts og populere/filtrere databasen/API-svar.

Oprettelse af Indholdsscript for Template:

Du (Bruger): Begynd at strukturere det faglige indhold (alfabet, gloser, grammatik, suraer) i det aftalte script-format.

Test af Template med Template Arabic Indhold:

Indlæs Template Arabic scriptet og verificer, at platformen viser indholdet korrekt.

Næste Skridt (efter denne plan er godkendt):

Vi starter med Milesten 1: Backend Stabilisering og Konfiguration. Den første konkrete opgave vil være Opgave 1.1: Fejlretning af Test-setup (apps/api), startende med moduleNameMapper-problematikken.

Nuværende Status (Gammel "Template" - repomixOLD.xml):

Milesten 1: Projektopsætning & Grundlæggende Struktur

Status: Stort set færdig (monorepo, grundlæggende apps/packages struktur).

Næste skridt: Gennemgå og rette fejl fra terminalfejl.txt relateret til CI/CD og test-setup. Implementere forslag fra forslag.txt.

Milesten 2: Kerne Backend & Database

Status: Påbegyndt (Prisma-schema findes, NestJS API-struktur er der).

Funktionalitet: Brugeroprettelse, login-logik (skal verificeres/færdiggøres).

Data: Databasemodeller for User er defineret.

Næste skridt: Sikre stabil backend, færdiggøre/teste auth-flow, definere yderligere datamodeller for indhold.

Milesten 3: Frontend UI & Grundlæggende Sider (baseret på apps/web i repomixOLD.xml)

Status: Påbegyndt (Grundlæggende Next.js app findes).

UI: Minimalistisk. Skal opdateres/erstattes med UI fra den nye v0.dev-genererede platform.

Næste skridt: Planlægge integration af UI-komponenter og sidestrukturer fra den nye platform, når backend er mere stabil.
</file>

<file path="smil.txt">
smil
</file>

<file path="tsconfig.json">
{
  "files": [],
  "references": [
    { "path": "packages/config" },
    { "path": "packages/core" },
    { "path": "packages/ui" },
    { "path": "apps/api" },
    { "path": "apps/web" }
  ]
}
</file>

<file path="turbo.json">
{
  "pipeline": {
    "build": {
      "dependsOn": ["^build"],
      "outputs": ["dist/**", ".next/**"]
    },
    "lint": {
      "outputs": []
    },
    "dev": {
      "cache": false
    },
    "test:ci": {
      "cache": false
    }
  }
}
</file>

<file path="apps/api/src/auth/dto/login.dto.ts">
// apps/api/src/auth/dto/login.dto.ts
import {
  IsEmail,
  IsNotEmpty,
  IsString,
  MinLength,
  Matches,
} from 'class-validator';

export class LoginDto {
  @IsEmail({}, { message: 'Email skal være en gyldig email-adresse.' })
  @IsNotEmpty({ message: 'Email må ikke være tom.' })
  email: string;

  @IsString({ message: 'Password skal være en streng.' })
  @MinLength(8, { message: 'Password skal være mindst 8 tegn langt.' })
  @IsNotEmpty({ message: 'Password må ikke være tomt.' })
  // Vi validerer ikke password kompleksitet ved login, kun ved oprettelse/ændring
  password: string;
}
</file>

<file path="apps/api/src/auth/dto/reset-password.dto.ts">
// apps/api/src/auth/dto/reset-password.dto.ts
import { IsNotEmpty, IsString, MinLength, Matches } from 'class-validator';

export class ResetPasswordDto {
  @IsString({ message: 'Reset token skal være en streng.' })
  @IsNotEmpty({ message: 'Reset token må ikke være tomt.' })
  token: string;

  @IsString({ message: 'Nyt password skal være en streng.' })
  @IsNotEmpty({ message: 'Nyt password må ikke være tomt.' })
  @MinLength(8, { message: 'Nyt password skal være mindst 8 tegn langt.' })
  @Matches(/((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {
    message:
      'Passwordet er for svagt. Det skal indeholde store og små bogstaver, tal og/eller specialtegn.',
  })
  newPassword: string;

  @IsString({ message: 'Bekræft password skal være en streng.' })
  @IsNotEmpty({ message: 'Bekræft password må ikke være tomt.' })
  // Validering af, om confirmPassword matcher newPassword, vil blive håndteret i AuthService.
  confirmPassword: string;
}
</file>

<file path="apps/api/test/app.e2e-spec.ts">
import { Test, TestingModule } from '@nestjs/testing';
import { INestApplication } from '@nestjs/common';
// Use default import request(...)` is the actual function
import request from 'supertest';
import { AppModule } from './../src/app.module';

describe('AppController (e2e)', () => {
  let app: INestApplication;

  beforeEach(async () => {
    // Set JWT env vars so JwtStrategy has a secret/key
    process.env.JWT_SECRET = 'test-secret';
    process.env.JWT_EXPIRES_IN = '3600s';

    const moduleFixture: TestingModule = await Test.createTestingModule({
      imports: [AppModule],
    }).compile();

    app = moduleFixture.createNestApplication();
    await app.init();
  });

  it('/ (GET)', () => {
    return request(app.getHttpServer())
      .get('/')
      .expect(200)
      .expect({ message: 'Hello World' });
  });
});
</file>

<file path="apps/api/.eslintrc.js">
module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
    tsconfigRootDir: __dirname,
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js', 'test/**/*.ts', 'dist'],
  rules: {
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-unused-vars': ['warn', { 
      'argsIgnorePattern': '^_',
      'varsIgnorePattern': '^_',
      'caughtErrorsIgnorePattern': '^_'
    }],
  },
};
</file>

<file path="apps/api/tsconfig.build.json">
{
  "extends": "../../packages/tsconfig/nestjs.json",
  "compilerOptions": {
    "outDir": "./dist",
    "baseUrl": "./",
    "skipLibCheck": true,
    "declaration": true,
    "removeComments": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    "incremental": true,
    "paths": {
      "@repo/core": ["../../packages/core/src"],
      "@repo/core/*": ["../../packages/core/src/*"],
      "@repo/config": ["../../packages/config/src"],
      "@repo/config/*": ["../../packages/config/src/*"]
    }
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "../../node_modules",
    "test",
    "dist",
    "**/*spec.ts"
  ]
}
</file>

<file path="apps/api/tsconfig.tsbuildinfo">
{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../node_modules/typescript/lib/lib.scripthost.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.decorators.d.ts","../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../node_modules/typescript/lib/lib.es2017.full.d.ts","./node_modules/reflect-metadata/index.d.ts","./node_modules/@nestjs/common/decorators/core/bind.decorator.d.ts","./node_modules/@nestjs/common/interfaces/abstract.interface.d.ts","./node_modules/@nestjs/common/interfaces/controllers/controller-metadata.interface.d.ts","./node_modules/@nestjs/common/interfaces/controllers/controller.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/arguments-host.interface.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/exception-filter.interface.d.ts","../../node_modules/rxjs/dist/types/internal/subscription.d.ts","../../node_modules/rxjs/dist/types/internal/subscriber.d.ts","../../node_modules/rxjs/dist/types/internal/operator.d.ts","../../node_modules/rxjs/dist/types/internal/observable.d.ts","../../node_modules/rxjs/dist/types/internal/types.d.ts","../../node_modules/rxjs/dist/types/internal/operators/audit.d.ts","../../node_modules/rxjs/dist/types/internal/operators/audittime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/buffer.d.ts","../../node_modules/rxjs/dist/types/internal/operators/buffercount.d.ts","../../node_modules/rxjs/dist/types/internal/operators/buffertime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/buffertoggle.d.ts","../../node_modules/rxjs/dist/types/internal/operators/bufferwhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/catcherror.d.ts","../../node_modules/rxjs/dist/types/internal/operators/combinelatestall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/combineall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/combinelatest.d.ts","../../node_modules/rxjs/dist/types/internal/operators/combinelatestwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concat.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concatall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concatmap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concatmapto.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concatwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/connect.d.ts","../../node_modules/rxjs/dist/types/internal/operators/count.d.ts","../../node_modules/rxjs/dist/types/internal/operators/debounce.d.ts","../../node_modules/rxjs/dist/types/internal/operators/debouncetime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/defaultifempty.d.ts","../../node_modules/rxjs/dist/types/internal/operators/delay.d.ts","../../node_modules/rxjs/dist/types/internal/operators/delaywhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/dematerialize.d.ts","../../node_modules/rxjs/dist/types/internal/operators/distinct.d.ts","../../node_modules/rxjs/dist/types/internal/operators/distinctuntilchanged.d.ts","../../node_modules/rxjs/dist/types/internal/operators/distinctuntilkeychanged.d.ts","../../node_modules/rxjs/dist/types/internal/operators/elementat.d.ts","../../node_modules/rxjs/dist/types/internal/operators/endwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/every.d.ts","../../node_modules/rxjs/dist/types/internal/operators/exhaustall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/exhaust.d.ts","../../node_modules/rxjs/dist/types/internal/operators/exhaustmap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/expand.d.ts","../../node_modules/rxjs/dist/types/internal/operators/filter.d.ts","../../node_modules/rxjs/dist/types/internal/operators/finalize.d.ts","../../node_modules/rxjs/dist/types/internal/operators/find.d.ts","../../node_modules/rxjs/dist/types/internal/operators/findindex.d.ts","../../node_modules/rxjs/dist/types/internal/operators/first.d.ts","../../node_modules/rxjs/dist/types/internal/subject.d.ts","../../node_modules/rxjs/dist/types/internal/operators/groupby.d.ts","../../node_modules/rxjs/dist/types/internal/operators/ignoreelements.d.ts","../../node_modules/rxjs/dist/types/internal/operators/isempty.d.ts","../../node_modules/rxjs/dist/types/internal/operators/last.d.ts","../../node_modules/rxjs/dist/types/internal/operators/map.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mapto.d.ts","../../node_modules/rxjs/dist/types/internal/notification.d.ts","../../node_modules/rxjs/dist/types/internal/operators/materialize.d.ts","../../node_modules/rxjs/dist/types/internal/operators/max.d.ts","../../node_modules/rxjs/dist/types/internal/operators/merge.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergeall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergemap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/flatmap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergemapto.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergescan.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergewith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/min.d.ts","../../node_modules/rxjs/dist/types/internal/observable/connectableobservable.d.ts","../../node_modules/rxjs/dist/types/internal/operators/multicast.d.ts","../../node_modules/rxjs/dist/types/internal/operators/observeon.d.ts","../../node_modules/rxjs/dist/types/internal/operators/onerrorresumenextwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/pairwise.d.ts","../../node_modules/rxjs/dist/types/internal/operators/partition.d.ts","../../node_modules/rxjs/dist/types/internal/operators/pluck.d.ts","../../node_modules/rxjs/dist/types/internal/operators/publish.d.ts","../../node_modules/rxjs/dist/types/internal/operators/publishbehavior.d.ts","../../node_modules/rxjs/dist/types/internal/operators/publishlast.d.ts","../../node_modules/rxjs/dist/types/internal/operators/publishreplay.d.ts","../../node_modules/rxjs/dist/types/internal/operators/race.d.ts","../../node_modules/rxjs/dist/types/internal/operators/racewith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/reduce.d.ts","../../node_modules/rxjs/dist/types/internal/operators/repeat.d.ts","../../node_modules/rxjs/dist/types/internal/operators/repeatwhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/retry.d.ts","../../node_modules/rxjs/dist/types/internal/operators/retrywhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/refcount.d.ts","../../node_modules/rxjs/dist/types/internal/operators/sample.d.ts","../../node_modules/rxjs/dist/types/internal/operators/sampletime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/scan.d.ts","../../node_modules/rxjs/dist/types/internal/operators/sequenceequal.d.ts","../../node_modules/rxjs/dist/types/internal/operators/share.d.ts","../../node_modules/rxjs/dist/types/internal/operators/sharereplay.d.ts","../../node_modules/rxjs/dist/types/internal/operators/single.d.ts","../../node_modules/rxjs/dist/types/internal/operators/skip.d.ts","../../node_modules/rxjs/dist/types/internal/operators/skiplast.d.ts","../../node_modules/rxjs/dist/types/internal/operators/skipuntil.d.ts","../../node_modules/rxjs/dist/types/internal/operators/skipwhile.d.ts","../../node_modules/rxjs/dist/types/internal/operators/startwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/subscribeon.d.ts","../../node_modules/rxjs/dist/types/internal/operators/switchall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/switchmap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/switchmapto.d.ts","../../node_modules/rxjs/dist/types/internal/operators/switchscan.d.ts","../../node_modules/rxjs/dist/types/internal/operators/take.d.ts","../../node_modules/rxjs/dist/types/internal/operators/takelast.d.ts","../../node_modules/rxjs/dist/types/internal/operators/takeuntil.d.ts","../../node_modules/rxjs/dist/types/internal/operators/takewhile.d.ts","../../node_modules/rxjs/dist/types/internal/operators/tap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/throttle.d.ts","../../node_modules/rxjs/dist/types/internal/operators/throttletime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/throwifempty.d.ts","../../node_modules/rxjs/dist/types/internal/operators/timeinterval.d.ts","../../node_modules/rxjs/dist/types/internal/operators/timeout.d.ts","../../node_modules/rxjs/dist/types/internal/operators/timeoutwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/timestamp.d.ts","../../node_modules/rxjs/dist/types/internal/operators/toarray.d.ts","../../node_modules/rxjs/dist/types/internal/operators/window.d.ts","../../node_modules/rxjs/dist/types/internal/operators/windowcount.d.ts","../../node_modules/rxjs/dist/types/internal/operators/windowtime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/windowtoggle.d.ts","../../node_modules/rxjs/dist/types/internal/operators/windowwhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/withlatestfrom.d.ts","../../node_modules/rxjs/dist/types/internal/operators/zip.d.ts","../../node_modules/rxjs/dist/types/internal/operators/zipall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/zipwith.d.ts","../../node_modules/rxjs/dist/types/operators/index.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/action.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler.d.ts","../../node_modules/rxjs/dist/types/internal/testing/testmessage.d.ts","../../node_modules/rxjs/dist/types/internal/testing/subscriptionlog.d.ts","../../node_modules/rxjs/dist/types/internal/testing/subscriptionloggable.d.ts","../../node_modules/rxjs/dist/types/internal/testing/coldobservable.d.ts","../../node_modules/rxjs/dist/types/internal/testing/hotobservable.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/asyncscheduler.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/timerhandle.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/asyncaction.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/virtualtimescheduler.d.ts","../../node_modules/rxjs/dist/types/internal/testing/testscheduler.d.ts","../../node_modules/rxjs/dist/types/testing/index.d.ts","../../node_modules/rxjs/dist/types/internal/symbol/observable.d.ts","../../node_modules/rxjs/dist/types/internal/observable/dom/animationframes.d.ts","../../node_modules/rxjs/dist/types/internal/behaviorsubject.d.ts","../../node_modules/rxjs/dist/types/internal/replaysubject.d.ts","../../node_modules/rxjs/dist/types/internal/asyncsubject.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/asapscheduler.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/asap.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/async.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/queuescheduler.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/queue.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/animationframescheduler.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/animationframe.d.ts","../../node_modules/rxjs/dist/types/internal/util/identity.d.ts","../../node_modules/rxjs/dist/types/internal/util/pipe.d.ts","../../node_modules/rxjs/dist/types/internal/util/noop.d.ts","../../node_modules/rxjs/dist/types/internal/util/isobservable.d.ts","../../node_modules/rxjs/dist/types/internal/lastvaluefrom.d.ts","../../node_modules/rxjs/dist/types/internal/firstvaluefrom.d.ts","../../node_modules/rxjs/dist/types/internal/util/argumentoutofrangeerror.d.ts","../../node_modules/rxjs/dist/types/internal/util/emptyerror.d.ts","../../node_modules/rxjs/dist/types/internal/util/notfounderror.d.ts","../../node_modules/rxjs/dist/types/internal/util/objectunsubscribederror.d.ts","../../node_modules/rxjs/dist/types/internal/util/sequenceerror.d.ts","../../node_modules/rxjs/dist/types/internal/util/unsubscriptionerror.d.ts","../../node_modules/rxjs/dist/types/internal/observable/bindcallback.d.ts","../../node_modules/rxjs/dist/types/internal/observable/bindnodecallback.d.ts","../../node_modules/rxjs/dist/types/internal/anycatcher.d.ts","../../node_modules/rxjs/dist/types/internal/observable/combinelatest.d.ts","../../node_modules/rxjs/dist/types/internal/observable/concat.d.ts","../../node_modules/rxjs/dist/types/internal/observable/connectable.d.ts","../../node_modules/rxjs/dist/types/internal/observable/defer.d.ts","../../node_modules/rxjs/dist/types/internal/observable/empty.d.ts","../../node_modules/rxjs/dist/types/internal/observable/forkjoin.d.ts","../../node_modules/rxjs/dist/types/internal/observable/from.d.ts","../../node_modules/rxjs/dist/types/internal/observable/fromevent.d.ts","../../node_modules/rxjs/dist/types/internal/observable/fromeventpattern.d.ts","../../node_modules/rxjs/dist/types/internal/observable/generate.d.ts","../../node_modules/rxjs/dist/types/internal/observable/iif.d.ts","../../node_modules/rxjs/dist/types/internal/observable/interval.d.ts","../../node_modules/rxjs/dist/types/internal/observable/merge.d.ts","../../node_modules/rxjs/dist/types/internal/observable/never.d.ts","../../node_modules/rxjs/dist/types/internal/observable/of.d.ts","../../node_modules/rxjs/dist/types/internal/observable/onerrorresumenext.d.ts","../../node_modules/rxjs/dist/types/internal/observable/pairs.d.ts","../../node_modules/rxjs/dist/types/internal/observable/partition.d.ts","../../node_modules/rxjs/dist/types/internal/observable/race.d.ts","../../node_modules/rxjs/dist/types/internal/observable/range.d.ts","../../node_modules/rxjs/dist/types/internal/observable/throwerror.d.ts","../../node_modules/rxjs/dist/types/internal/observable/timer.d.ts","../../node_modules/rxjs/dist/types/internal/observable/using.d.ts","../../node_modules/rxjs/dist/types/internal/observable/zip.d.ts","../../node_modules/rxjs/dist/types/internal/scheduled/scheduled.d.ts","../../node_modules/rxjs/dist/types/internal/config.d.ts","../../node_modules/rxjs/dist/types/index.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/rpc-exception-filter.interface.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/ws-exception-filter.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/validation-error.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/execution-context.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/can-activate.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/custom-route-param-factory.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/nest-interceptor.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/paramtype.interface.d.ts","./node_modules/@nestjs/common/interfaces/type.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.d.ts","./node_modules/@nestjs/common/enums/request-method.enum.d.ts","./node_modules/@nestjs/common/enums/http-status.enum.d.ts","./node_modules/@nestjs/common/enums/shutdown-signal.enum.d.ts","./node_modules/@nestjs/common/enums/version-type.enum.d.ts","./node_modules/@nestjs/common/enums/index.d.ts","./node_modules/@nestjs/common/interfaces/version-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/middleware-configuration.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/middleware-consumer.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/middleware-config-proxy.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/nest-middleware.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/index.d.ts","./node_modules/@nestjs/common/interfaces/global-prefix-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/before-application-shutdown.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/on-application-bootstrap.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/on-application-shutdown.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/on-destroy.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/on-init.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/index.d.ts","./node_modules/@nestjs/common/interfaces/http/http-exception-body.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/http-redirect-response.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/cors-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts","./node_modules/@nestjs/common/services/logger.service.d.ts","./node_modules/@nestjs/common/interfaces/nest-application-context-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/nest-application-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/message-event.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/raw-body-request.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/index.d.ts","./node_modules/@nestjs/common/interfaces/injectable.interface.d.ts","./node_modules/@nestjs/common/interfaces/microservices/nest-hybrid-application-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/forward-reference.interface.d.ts","./node_modules/@nestjs/common/interfaces/scope-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/injection-token.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/optional-factory-dependency.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/provider.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/module-metadata.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/dynamic-module.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/introspection-result.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/nest-module.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/index.d.ts","./node_modules/@nestjs/common/interfaces/nest-application-context.interface.d.ts","./node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.d.ts","./node_modules/@nestjs/common/interfaces/nest-application.interface.d.ts","./node_modules/@nestjs/common/interfaces/nest-microservice.interface.d.ts","./node_modules/@nestjs/common/interfaces/index.d.ts","./node_modules/@nestjs/common/decorators/core/catch.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/controller.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/dependencies.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/exception-filters.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/inject.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/injectable.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/optional.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/set-metadata.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/use-guards.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/use-interceptors.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/use-pipes.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/apply-decorators.d.ts","./node_modules/@nestjs/common/decorators/core/version.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/index.d.ts","./node_modules/@nestjs/common/decorators/modules/global.decorator.d.ts","./node_modules/@nestjs/common/decorators/modules/module.decorator.d.ts","./node_modules/@nestjs/common/decorators/modules/index.d.ts","./node_modules/@nestjs/common/decorators/http/request-mapping.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/route-params.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/http-code.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/create-route-param-metadata.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/render.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/header.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/redirect.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/sse.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/index.d.ts","./node_modules/@nestjs/common/decorators/index.d.ts","./node_modules/@nestjs/common/exceptions/http.exception.d.ts","./node_modules/@nestjs/common/exceptions/bad-request.exception.d.ts","./node_modules/@nestjs/common/exceptions/unauthorized.exception.d.ts","./node_modules/@nestjs/common/exceptions/method-not-allowed.exception.d.ts","./node_modules/@nestjs/common/exceptions/not-found.exception.d.ts","./node_modules/@nestjs/common/exceptions/forbidden.exception.d.ts","./node_modules/@nestjs/common/exceptions/not-acceptable.exception.d.ts","./node_modules/@nestjs/common/exceptions/request-timeout.exception.d.ts","./node_modules/@nestjs/common/exceptions/conflict.exception.d.ts","./node_modules/@nestjs/common/exceptions/gone.exception.d.ts","./node_modules/@nestjs/common/exceptions/payload-too-large.exception.d.ts","./node_modules/@nestjs/common/exceptions/unsupported-media-type.exception.d.ts","./node_modules/@nestjs/common/exceptions/unprocessable-entity.exception.d.ts","./node_modules/@nestjs/common/exceptions/internal-server-error.exception.d.ts","./node_modules/@nestjs/common/exceptions/not-implemented.exception.d.ts","./node_modules/@nestjs/common/exceptions/http-version-not-supported.exception.d.ts","./node_modules/@nestjs/common/exceptions/bad-gateway.exception.d.ts","./node_modules/@nestjs/common/exceptions/service-unavailable.exception.d.ts","./node_modules/@nestjs/common/exceptions/gateway-timeout.exception.d.ts","./node_modules/@nestjs/common/exceptions/im-a-teapot.exception.d.ts","./node_modules/@nestjs/common/exceptions/precondition-failed.exception.d.ts","./node_modules/@nestjs/common/exceptions/misdirected.exception.d.ts","./node_modules/@nestjs/common/exceptions/index.d.ts","./node_modules/@nestjs/common/file-stream/interfaces/streamable-options.interface.d.ts","./node_modules/@nestjs/common/file-stream/interfaces/streamable-handler-response.interface.d.ts","./node_modules/@nestjs/common/file-stream/interfaces/index.d.ts","./node_modules/@nestjs/common/services/console-logger.service.d.ts","./node_modules/@nestjs/common/services/index.d.ts","./node_modules/@nestjs/common/file-stream/streamable-file.d.ts","./node_modules/@nestjs/common/file-stream/index.d.ts","./node_modules/@nestjs/common/module-utils/constants.d.ts","./node_modules/@nestjs/common/module-utils/interfaces/configurable-module-async-options.interface.d.ts","./node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts","./node_modules/@nestjs/common/module-utils/interfaces/configurable-module-host.interface.d.ts","./node_modules/@nestjs/common/module-utils/interfaces/index.d.ts","./node_modules/@nestjs/common/module-utils/configurable-module.builder.d.ts","./node_modules/@nestjs/common/module-utils/index.d.ts","./node_modules/@nestjs/common/pipes/default-value.pipe.d.ts","./node_modules/@nestjs/common/interfaces/external/class-transform-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/transformer-package.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/validator-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/validator-package.interface.d.ts","./node_modules/@nestjs/common/utils/http-error-by-code.util.d.ts","./node_modules/@nestjs/common/pipes/validation.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-array.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-bool.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-int.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-float.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-enum.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-uuid.pipe.d.ts","./node_modules/@nestjs/common/pipes/file/interfaces/file.interface.d.ts","./node_modules/@nestjs/common/pipes/file/interfaces/index.d.ts","./node_modules/@nestjs/common/pipes/file/file-validator.interface.d.ts","./node_modules/@nestjs/common/pipes/file/file-type.validator.d.ts","./node_modules/@nestjs/common/pipes/file/max-file-size.validator.d.ts","./node_modules/@nestjs/common/pipes/file/parse-file-options.interface.d.ts","./node_modules/@nestjs/common/pipes/file/parse-file.pipe.d.ts","./node_modules/@nestjs/common/pipes/file/parse-file-pipe.builder.d.ts","./node_modules/@nestjs/common/pipes/file/index.d.ts","./node_modules/@nestjs/common/pipes/index.d.ts","./node_modules/@nestjs/common/serializer/class-serializer.interfaces.d.ts","./node_modules/@nestjs/common/serializer/class-serializer.interceptor.d.ts","./node_modules/@nestjs/common/serializer/decorators/serialize-options.decorator.d.ts","./node_modules/@nestjs/common/serializer/decorators/index.d.ts","./node_modules/@nestjs/common/serializer/index.d.ts","./node_modules/@nestjs/common/utils/forward-ref.util.d.ts","./node_modules/@nestjs/common/utils/index.d.ts","./node_modules/@nestjs/common/index.d.ts","./node_modules/@nestjs/testing/interfaces/mock-factory.d.ts","./node_modules/@nestjs/testing/interfaces/override-by-factory-options.interface.d.ts","./node_modules/@nestjs/core/interfaces/module-definition.interface.d.ts","./node_modules/@nestjs/core/metadata-scanner.d.ts","./node_modules/@nestjs/testing/interfaces/override-module.interface.d.ts","./node_modules/@nestjs/common/interfaces/microservices/nest-microservice-options.interface.d.ts","./node_modules/@nestjs/core/adapters/http-adapter.d.ts","./node_modules/@nestjs/core/adapters/index.d.ts","./node_modules/@nestjs/common/constants.d.ts","./node_modules/@nestjs/core/inspector/interfaces/edge.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/entrypoint.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/extras.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/node.interface.d.ts","./node_modules/@nestjs/core/injector/settlement-signal.d.ts","./node_modules/@nestjs/core/injector/injector.d.ts","./node_modules/@nestjs/core/inspector/interfaces/serialized-graph-metadata.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/serialized-graph-json.interface.d.ts","./node_modules/@nestjs/core/inspector/serialized-graph.d.ts","./node_modules/@nestjs/core/injector/module-token-factory.d.ts","./node_modules/@nestjs/core/injector/compiler.d.ts","./node_modules/@nestjs/core/injector/modules-container.d.ts","./node_modules/@nestjs/core/injector/container.d.ts","./node_modules/@nestjs/core/injector/instance-links-host.d.ts","./node_modules/@nestjs/core/injector/abstract-instance-resolver.d.ts","./node_modules/@nestjs/core/injector/module-ref.d.ts","./node_modules/@nestjs/core/injector/module.d.ts","./node_modules/@nestjs/core/injector/instance-wrapper.d.ts","./node_modules/@nestjs/core/router/interfaces/exclude-route-metadata.interface.d.ts","./node_modules/@nestjs/core/application-config.d.ts","./node_modules/@nestjs/core/constants.d.ts","./node_modules/@nestjs/core/discovery/discovery-module.d.ts","./node_modules/@nestjs/core/discovery/discovery-service.d.ts","./node_modules/@nestjs/core/discovery/index.d.ts","./node_modules/@nestjs/core/helpers/http-adapter-host.d.ts","./node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts","./node_modules/@nestjs/core/exceptions/index.d.ts","./node_modules/@nestjs/core/helpers/context-id-factory.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/exception-filter-metadata.interface.d.ts","./node_modules/@nestjs/core/exceptions/exceptions-handler.d.ts","./node_modules/@nestjs/core/router/router-proxy.d.ts","./node_modules/@nestjs/core/helpers/context-creator.d.ts","./node_modules/@nestjs/core/exceptions/base-exception-filter-context.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/rpc-exception-filter-metadata.interface.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/index.d.ts","./node_modules/@nestjs/core/exceptions/external-exception-filter.d.ts","./node_modules/@nestjs/core/exceptions/external-exceptions-handler.d.ts","./node_modules/@nestjs/core/exceptions/external-exception-filter-context.d.ts","./node_modules/@nestjs/core/guards/constants.d.ts","./node_modules/@nestjs/core/helpers/execution-context-host.d.ts","./node_modules/@nestjs/core/guards/guards-consumer.d.ts","./node_modules/@nestjs/core/guards/guards-context-creator.d.ts","./node_modules/@nestjs/core/guards/index.d.ts","./node_modules/@nestjs/core/interceptors/interceptors-consumer.d.ts","./node_modules/@nestjs/core/interceptors/interceptors-context-creator.d.ts","./node_modules/@nestjs/core/interceptors/index.d.ts","./node_modules/@nestjs/common/enums/route-paramtypes.enum.d.ts","./node_modules/@nestjs/core/pipes/params-token-factory.d.ts","./node_modules/@nestjs/core/pipes/pipes-consumer.d.ts","./node_modules/@nestjs/core/pipes/pipes-context-creator.d.ts","./node_modules/@nestjs/core/pipes/index.d.ts","./node_modules/@nestjs/core/helpers/context-utils.d.ts","./node_modules/@nestjs/core/injector/inquirer/inquirer-constants.d.ts","./node_modules/@nestjs/core/injector/inquirer/index.d.ts","./node_modules/@nestjs/core/interfaces/module-override.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/enhancer-metadata-cache-entry.interface.d.ts","./node_modules/@nestjs/core/inspector/graph-inspector.d.ts","./node_modules/@nestjs/core/scanner.d.ts","./node_modules/@nestjs/core/injector/instance-loader.d.ts","./node_modules/@nestjs/core/injector/lazy-module-loader/lazy-module-loader-options.interface.d.ts","./node_modules/@nestjs/core/injector/lazy-module-loader/lazy-module-loader.d.ts","./node_modules/@nestjs/core/injector/index.d.ts","./node_modules/@nestjs/core/helpers/interfaces/external-handler-metadata.interface.d.ts","./node_modules/@nestjs/core/helpers/interfaces/params-metadata.interface.d.ts","./node_modules/@nestjs/core/helpers/external-context-creator.d.ts","./node_modules/@nestjs/core/helpers/index.d.ts","./node_modules/@nestjs/core/inspector/initialize-on-preview.allowlist.d.ts","./node_modules/@nestjs/core/inspector/partial-graph.host.d.ts","./node_modules/@nestjs/core/inspector/index.d.ts","./node_modules/@nestjs/core/middleware/route-info-path-extractor.d.ts","./node_modules/@nestjs/core/middleware/routes-mapper.d.ts","./node_modules/@nestjs/core/middleware/builder.d.ts","./node_modules/@nestjs/core/middleware/index.d.ts","./node_modules/@nestjs/core/nest-application-context.d.ts","./node_modules/@nestjs/core/nest-application.d.ts","./node_modules/@nestjs/core/nest-factory.d.ts","./node_modules/@nestjs/core/repl/repl.d.ts","./node_modules/@nestjs/core/repl/index.d.ts","./node_modules/@nestjs/core/router/interfaces/routes.interface.d.ts","./node_modules/@nestjs/core/router/interfaces/index.d.ts","./node_modules/@nestjs/core/router/request/request-constants.d.ts","./node_modules/@nestjs/core/router/request/index.d.ts","./node_modules/@nestjs/core/router/router-module.d.ts","./node_modules/@nestjs/core/router/index.d.ts","./node_modules/@nestjs/core/services/reflector.service.d.ts","./node_modules/@nestjs/core/services/index.d.ts","./node_modules/@nestjs/core/index.d.ts","./node_modules/@nestjs/testing/testing-module.d.ts","./node_modules/@nestjs/testing/testing-module.builder.d.ts","./node_modules/@nestjs/testing/interfaces/override-by.interface.d.ts","./node_modules/@nestjs/testing/interfaces/index.d.ts","./node_modules/@nestjs/testing/test.d.ts","./node_modules/@nestjs/testing/index.d.ts","./src/app.service.ts","./src/app.controller.ts","../../node_modules/@prisma/client/runtime/library.d.ts","../../node_modules/.prisma/client/index.d.ts","../../node_modules/.prisma/client/default.d.ts","../../node_modules/@prisma/client/default.d.ts","./src/persistence/prisma/prisma.service.ts","./node_modules/@nestjs/config/dist/conditional.module.d.ts","./node_modules/@nestjs/config/dist/interfaces/config-change-event.interface.d.ts","./node_modules/@nestjs/config/dist/types/config-object.type.d.ts","./node_modules/@nestjs/config/dist/types/config.type.d.ts","./node_modules/@nestjs/config/dist/types/no-infer.type.d.ts","./node_modules/@nestjs/config/dist/types/path-value.type.d.ts","./node_modules/@nestjs/config/dist/types/index.d.ts","./node_modules/@nestjs/config/dist/interfaces/config-factory.interface.d.ts","./node_modules/@types/node/compatibility/disposable.d.ts","./node_modules/@types/node/compatibility/indexable.d.ts","./node_modules/@types/node/compatibility/iterators.d.ts","./node_modules/@types/node/compatibility/index.d.ts","./node_modules/@types/node/globals.typedarray.d.ts","./node_modules/@types/node/buffer.buffer.d.ts","../../node_modules/buffer/index.d.ts","./node_modules/undici-types/header.d.ts","./node_modules/undici-types/readable.d.ts","./node_modules/undici-types/file.d.ts","./node_modules/undici-types/fetch.d.ts","./node_modules/undici-types/formdata.d.ts","./node_modules/undici-types/connector.d.ts","./node_modules/undici-types/client.d.ts","./node_modules/undici-types/errors.d.ts","./node_modules/undici-types/dispatcher.d.ts","./node_modules/undici-types/global-dispatcher.d.ts","./node_modules/undici-types/global-origin.d.ts","./node_modules/undici-types/pool-stats.d.ts","./node_modules/undici-types/pool.d.ts","./node_modules/undici-types/handlers.d.ts","./node_modules/undici-types/balanced-pool.d.ts","./node_modules/undici-types/agent.d.ts","./node_modules/undici-types/mock-interceptor.d.ts","./node_modules/undici-types/mock-agent.d.ts","./node_modules/undici-types/mock-client.d.ts","./node_modules/undici-types/mock-pool.d.ts","./node_modules/undici-types/mock-errors.d.ts","./node_modules/undici-types/proxy-agent.d.ts","./node_modules/undici-types/env-http-proxy-agent.d.ts","./node_modules/undici-types/retry-handler.d.ts","./node_modules/undici-types/retry-agent.d.ts","./node_modules/undici-types/api.d.ts","./node_modules/undici-types/interceptors.d.ts","./node_modules/undici-types/util.d.ts","./node_modules/undici-types/cookies.d.ts","./node_modules/undici-types/patch.d.ts","./node_modules/undici-types/websocket.d.ts","./node_modules/undici-types/eventsource.d.ts","./node_modules/undici-types/filereader.d.ts","./node_modules/undici-types/diagnostics-channel.d.ts","./node_modules/undici-types/content-type.d.ts","./node_modules/undici-types/cache.d.ts","./node_modules/undici-types/index.d.ts","./node_modules/@types/node/globals.d.ts","./node_modules/@types/node/assert.d.ts","./node_modules/@types/node/assert/strict.d.ts","./node_modules/@types/node/async_hooks.d.ts","./node_modules/@types/node/buffer.d.ts","./node_modules/@types/node/child_process.d.ts","./node_modules/@types/node/cluster.d.ts","./node_modules/@types/node/console.d.ts","./node_modules/@types/node/constants.d.ts","./node_modules/@types/node/crypto.d.ts","./node_modules/@types/node/dgram.d.ts","./node_modules/@types/node/diagnostics_channel.d.ts","./node_modules/@types/node/dns.d.ts","./node_modules/@types/node/dns/promises.d.ts","./node_modules/@types/node/domain.d.ts","./node_modules/@types/node/dom-events.d.ts","./node_modules/@types/node/events.d.ts","./node_modules/@types/node/fs.d.ts","./node_modules/@types/node/fs/promises.d.ts","./node_modules/@types/node/http.d.ts","./node_modules/@types/node/http2.d.ts","./node_modules/@types/node/https.d.ts","./node_modules/@types/node/inspector.d.ts","./node_modules/@types/node/module.d.ts","./node_modules/@types/node/net.d.ts","./node_modules/@types/node/os.d.ts","./node_modules/@types/node/path.d.ts","./node_modules/@types/node/perf_hooks.d.ts","./node_modules/@types/node/process.d.ts","./node_modules/@types/node/punycode.d.ts","./node_modules/@types/node/querystring.d.ts","./node_modules/@types/node/readline.d.ts","./node_modules/@types/node/readline/promises.d.ts","./node_modules/@types/node/repl.d.ts","./node_modules/@types/node/sea.d.ts","./node_modules/@types/node/stream.d.ts","./node_modules/@types/node/stream/promises.d.ts","./node_modules/@types/node/stream/consumers.d.ts","./node_modules/@types/node/stream/web.d.ts","./node_modules/@types/node/string_decoder.d.ts","./node_modules/@types/node/test.d.ts","./node_modules/@types/node/timers.d.ts","./node_modules/@types/node/timers/promises.d.ts","./node_modules/@types/node/tls.d.ts","./node_modules/@types/node/trace_events.d.ts","./node_modules/@types/node/tty.d.ts","./node_modules/@types/node/url.d.ts","./node_modules/@types/node/util.d.ts","./node_modules/@types/node/v8.d.ts","./node_modules/@types/node/vm.d.ts","./node_modules/@types/node/wasi.d.ts","./node_modules/@types/node/worker_threads.d.ts","./node_modules/@types/node/zlib.d.ts","./node_modules/@types/node/index.d.ts","./node_modules/dotenv-expand/lib/main.d.ts","./node_modules/@nestjs/config/dist/interfaces/config-module-options.interface.d.ts","./node_modules/@nestjs/config/dist/interfaces/index.d.ts","./node_modules/@nestjs/config/dist/config.module.d.ts","./node_modules/@nestjs/config/dist/config.service.d.ts","./node_modules/@nestjs/config/dist/utils/register-as.util.d.ts","./node_modules/@nestjs/config/dist/utils/get-config-token.util.d.ts","./node_modules/@nestjs/config/dist/utils/index.d.ts","./node_modules/@nestjs/config/dist/index.d.ts","./node_modules/@nestjs/config/index.d.ts","./src/app.controller.spec.ts","./src/persistence/persistence.module.ts","../../node_modules/class-validator/types/validation/validationerror.d.ts","../../node_modules/class-validator/types/validation/validatoroptions.d.ts","../../node_modules/class-validator/types/validation-schema/validationschema.d.ts","../../node_modules/class-validator/types/container.d.ts","../../node_modules/class-validator/types/validation/validationarguments.d.ts","../../node_modules/class-validator/types/decorator/validationoptions.d.ts","../../node_modules/class-validator/types/decorator/common/allow.d.ts","../../node_modules/class-validator/types/decorator/common/isdefined.d.ts","../../node_modules/class-validator/types/decorator/common/isoptional.d.ts","../../node_modules/class-validator/types/decorator/common/validate.d.ts","../../node_modules/class-validator/types/validation/validatorconstraintinterface.d.ts","../../node_modules/class-validator/types/decorator/common/validateby.d.ts","../../node_modules/class-validator/types/decorator/common/validateif.d.ts","../../node_modules/class-validator/types/decorator/common/validatenested.d.ts","../../node_modules/class-validator/types/decorator/common/validatepromise.d.ts","../../node_modules/class-validator/types/decorator/common/islatlong.d.ts","../../node_modules/class-validator/types/decorator/common/islatitude.d.ts","../../node_modules/class-validator/types/decorator/common/islongitude.d.ts","../../node_modules/class-validator/types/decorator/common/equals.d.ts","../../node_modules/class-validator/types/decorator/common/notequals.d.ts","../../node_modules/class-validator/types/decorator/common/isempty.d.ts","../../node_modules/class-validator/types/decorator/common/isnotempty.d.ts","../../node_modules/class-validator/types/decorator/common/isin.d.ts","../../node_modules/class-validator/types/decorator/common/isnotin.d.ts","../../node_modules/class-validator/types/decorator/number/isdivisibleby.d.ts","../../node_modules/class-validator/types/decorator/number/ispositive.d.ts","../../node_modules/class-validator/types/decorator/number/isnegative.d.ts","../../node_modules/class-validator/types/decorator/number/max.d.ts","../../node_modules/class-validator/types/decorator/number/min.d.ts","../../node_modules/class-validator/types/decorator/date/mindate.d.ts","../../node_modules/class-validator/types/decorator/date/maxdate.d.ts","../../node_modules/class-validator/types/decorator/string/contains.d.ts","../../node_modules/class-validator/types/decorator/string/notcontains.d.ts","../../node_modules/@types/validator/lib/isboolean.d.ts","../../node_modules/@types/validator/lib/isemail.d.ts","../../node_modules/@types/validator/lib/isfqdn.d.ts","../../node_modules/@types/validator/lib/isiban.d.ts","../../node_modules/@types/validator/lib/isiso31661alpha2.d.ts","../../node_modules/@types/validator/lib/isiso4217.d.ts","../../node_modules/@types/validator/lib/isiso6391.d.ts","../../node_modules/@types/validator/lib/istaxid.d.ts","../../node_modules/@types/validator/lib/isurl.d.ts","../../node_modules/@types/validator/index.d.ts","../../node_modules/class-validator/types/decorator/string/isalpha.d.ts","../../node_modules/class-validator/types/decorator/string/isalphanumeric.d.ts","../../node_modules/class-validator/types/decorator/string/isdecimal.d.ts","../../node_modules/class-validator/types/decorator/string/isascii.d.ts","../../node_modules/class-validator/types/decorator/string/isbase64.d.ts","../../node_modules/class-validator/types/decorator/string/isbytelength.d.ts","../../node_modules/class-validator/types/decorator/string/iscreditcard.d.ts","../../node_modules/class-validator/types/decorator/string/iscurrency.d.ts","../../node_modules/class-validator/types/decorator/string/isemail.d.ts","../../node_modules/class-validator/types/decorator/string/isfqdn.d.ts","../../node_modules/class-validator/types/decorator/string/isfullwidth.d.ts","../../node_modules/class-validator/types/decorator/string/ishalfwidth.d.ts","../../node_modules/class-validator/types/decorator/string/isvariablewidth.d.ts","../../node_modules/class-validator/types/decorator/string/ishexcolor.d.ts","../../node_modules/class-validator/types/decorator/string/ishexadecimal.d.ts","../../node_modules/class-validator/types/decorator/string/ismacaddress.d.ts","../../node_modules/class-validator/types/decorator/string/isip.d.ts","../../node_modules/class-validator/types/decorator/string/isport.d.ts","../../node_modules/class-validator/types/decorator/string/isisbn.d.ts","../../node_modules/class-validator/types/decorator/string/isisin.d.ts","../../node_modules/class-validator/types/decorator/string/isiso8601.d.ts","../../node_modules/class-validator/types/decorator/string/isjson.d.ts","../../node_modules/class-validator/types/decorator/string/isjwt.d.ts","../../node_modules/class-validator/types/decorator/string/islowercase.d.ts","../../node_modules/class-validator/types/decorator/string/ismobilephone.d.ts","../../node_modules/class-validator/types/decorator/string/isiso31661alpha2.d.ts","../../node_modules/class-validator/types/decorator/string/isiso31661alpha3.d.ts","../../node_modules/class-validator/types/decorator/string/ismongoid.d.ts","../../node_modules/class-validator/types/decorator/string/ismultibyte.d.ts","../../node_modules/class-validator/types/decorator/string/issurrogatepair.d.ts","../../node_modules/class-validator/types/decorator/string/isurl.d.ts","../../node_modules/class-validator/types/decorator/string/isuuid.d.ts","../../node_modules/class-validator/types/decorator/string/isfirebasepushid.d.ts","../../node_modules/class-validator/types/decorator/string/isuppercase.d.ts","../../node_modules/class-validator/types/decorator/string/length.d.ts","../../node_modules/class-validator/types/decorator/string/maxlength.d.ts","../../node_modules/class-validator/types/decorator/string/minlength.d.ts","../../node_modules/class-validator/types/decorator/string/matches.d.ts","../../node_modules/libphonenumber-js/types.d.cts","../../node_modules/libphonenumber-js/max/index.d.cts","../../node_modules/class-validator/types/decorator/string/isphonenumber.d.ts","../../node_modules/class-validator/types/decorator/string/ismilitarytime.d.ts","../../node_modules/class-validator/types/decorator/string/ishash.d.ts","../../node_modules/class-validator/types/decorator/string/isissn.d.ts","../../node_modules/class-validator/types/decorator/string/isdatestring.d.ts","../../node_modules/class-validator/types/decorator/string/isbooleanstring.d.ts","../../node_modules/class-validator/types/decorator/string/isnumberstring.d.ts","../../node_modules/class-validator/types/decorator/string/isbase32.d.ts","../../node_modules/class-validator/types/decorator/string/isbic.d.ts","../../node_modules/class-validator/types/decorator/string/isbtcaddress.d.ts","../../node_modules/class-validator/types/decorator/string/isdatauri.d.ts","../../node_modules/class-validator/types/decorator/string/isean.d.ts","../../node_modules/class-validator/types/decorator/string/isethereumaddress.d.ts","../../node_modules/class-validator/types/decorator/string/ishsl.d.ts","../../node_modules/class-validator/types/decorator/string/isiban.d.ts","../../node_modules/class-validator/types/decorator/string/isidentitycard.d.ts","../../node_modules/class-validator/types/decorator/string/isisrc.d.ts","../../node_modules/class-validator/types/decorator/string/islocale.d.ts","../../node_modules/class-validator/types/decorator/string/ismagneturi.d.ts","../../node_modules/class-validator/types/decorator/string/ismimetype.d.ts","../../node_modules/class-validator/types/decorator/string/isoctal.d.ts","../../node_modules/class-validator/types/decorator/string/ispassportnumber.d.ts","../../node_modules/class-validator/types/decorator/string/ispostalcode.d.ts","../../node_modules/class-validator/types/decorator/string/isrfc3339.d.ts","../../node_modules/class-validator/types/decorator/string/isrgbcolor.d.ts","../../node_modules/class-validator/types/decorator/string/issemver.d.ts","../../node_modules/class-validator/types/decorator/string/isstrongpassword.d.ts","../../node_modules/class-validator/types/decorator/string/istimezone.d.ts","../../node_modules/class-validator/types/decorator/string/isbase58.d.ts","../../node_modules/class-validator/types/decorator/string/is-tax-id.d.ts","../../node_modules/class-validator/types/decorator/string/is-iso4217-currency-code.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isboolean.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isdate.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isnumber.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isenum.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isint.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isstring.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isarray.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isobject.d.ts","../../node_modules/class-validator/types/decorator/array/arraycontains.d.ts","../../node_modules/class-validator/types/decorator/array/arraynotcontains.d.ts","../../node_modules/class-validator/types/decorator/array/arraynotempty.d.ts","../../node_modules/class-validator/types/decorator/array/arrayminsize.d.ts","../../node_modules/class-validator/types/decorator/array/arraymaxsize.d.ts","../../node_modules/class-validator/types/decorator/array/arrayunique.d.ts","../../node_modules/class-validator/types/decorator/object/isnotemptyobject.d.ts","../../node_modules/class-validator/types/decorator/object/isinstance.d.ts","../../node_modules/class-validator/types/decorator/decorators.d.ts","../../node_modules/class-validator/types/validation/validationtypes.d.ts","../../node_modules/class-validator/types/validation/validator.d.ts","../../node_modules/class-validator/types/register-decorator.d.ts","../../node_modules/class-validator/types/metadata/validationmetadataargs.d.ts","../../node_modules/class-validator/types/metadata/validationmetadata.d.ts","../../node_modules/class-validator/types/metadata/constraintmetadata.d.ts","../../node_modules/class-validator/types/metadata/metadatastorage.d.ts","../../node_modules/class-validator/types/index.d.ts","../../packages/core/dist/types/user.types.d.ts","../../packages/core/dist/types/pensum.types.d.ts","../../packages/core/dist/types/quiz.types.d.ts","../../packages/core/dist/index.d.ts","./src/users/dto/create-user.dto.ts","../../node_modules/@types/bcryptjs/index.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/typealiases.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/util.d.ts","../../node_modules/zod/dist/commonjs/v3/zoderror.d.ts","../../node_modules/zod/dist/commonjs/v3/locales/en.d.ts","../../node_modules/zod/dist/commonjs/v3/errors.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/parseutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/enumutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/errorutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/partialutil.d.ts","../../node_modules/zod/dist/commonjs/v3/standard-schema.d.ts","../../node_modules/zod/dist/commonjs/v3/types.d.ts","../../node_modules/zod/dist/commonjs/v3/external.d.ts","../../node_modules/zod/dist/commonjs/v3/index.d.ts","../../node_modules/zod/dist/commonjs/index.d.ts","../../packages/config/dist/env.d.ts","../../packages/config/dist/index.d.ts","./src/users/users.service.ts","./src/users/users.controller.ts","./src/users/users.module.ts","../../node_modules/@types/jsonwebtoken/index.d.ts","./node_modules/@nestjs/jwt/dist/interfaces/jwt-module-options.interface.d.ts","./node_modules/@nestjs/jwt/dist/interfaces/index.d.ts","./node_modules/@nestjs/jwt/dist/jwt.errors.d.ts","./node_modules/@nestjs/jwt/dist/jwt.module.d.ts","./node_modules/@nestjs/jwt/dist/jwt.service.d.ts","./node_modules/@nestjs/jwt/dist/index.d.ts","./node_modules/@nestjs/jwt/index.d.ts","../../node_modules/@types/ms/index.d.ts","../../node_modules/@types/passport-jwt/node_modules/@types/jsonwebtoken/index.d.ts","../../node_modules/@types/mime/index.d.ts","../../node_modules/@types/send/index.d.ts","../../node_modules/@types/qs/index.d.ts","../../node_modules/@types/range-parser/index.d.ts","../../node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/http-errors/index.d.ts","../../node_modules/@types/serve-static/index.d.ts","../../node_modules/@types/connect/index.d.ts","../../node_modules/@types/body-parser/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport/index.d.ts","../../node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-strategy/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-strategy/index.d.ts","../../node_modules/@types/passport-jwt/index.d.ts","./node_modules/@nestjs/passport/dist/abstract.strategy.d.ts","./node_modules/@nestjs/passport/dist/interfaces/auth-module.options.d.ts","./node_modules/@nestjs/passport/dist/interfaces/type.interface.d.ts","./node_modules/@nestjs/passport/dist/interfaces/index.d.ts","./node_modules/@nestjs/passport/dist/auth.guard.d.ts","./node_modules/@nestjs/passport/dist/passport.module.d.ts","./node_modules/@nestjs/passport/dist/passport/passport.serializer.d.ts","./node_modules/@nestjs/passport/dist/passport/passport.strategy.d.ts","./node_modules/@nestjs/passport/dist/index.d.ts","./node_modules/@nestjs/passport/index.d.ts","./src/auth/strategies/jwt/jwt.ts","./src/auth/dto/reset-password.dto.ts","../../node_modules/@types/uuid/index.d.ts","./src/auth/auth.service.ts","./src/auth/guards/local-auth.guard.ts","./src/auth/guards/jwt-auth.guard.ts","./node_modules/@nestjs/throttler/dist/throttler-storage-record.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler-storage.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler.guard.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler-module-options.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler.decorator.d.ts","./node_modules/@nestjs/throttler/dist/throttler.exception.d.ts","./node_modules/@nestjs/throttler/dist/throttler.guard.d.ts","./node_modules/@nestjs/throttler/dist/throttler.module.d.ts","./node_modules/@nestjs/throttler/dist/throttler.providers.d.ts","./node_modules/@nestjs/throttler/dist/throttler-storage-options.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler.service.d.ts","./node_modules/@nestjs/throttler/dist/utilities.d.ts","./node_modules/@nestjs/throttler/dist/index.d.ts","./src/auth/guards/login-throttler.guard.ts","./src/auth/dto/login.dto.ts","./src/auth/dto/forgot-password.dto.ts","./src/auth/dto/refresh-token.dto.ts","./src/auth/auth.controller.ts","../../node_modules/@types/passport-local/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-local/index.d.ts","./src/auth/strategies/local/local.ts","./src/auth/auth.module.ts","./src/common/middleware/csrf.middleware.ts","./src/app.module.ts","./node_modules/@nestjs/swagger/dist/decorators/api-basic.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-bearer.decorator.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts","./node_modules/@nestjs/swagger/dist/types/swagger-enum.type.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-body.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-consumes.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-cookie.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-exclude-endpoint.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-exclude-controller.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-extra-models.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-header.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-hide-property.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-oauth2.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-operation.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-param.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-produces.decorator.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/schema-object-metadata.interface.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-property.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-query.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-response.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-security.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-use-tags.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-extension.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/index.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/swagger-ui-options.interface.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/swagger-custom-options.interface.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/swagger-document-options.interface.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/index.d.ts","./node_modules/@nestjs/swagger/dist/document-builder.d.ts","./node_modules/@nestjs/swagger/dist/swagger-module.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/intersection-type.helper.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/omit-type.helper.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/partial-type.helper.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/pick-type.helper.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/index.d.ts","./node_modules/@nestjs/swagger/dist/utils/get-schema-path.util.d.ts","./node_modules/@nestjs/swagger/dist/utils/index.d.ts","./node_modules/@nestjs/swagger/dist/index.d.ts","./node_modules/@nestjs/swagger/index.d.ts","./src/common/filters/global-exception.filter.ts","./src/main.ts","../../node_modules/joi/lib/index.d.ts","./src/config/environment-variables.ts","./src/controllers/contentblock.controller.ts","./src/controllers/course.controller.ts","./src/controllers/lesson.controller.ts","./src/controllers/module.controller.ts","./src/controllers/pensum.controller.ts","./src/controllers/quiz.controller.ts","./src/controllers/quizattempt.controller.ts","./src/controllers/subjectarea.controller.ts","./src/controllers/userprogress.controller.ts","./src/middleware/auth.middleware.ts","./src/modules/pensum.module.ts","./src/modules/quiz.module.ts","./src/modules/userprogress.module.ts","./src/persistence/prisma/prisma.service.spec.ts","./src/routes/pensum.routes.ts","./src/routes/quiz.routes.ts","./src/services/pensum.service.ts","./src/services/quiz.service.ts","./src/services/userprogress.service.ts","./src/types/express.d.ts","./src/users/users.controller.spec.ts","./src/users/users.service.spec.ts","../../node_modules/@types/aria-query/index.d.ts","../../node_modules/@babel/types/lib/index.d.ts","../../node_modules/@types/babel__generator/index.d.ts","../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../node_modules/@types/babel__template/index.d.ts","../../node_modules/@types/babel__traverse/index.d.ts","../../node_modules/@types/babel__core/index.d.ts","../../node_modules/@types/cookiejar/index.d.ts","../../node_modules/@types/estree/index.d.ts","../../node_modules/@types/json-schema/index.d.ts","../../node_modules/@types/eslint/use-at-your-own-risk.d.ts","../../node_modules/@types/eslint/index.d.ts","../../node_modules/@types/eslint-scope/index.d.ts","../../node_modules/@types/graceful-fs/index.d.ts","../../node_modules/@types/hoist-non-react-statics/node_modules/@types/react/global.d.ts","../../node_modules/csstype/index.d.ts","../../node_modules/@types/hoist-non-react-statics/node_modules/@types/react/index.d.ts","../../node_modules/@types/hoist-non-react-statics/index.d.ts","../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../node_modules/@types/istanbul-lib-report/index.d.ts","../../node_modules/@types/istanbul-reports/index.d.ts","../../node_modules/@jest/expect-utils/build/index.d.ts","../../node_modules/chalk/index.d.ts","../../node_modules/@sinclair/typebox/typebox.d.ts","../../node_modules/@jest/schemas/build/index.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/expect/build/index.d.ts","../../node_modules/@types/jest/index.d.ts","../../node_modules/parse5/dist/common/html.d.ts","../../node_modules/parse5/dist/common/token.d.ts","../../node_modules/parse5/dist/common/error-codes.d.ts","../../node_modules/parse5/dist/tokenizer/preprocessor.d.ts","../../node_modules/parse5/dist/tokenizer/index.d.ts","../../node_modules/parse5/dist/tree-adapters/interface.d.ts","../../node_modules/parse5/dist/parser/open-element-stack.d.ts","../../node_modules/parse5/dist/parser/formatting-element-list.d.ts","../../node_modules/parse5/dist/parser/index.d.ts","../../node_modules/parse5/dist/tree-adapters/default.d.ts","../../node_modules/parse5/dist/serializer/index.d.ts","../../node_modules/parse5/dist/common/foreign-content.d.ts","../../node_modules/parse5/dist/index.d.ts","../../node_modules/@types/tough-cookie/index.d.ts","../../node_modules/@types/jsdom/base.d.ts","../../node_modules/@types/jsdom/index.d.ts","../../node_modules/@types/json5/index.d.ts","../../node_modules/@types/methods/index.d.ts","../../node_modules/@types/prop-types/index.d.ts","../../node_modules/@types/react/global.d.ts","../../node_modules/@types/react/index.d.ts","../../node_modules/@types/react-dom/index.d.ts","../../node_modules/@types/scheduler/index.d.ts","../../node_modules/@types/semver/classes/semver.d.ts","../../node_modules/@types/semver/functions/parse.d.ts","../../node_modules/@types/semver/functions/valid.d.ts","../../node_modules/@types/semver/functions/clean.d.ts","../../node_modules/@types/semver/functions/inc.d.ts","../../node_modules/@types/semver/functions/diff.d.ts","../../node_modules/@types/semver/functions/major.d.ts","../../node_modules/@types/semver/functions/minor.d.ts","../../node_modules/@types/semver/functions/patch.d.ts","../../node_modules/@types/semver/functions/prerelease.d.ts","../../node_modules/@types/semver/functions/compare.d.ts","../../node_modules/@types/semver/functions/rcompare.d.ts","../../node_modules/@types/semver/functions/compare-loose.d.ts","../../node_modules/@types/semver/functions/compare-build.d.ts","../../node_modules/@types/semver/functions/sort.d.ts","../../node_modules/@types/semver/functions/rsort.d.ts","../../node_modules/@types/semver/functions/gt.d.ts","../../node_modules/@types/semver/functions/lt.d.ts","../../node_modules/@types/semver/functions/eq.d.ts","../../node_modules/@types/semver/functions/neq.d.ts","../../node_modules/@types/semver/functions/gte.d.ts","../../node_modules/@types/semver/functions/lte.d.ts","../../node_modules/@types/semver/functions/cmp.d.ts","../../node_modules/@types/semver/functions/coerce.d.ts","../../node_modules/@types/semver/classes/comparator.d.ts","../../node_modules/@types/semver/classes/range.d.ts","../../node_modules/@types/semver/functions/satisfies.d.ts","../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../node_modules/@types/semver/ranges/min-version.d.ts","../../node_modules/@types/semver/ranges/valid.d.ts","../../node_modules/@types/semver/ranges/outside.d.ts","../../node_modules/@types/semver/ranges/gtr.d.ts","../../node_modules/@types/semver/ranges/ltr.d.ts","../../node_modules/@types/semver/ranges/intersects.d.ts","../../node_modules/@types/semver/ranges/simplify.d.ts","../../node_modules/@types/semver/ranges/subset.d.ts","../../node_modules/@types/semver/internals/identifiers.d.ts","../../node_modules/@types/semver/index.d.ts","../../node_modules/@types/stack-utils/index.d.ts","../../node_modules/@types/superagent/lib/agent-base.d.ts","../../node_modules/@types/superagent/lib/node/response.d.ts","../../node_modules/@types/superagent/types.d.ts","../../node_modules/@types/superagent/lib/node/agent.d.ts","../../node_modules/@types/superagent/lib/request-base.d.ts","../../node_modules/form-data/index.d.ts","../../node_modules/@types/superagent/lib/node/http2wrapper.d.ts","../../node_modules/@types/superagent/lib/node/index.d.ts","../../node_modules/@types/superagent/index.d.ts","../../node_modules/@types/supertest/index.d.ts","../../node_modules/@types/testing-library__jest-dom/matchers.d.ts","../../node_modules/@types/testing-library__jest-dom/index.d.ts","../../node_modules/@types/use-sync-external-store/index.d.ts","../../node_modules/@types/yargs-parser/index.d.ts","../../node_modules/@types/yargs/index.d.ts"],"fileIdsList":[[520,563],[302,520,563],[397,520,563],[52,303,304,305,306,307,308,309,310,311,312,313,314,315,520,563],[255,289,520,563],[262,520,563],[252,302,397,520,563],[320,321,322,323,324,325,326,327,520,563],[257,520,563],[302,397,520,563],[316,319,328,520,563],[317,318,520,563],[293,520,563],[257,258,259,260,520,563],[330,520,563],[275,520,563],[330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,520,563],[358,520,563],[353,354,520,563],[355,357,520,563,594],[51,261,302,329,352,357,359,366,389,394,396,520,563],[57,255,520,563],[56,520,563],[57,247,248,435,440,520,563],[247,255,520,563],[56,246,520,563],[255,368,520,563],[249,370,520,563],[246,250,520,563],[56,302,520,563],[254,255,520,563],[267,520,563],[269,270,271,272,273,520,563],[261,520,563],[261,262,277,281,520,563],[275,276,282,283,284,520,563],[53,54,55,56,57,247,248,249,250,251,252,253,254,255,256,262,267,268,274,281,285,286,287,289,297,298,299,300,301,520,563],[280,520,563],[263,264,265,266,520,563],[255,263,264,520,563],[255,261,262,520,563],[255,265,520,563],[255,293,520,563],[288,290,291,292,293,294,295,296,520,563],[53,255,520,563],[289,520,563],[53,255,288,292,294,520,563],[264,520,563],[290,520,563],[255,289,290,291,520,563],[279,520,563],[255,259,279,297,520,563],[277,278,280,520,563],[251,253,262,268,277,282,298,299,302,520,563],[57,251,253,256,298,299,520,563],[260,520,563],[246,520,563],[279,302,360,364,520,563],[364,365,520,563],[302,360,520,563],[302,360,361,520,563],[361,362,520,563],[361,362,363,520,563],[256,520,563],[381,382,520,563],[381,520,563],[382,383,384,385,386,387,520,563],[380,520,563],[372,382,520,563],[382,383,384,385,386,520,563],[256,381,382,385,520,563],[367,373,374,375,376,377,378,379,388,520,563],[256,302,373,520,563],[256,372,520,563],[256,372,397,520,563],[249,255,256,368,369,370,371,372,520,563],[246,302,368,369,390,520,563],[302,368,520,563],[392,520,563],[329,390,520,563],[390,391,393,520,563],[279,356,520,563],[288,520,563],[261,302,520,563],[395,520,563],[397,520,563,615],[246,508,513,520,563],[507,513,520,563,615,616,617,620],[513,520,563],[514,520,563,613],[508,514,520,563,614],[509,510,511,512,520,563],[520,563,618,619],[513,520,563,615,621],[520,563,621],[277,281,302,397,520,563],[404,520,563],[302,397,424,425,520,563],[406,520,563],[397,418,423,424,520,563],[428,429,520,563],[57,302,419,424,438,520,563],[397,405,431,520,563],[56,397,432,435,520,563],[302,419,424,426,437,439,443,520,563],[56,441,442,520,563],[432,520,563],[246,302,397,446,520,563],[302,397,419,424,426,438,520,563],[445,447,448,520,563],[302,424,520,563],[424,520,563],[302,397,446,520,563],[56,302,397,520,563],[302,397,418,419,424,444,446,449,452,457,458,469,470,520,563],[246,404,520,563],[431,434,471,520,563],[458,468,520,563],[51,401,405,426,427,430,433,468,472,475,479,480,481,482,484,490,492,520,563],[302,397,412,420,423,424,520,563],[302,416,520,563],[302,397,406,415,416,417,418,423,424,426,493,520,563],[418,419,422,424,460,467,520,563],[302,397,411,423,424,520,563],[459,520,563],[397,419,424,520,563],[397,412,419,423,463,520,563],[302,397,406,411,423,520,563],[397,417,418,422,461,464,465,466,520,563],[397,412,419,420,421,423,424,520,563],[255,397,520,563],[302,406,419,422,424,520,563],[423,520,563],[408,409,410,419,423,424,462,520,563],[415,463,473,474,520,563],[397,406,424,520,563],[397,406,520,563],[407,408,409,410,413,415,520,563],[412,520,563],[414,415,520,563],[397,407,408,409,410,413,414,520,563],[450,451,520,563],[302,419,424,426,438,520,563],[400,520,563],[286,520,563],[267,302,476,477,520,563],[478,520,563],[302,426,520,563],[302,419,426,520,563],[280,302,397,412,419,420,421,423,424,520,563],[277,279,302,397,405,419,426,463,480,520,563],[280,281,397,403,404,520,563],[454,455,456,520,563],[397,453,520,563],[483,520,563],[397,520,563,592],[486,488,489,520,563],[485,520,563],[487,520,563],[397,418,423,486,520,563],[436,520,563],[302,397,400,401,406,419,423,424,426,461,463,520,563],[491,520,563],[520,563,789,791,792,793,794],[520,563,790],[397,520,563,789],[397,520,563,790],[520,563,789,791],[520,563,795],[397,520,563,816,818],[520,563,815,818,819,820,821,822],[520,563,816,817],[397,520,563,816],[520,563,810],[520,563,818],[520,563,823],[397,520,563,857,858],[520,563,857,858],[520,563,857],[520,563,871],[397,520,563,857],[520,563,855,856,859,860,861,862,863,864,865,866,867,868,869,870,872,873,874,875,876,877],[520,563,857,882],[51,520,563,878,882,883,884,889,891],[520,563,857,880,881],[520,563,857,879],[397,520,563,882],[520,563,885,886,887,888],[520,563,890],[520,563,892],[494,495,497,498,520,563],[398,399,496,520,563],[399,495,520,563],[400,495,520,563],[293,495,520,563],[280,397,400,401,402,494,497,520,563],[397,403,419,423,426,463,493,520,563],[520,563,832,834,835,836,837,838,839,841,842],[302,520,563,832,833],[520,563,831],[520,563,834],[397,493,520,563,832,833,834],[397,520,563,834],[397,520,563,832,834],[397,520,563,831,832,840],[520,560,563],[520,562,563],[563],[520,563,568,597],[520,563,564,569,575,576,583,594,605],[520,563,564,565,575,583],[515,516,517,520,563],[520,563,566,606],[520,563,567,568,576,584],[520,563,568,594,602],[520,563,569,571,575,583],[520,562,563,570],[520,563,571,572],[520,563,575],[520,563,573,575],[520,562,563,575],[520,563,575,576,577,594,605],[520,563,575,576,577,590,594,597],[520,558,563,610],[520,563,571,575,578,583,594,605],[520,563,575,576,578,579,583,594,602,605],[520,563,578,580,594,602,605],[518,519,520,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611],[520,563,575,581],[520,563,582,605,610],[520,563,571,575,583,594],[520,563,584],[520,563,585],[520,562,563,586],[520,560,561,562,563,564,565,566,567,568,569,570,571,572,573,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611],[520,563,588],[520,563,589],[520,563,575,590,591],[520,563,590,592,606,608],[520,563,575,594,595,597],[520,563,596,597],[520,563,594,595],[520,563,597],[520,563,598],[520,560,563,594],[520,563,575,600,601],[520,563,600,601],[520,563,568,583,594,602],[520,563,603],[520,563,583,604],[520,563,578,589,605],[520,563,568,606],[520,563,594,607],[520,563,582,608],[520,563,609],[520,563,568,575,577,586,594,605,608,610],[520,563,594,611],[520,563,612],[520,530,534,563,605],[520,530,563,594,605],[520,525,563],[520,527,530,563,602,605],[520,563,583,602],[520,525,563,612],[520,527,530,563,583,605],[520,522,523,526,529,563,575,594,605],[520,530,537,563],[520,522,528,563],[520,530,551,552,563],[520,526,530,563,597,605,612],[520,551,563,612],[520,524,525,563,612],[520,530,563],[520,524,525,526,527,528,529,530,531,532,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,552,553,554,555,556,557,563],[520,530,545,563],[520,530,537,538,563],[520,528,530,538,539,563],[520,529,563],[520,522,525,530,563],[520,530,534,538,539,563],[520,534,563],[520,528,530,533,563,605],[520,522,527,530,537,563],[520,563,594],[520,525,530,551,563,610,612],[499,500,501,506,520,563,622],[397,500,520,563],[397,500,501,520,563,622,624,785,788,843,852,853],[397,520,563,767,826,828,829,830,844,845,846,847],[397,520,563,622,624,788,796,824,825,828,848,851],[397,505,506,520,563,622,767,769,786,796,825,826,827],[520,563,763],[246,397,520,563,824],[397,520,563,824],[397,520,563,843],[397,505,520,563,622,767,786,814,824],[397,520,563,767,824,828,850],[397,520,563,811],[520,563,896],[505,520,563,767,811],[397,493,520,563,854,893,894],[520,563,767,789,811],[397,506,520,563],[397,499,505,506,520,563],[397,505,520,563],[520,563,811,898,899,900,901,905,907],[520,563,811,903,904,906,907],[520,563,767],[520,563,763,767],[397,499,520,563,767,768,786,787],[397,520,563,767,768,786],[397,520,563,624,786,787],[397,499,505,506,520,563,622,767,768,769,785,786],[397,505,506,520,563,622,767,768,769,785],[503,520,563],[502,520,563],[520,563,921],[520,563,943],[504,520,563],[520,563,921,922,923,924,925],[520,563,921,923],[520,563,578,612,806],[520,563,578,612],[520,563,928,931],[520,563,928,929,930],[520,563,931],[520,563,575,578,612,800,801,802],[520,563,801,803,805,807],[520,563,576,612],[520,563,936],[520,563,934,935],[520,563,938],[520,563,939],[520,563,945,948,1025],[520,563,575,608,612,962,963,965],[520,563,964],[520,563,568,612],[520,563,798,813],[520,563,568,612,797],[520,563,809,810,813],[520,563,805,807,808],[520,563,809,810,811],[520,563,578,809],[520,563,803,805,807,808],[520,563,970],[520,563,935,968,969],[520,563,973,1012],[520,563,973,997,1012],[520,563,1012],[520,563,973],[520,563,973,998,1012],[520,563,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011],[520,563,998,1012],[520,563,576,594,612,799],[520,563,578,612,800,804],[520,563,1021],[520,563,927,967,1014,1016,1022],[520,563,579,583,594,602,612],[520,563,576,578,579,580,583,594,967,1015,1016,1017,1018,1019,1020],[520,563,578,594,1021],[520,563,576,1015,1016],[520,563,605,1015],[520,563,1022],[520,563,948,949,1024],[520,563,658,659,660,661,662,663,664,665,666],[520,563,1027],[520,563,630],[520,563,629,630,635],[520,563,631,632,633,634,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754],[520,563,630,667],[520,563,630,707],[520,563,629],[520,563,625,626,627,628,629,630,635,755,756,757,758,762],[520,563,635],[520,563,627,760,761],[520,563,629,759],[520,563,630,635],[520,563,625,626],[520,563,941,947],[520,563,578,594,612],[520,563,945],[520,563,942,946],[520,563,706],[520,563,951],[520,563,950,951],[520,563,950],[520,563,950,951,952,954,955,958,959,960,961],[520,563,951,955],[520,563,950,951,952,954,955,956,957],[520,563,950,955],[520,563,955,959],[520,563,951,952,953],[520,563,952],[520,563,950,951,955],[520,563,944],[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,181,190,192,193,194,195,196,197,199,200,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,520,563],[103,520,563],[59,62,520,563],[61,520,563],[61,62,520,563],[58,59,60,62,520,563],[59,61,62,219,520,563],[62,520,563],[58,61,103,520,563],[61,62,219,520,563],[61,227,520,563],[59,61,62,520,563],[71,520,563],[94,520,563],[115,520,563],[61,62,103,520,563],[62,110,520,563],[61,62,103,121,520,563],[61,62,121,520,563],[62,162,520,563],[62,103,520,563],[58,62,180,520,563],[58,62,181,520,563],[203,520,563],[187,189,520,563],[198,520,563],[187,520,563],[58,62,180,187,188,520,563],[180,181,189,520,563],[201,520,563],[58,62,187,188,189,520,563],[60,61,62,520,563],[58,62,520,563],[59,61,181,182,183,184,520,563],[103,181,182,183,184,520,563],[181,183,520,563],[61,182,183,185,186,190,520,563],[58,61,520,563],[62,205,520,563],[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,520,563],[191,520,563],[520,563,782],[520,563,772,773],[520,563,770,771,772,774,775,780],[520,563,771,772],[520,563,780],[520,563,781],[520,563,772],[520,563,770,771,772,775,776,777,778,779],[520,563,770,771,782],[520,563,783],[520,563,784],[520,563,764,765,766]],"fileInfos":[{"version":"69684132aeb9b5642cbcd9e22dff7818ff0ee1aa831728af0ecf97d3364d5546","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"092c2bfe125ce69dbb1223c85d68d4d2397d7d8411867b5cc03cec902c233763","affectsGlobalScope":true,"impliedFormat":1},{"version":"07f073f19d67f74d732b1adea08e1dc66b1b58d77cb5b43931dee3d798a2fd53","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1d242d5c24cf285c88bc4fb93c5ff903de8319064e282986edeb6247ba028d5e","impliedFormat":1},{"version":"8d6d51a5118d000ed3bfe6e1dd1335bebfff3fef23cd2af2f84a24d30f90cc90","affectsGlobalScope":true,"impliedFormat":1},{"version":"6d8dedbec739bc79642c1e96e9bfc0b83b25b104a0486aebf016fc7b85b39f48","impliedFormat":1},{"version":"e89535c3ec439608bcd0f68af555d0e5ddf121c54abe69343549718bd7506b9c","impliedFormat":1},{"version":"622a984b60c294ffb2f9152cf1d4d12e91d2b733d820eec949cf54d63a3c1025","impliedFormat":1},{"version":"81aae92abdeaccd9c1723cef39232c90c1aed9d9cf199e6e2a523b7d8e058a11","impliedFormat":1},{"version":"a63a6c6806a1e519688ef7bd8ca57be912fc0764485119dbd923021eb4e79665","impliedFormat":1},{"version":"75b57b109d774acca1e151df21cf5cb54c7a1df33a273f0457b9aee4ebd36fb9","impliedFormat":1},{"version":"073ca26c96184db9941b5ec0ddea6981c9b816156d9095747809e524fdd90e35","impliedFormat":1},{"version":"e41d17a2ec23306d953cda34e573ed62954ca6ea9b8c8b74e013d07a6886ce47","impliedFormat":1},{"version":"241bd4add06f06f0699dcd58f3b334718d85e3045d9e9d4fa556f11f4d1569c1","impliedFormat":1},{"version":"2ae3787e1498b20aad1b9c2ee9ea517ec30e89b70d242d8e3e52d1e091039695","impliedFormat":1},{"version":"c7c72c4cffb1bc83617eefed71ed68cc89df73cab9e19507ccdecb3e72b4967e","affectsGlobalScope":true,"impliedFormat":1},{"version":"b8bff8a60af0173430b18d9c3e5c443eaa3c515617210c0c7b3d2e1743c19ecb","impliedFormat":1},{"version":"38b38db08e7121828294dec10957a7a9ff263e33e2a904b346516d4a4acca482","impliedFormat":1},{"version":"a76ebdf2579e68e4cfe618269c47e5a12a4e045c2805ed7f7ab37af8daa6b091","impliedFormat":1},{"version":"8a2aaea564939c22be05d665cc955996721bad6d43148f8fa21ae8f64afecd37","impliedFormat":1},{"version":"e59d36b7b6e8ba2dd36d032a5f5c279d2460968c8b4e691ca384f118fb09b52a","impliedFormat":1},{"version":"e96885c0684c9042ec72a9a43ef977f6b4b4a2728f4b9e737edcbaa0c74e5bf6","impliedFormat":1},{"version":"95950a187596e206d32d5d9c7b932901088c65ed8f9040e614aa8e321e0225ef","impliedFormat":1},{"version":"89e061244da3fc21b7330f4bd32f47c1813dd4d7f1dc3d0883d88943f035b993","impliedFormat":1},{"version":"e46558c2e04d06207b080138678020448e7fc201f3d69c2601b0d1456105f29a","impliedFormat":1},{"version":"71549375db52b1163411dba383b5f4618bdf35dc57fa327a1c7d135cf9bf67d1","impliedFormat":1},{"version":"7e6b2d61d6215a4e82ea75bc31a80ebb8ad0c2b37a60c10c70dd671e8d9d6d5d","impliedFormat":1},{"version":"78bea05df2896083cca28ed75784dde46d4b194984e8fc559123b56873580a23","impliedFormat":1},{"version":"5dd04ced37b7ea09f29d277db11f160df7fd73ba8b9dba86cb25552e0653a637","impliedFormat":1},{"version":"f74b81712e06605677ae1f061600201c425430151f95b5ef4d04387ad7617e6a","impliedFormat":1},{"version":"9a72847fcf4ac937e352d40810f7b7aec7422d9178451148296cf1aa19467620","impliedFormat":1},{"version":"3ae18f60e0b96fa1e025059b7d25b3247ba4dcb5f4372f6d6e67ce2adac74eac","impliedFormat":1},{"version":"2b9260f44a2e071450ae82c110f5dc8f330c9e5c3e85567ed97248330f2bf639","impliedFormat":1},{"version":"4f196e13684186bda6f5115fc4677a87cf84a0c9c4fc17b8f51e0984f3697b6d","impliedFormat":1},{"version":"61419f2c5822b28c1ea483258437c1faab87d00c6f84481aa22afb3380d8e9a4","impliedFormat":1},{"version":"64479aee03812264e421c0bf5104a953ca7b02740ba80090aead1330d0effe91","impliedFormat":1},{"version":"0521108c9f8ddb17654a0a54dae6ba9667c99eddccfd6af5748113e022d1c37a","impliedFormat":1},{"version":"c5570e504be103e255d80c60b56c367bf45d502ca52ee35c55dec882f6563b5c","impliedFormat":1},{"version":"ee764e6e9a7f2b987cc1a2c0a9afd7a8f4d5ebc4fdb66ad557a7f14a8c2bd320","impliedFormat":1},{"version":"0520b5093712c10c6ef23b5fea2f833bf5481771977112500045e5ea7e8e2b69","impliedFormat":1},{"version":"5c3cf26654cf762ac4d7fd7b83f09acfe08eef88d2d6983b9a5a423cb4004ca3","impliedFormat":1},{"version":"e60fa19cf7911c1623b891155d7eb6b7e844e9afdf5738e3b46f3b687730a2bd","impliedFormat":1},{"version":"b1fd72ff2bb0ba91bb588f3e5329f8fc884eb859794f1c4657a2bfa122ae54d0","impliedFormat":1},{"version":"6cf42a4f3cfec648545925d43afaa8bb364ac10a839ffed88249da109361b275","impliedFormat":1},{"version":"d7058e75920120b142a9d57be25562a3cd9a936269fd52908505f530105f2ec4","impliedFormat":1},{"version":"6df52b70d7f7702202f672541a5f4a424d478ee5be51a9d37b8ccbe1dbf3c0f2","impliedFormat":1},{"version":"0ca7f997e9a4d8985e842b7c882e521b6f63233c4086e9fe79dd7a9dc4742b5e","impliedFormat":1},{"version":"91046b5c6b55d3b194c81fd4df52f687736fad3095e9d103ead92bb64dc160ee","impliedFormat":1},{"version":"db5704fdad56c74dfc5941283c1182ed471bd17598209d3ac4a49faa72e43cfc","impliedFormat":1},{"version":"758e8e89559b02b81bc0f8fd395b17ad5aff75490c862cbe369bb1a3d1577c40","impliedFormat":1},{"version":"2ee64342c077b1868f1834c063f575063051edd6e2964257d34aad032d6b657c","impliedFormat":1},{"version":"6f6b4b3d670b6a5f0e24ea001c1b3d36453c539195e875687950a178f1730fa7","impliedFormat":1},{"version":"a472a1d3f25ce13a1d44911cd3983956ac040ce2018e155435ea34afb25f864c","impliedFormat":1},{"version":"b48b83a86dd9cfe36f8776b3ff52fcd45b0e043c0538dc4a4b149ba45fe367b9","impliedFormat":1},{"version":"792de5c062444bd2ee0413fb766e57e03cce7cdaebbfc52fc0c7c8e95069c96b","impliedFormat":1},{"version":"a79e3e81094c7a04a885bad9b049c519aace53300fb8a0fe4f26727cb5a746ce","impliedFormat":1},{"version":"93181bac0d90db185bb730c95214f6118ae997fe836a98a49664147fbcaf1988","impliedFormat":1},{"version":"8a4e89564d8ea66ad87ee3762e07540f9f0656a62043c910d819b4746fc429c5","impliedFormat":1},{"version":"b9011d99942889a0f95e120d06b698c628b0b6fdc3e6b7ecb459b97ed7d5bcc6","impliedFormat":1},{"version":"4d639cbbcc2f8f9ce6d55d5d503830d6c2556251df332dc5255d75af53c8a0e7","impliedFormat":1},{"version":"cdb48277f600ab5f429ecf1c5ea046683bc6b9f73f3deab9a100adac4b34969c","impliedFormat":1},{"version":"75be84956a29040a1afbe864c0a7a369dfdb739380072484eff153905ef867ee","impliedFormat":1},{"version":"b06b4adc2ae03331a92abd1b19af8eb91ec2bf8541747ee355887a167d53145e","impliedFormat":1},{"version":"c54166a85bd60f86d1ebb90ce0117c0ecb850b8a33b366691629fdf26f1bbbd8","impliedFormat":1},{"version":"0d417c15c5c635384d5f1819cc253a540fe786cc3fda32f6a2ae266671506a21","impliedFormat":1},{"version":"80f23f1d60fbed356f726b3b26f9d348dddbb34027926d10d59fad961e70a730","impliedFormat":1},{"version":"cb59317243a11379a101eb2f27b9df1022674c3df1df0727360a0a3f963f523b","impliedFormat":1},{"version":"cc20bb2227dd5de0aab0c8d697d1572f8000550e62c7bf5c92f212f657dd88c5","impliedFormat":1},{"version":"06b8a7d46195b6b3980e523ef59746702fd210b71681a83a5cf73799623621f9","impliedFormat":1},{"version":"860e4405959f646c101b8005a191298b2381af8f33716dc5f42097e4620608f8","impliedFormat":1},{"version":"f7e32adf714b8f25d3c1783473abec3f2e82d5724538d8dcf6f51baaaff1ca7a","impliedFormat":1},{"version":"d0da80c845999a16c24d0783033fb5366ada98df17867c98ad433ede05cd87fd","impliedFormat":1},{"version":"bfbf80f9cd4558af2d7b2006065340aaaced15947d590045253ded50aabb9bc5","impliedFormat":1},{"version":"fd9a991b51870325e46ebb0e6e18722d313f60cd8e596e645ec5ac15b96dbf4e","impliedFormat":1},{"version":"c3bd2b94e4298f81743d92945b80e9b56c1cdfb2bef43c149b7106a2491b1fc9","impliedFormat":1},{"version":"a246cce57f558f9ebaffd55c1e5673da44ea603b4da3b2b47eb88915d30a9181","impliedFormat":1},{"version":"d993eacc103c5a065227153c9aae8acea3a4322fe1a169ee7c70b77015bf0bb2","impliedFormat":1},{"version":"fc2b03d0c042aa1627406e753a26a1eaad01b3c496510a78016822ef8d456bb6","impliedFormat":1},{"version":"063c7ebbe756f0155a8b453f410ca6b76ffa1bbc1048735bcaf9c7c81a1ce35f","impliedFormat":1},{"version":"314e402cd481370d08f63051ae8b8c8e6370db5ee3b8820eeeaaf8d722a6dac6","impliedFormat":1},{"version":"9669075ac38ce36b638b290ba468233980d9f38bdc62f0519213b2fd3e2552ec","impliedFormat":1},{"version":"4d123de012c24e2f373925100be73d50517ac490f9ed3578ac82d0168bfbd303","impliedFormat":1},{"version":"656c9af789629aa36b39092bee3757034009620439d9a39912f587538033ce28","impliedFormat":1},{"version":"3ac3f4bdb8c0905d4c3035d6f7fb20118c21e8a17bee46d3735195b0c2a9f39f","impliedFormat":1},{"version":"1f453e6798ed29c86f703e9b41662640d4f2e61337007f27ac1c616f20093f69","impliedFormat":1},{"version":"af43b7871ff21c62bf1a54ec5c488e31a8d3408d5b51ff2e9f8581b6c55f2fc7","impliedFormat":1},{"version":"70550511d25cbb0b6a64dcac7fffc3c1397fd4cbeb6b23ccc7f9b794ab8a6954","impliedFormat":1},{"version":"af0fbf08386603a62f2a78c42d998c90353b1f1d22e05a384545f7accf881e0a","impliedFormat":1},{"version":"cefc20054d20b85b534206dbcedd509bb74f87f3d8bc45c58c7be3a76caa45e1","impliedFormat":1},{"version":"ad6eee4877d0f7e5244d34bc5026fd6e9cf8e66c5c79416b73f9f6ebf132f924","impliedFormat":1},{"version":"4888fd2bcfee9a0ce89d0df860d233e0cee8ee9c479b6bd5a5d5f9aae98342fe","impliedFormat":1},{"version":"f4749c102ced952aa6f40f0b579865429c4869f6d83df91000e98005476bee87","impliedFormat":1},{"version":"56654d2c5923598384e71cb808fac2818ca3f07dd23bb018988a39d5e64f268b","impliedFormat":1},{"version":"8b6719d3b9e65863da5390cb26994602c10a315aa16e7d70778a63fee6c4c079","impliedFormat":1},{"version":"05f56cd4b929977d18df8f3d08a4c929a2592ef5af083e79974b20a063f30940","impliedFormat":1},{"version":"547d3c406a21b30e2b78629ecc0b2ddaf652d9e0bdb2d59ceebce5612906df33","impliedFormat":1},{"version":"b3a4f9385279443c3a5568ec914a9492b59a723386161fd5ef0619d9f8982f97","impliedFormat":1},{"version":"3fe66aba4fbe0c3ba196a4f9ed2a776fe99dc4d1567a558fb11693e9fcc4e6ed","impliedFormat":1},{"version":"140eef237c7db06fc5adcb5df434ee21e81ee3a6fd57e1a75b8b3750aa2df2d8","impliedFormat":1},{"version":"0944ec553e4744efae790c68807a461720cff9f3977d4911ac0d918a17c9dd99","impliedFormat":1},{"version":"cb46b38d5e791acaa243bf342b8b5f8491639847463ac965b93896d4fb0af0d9","impliedFormat":1},{"version":"7c7d9e116fe51100ff766703e6b5e4424f51ad8977fe474ddd8d0959aa6de257","impliedFormat":1},{"version":"af70a2567e586be0083df3938b6a6792e6821363d8ef559ad8d721a33a5bcdaf","impliedFormat":1},{"version":"006cff3a8bcb92d77953f49a94cd7d5272fef4ab488b9052ef82b6a1260d870b","impliedFormat":1},{"version":"7d44bfdc8ee5e9af70738ff652c622ae3ad81815e63ab49bdc593d34cb3a68e5","impliedFormat":1},{"version":"339814517abd4dbc7b5f013dfd3b5e37ef0ea914a8bbe65413ecffd668792bc6","impliedFormat":1},{"version":"34d5bc0a6958967ec237c99f980155b5145b76e6eb927c9ffc57d8680326b5d8","impliedFormat":1},{"version":"9eae79b70c9d8288032cbe1b21d0941f6bd4f315e14786b2c1d10bccc634e897","impliedFormat":1},{"version":"18ce015ed308ea469b13b17f99ce53bbb97975855b2a09b86c052eefa4aa013a","impliedFormat":1},{"version":"5a931bc4106194e474be141e0bc1046629510dc95b9a0e4b02a3783847222965","impliedFormat":1},{"version":"5e5f371bf23d5ced2212a5ff56675aefbd0c9b3f4d4fdda1b6123ac6e28f058c","impliedFormat":1},{"version":"907c17ad5a05eecb29b42b36cc8fec6437be27cc4986bb3a218e4f74f606911c","impliedFormat":1},{"version":"ce60a562cd2a92f37a88f2ddd99a3abfbc5848d7baf38c48fb8d3243701fcb75","impliedFormat":1},{"version":"a726ad2d0a98bfffbe8bc1cd2d90b6d831638c0adc750ce73103a471eb9a891c","impliedFormat":1},{"version":"f44c0c8ce58d3dacac016607a1a90e5342d830ea84c48d2e571408087ae55894","impliedFormat":1},{"version":"75a315a098e630e734d9bc932d9841b64b30f7a349a20cf4717bf93044eff113","impliedFormat":1},{"version":"9131d95e32b3d4611d4046a613e022637348f6cebfe68230d4e81b691e4761a1","impliedFormat":1},{"version":"b03aa292cfdcd4edc3af00a7dbd71136dd067ec70a7536b655b82f4dd444e857","impliedFormat":1},{"version":"b6e2b0448ced813b8c207810d96551a26e7d7bb73255eea4b9701698f78846d6","impliedFormat":1},{"version":"8ae10cd85c1bd94d2f2d17c4cbd25c068a4b2471c70c2d96434239f97040747a","impliedFormat":1},{"version":"9ed5b799c50467b0c9f81ddf544b6bcda3e34d92076d6cab183c84511e45c39f","impliedFormat":1},{"version":"b4fa87cc1833839e51c49f20de71230e259c15b2c9c3e89e4814acc1d1ef10de","impliedFormat":1},{"version":"e90ac9e4ac0326faa1bc39f37af38ace0f9d4a655cd6d147713c653139cf4928","impliedFormat":1},{"version":"ea27110249d12e072956473a86fd1965df8e1be985f3b686b4e277afefdde584","impliedFormat":1},{"version":"8776a368617ce51129b74db7d55c3373dadcce5d0701e61d106e99998922a239","impliedFormat":1},{"version":"5666075052877fe2fdddd5b16de03168076cf0f03fbca5c1d4a3b8f43cba570c","impliedFormat":1},{"version":"9108ab5af05418f599ab48186193b1b07034c79a4a212a7f73535903ba4ca249","impliedFormat":1},{"version":"bb4e2cdcadf9c9e6ee2820af23cee6582d47c9c9c13b0dca1baaffe01fbbcb5f","impliedFormat":1},{"version":"6e30d0b5a1441d831d19fe02300ab3d83726abd5141cbcc0e2993fa0efd33db4","impliedFormat":1},{"version":"423f28126b2fc8d8d6fa558035309000a1297ed24473c595b7dec52e5c7ebae5","impliedFormat":1},{"version":"fb30734f82083d4790775dae393cd004924ebcbfde49849d9430bf0f0229dd16","impliedFormat":1},{"version":"2c92b04a7a4a1cd9501e1be338bf435738964130fb2ad5bd6c339ee41224ac4c","impliedFormat":1},{"version":"c5c5f0157b41833180419dacfbd2bcce78fb1a51c136bd4bcba5249864d8b9b5","impliedFormat":1},{"version":"02ae43d5bae42efcd5a00d3923e764895ce056bca005a9f4e623aa6b4797c8af","impliedFormat":1},{"version":"db6e01f17012a9d7b610ae764f94a1af850f5d98c9c826ad61747dca0fb800bd","impliedFormat":1},{"version":"8a44b424edee7bb17dc35a558cc15f92555f14a0441205613e0e50452ab3a602","impliedFormat":1},{"version":"24a00d0f98b799e6f628373249ece352b328089c3383b5606214357e9107e7d5","impliedFormat":1},{"version":"33637e3bc64edd2075d4071c55d60b32bdb0d243652977c66c964021b6fc8066","impliedFormat":1},{"version":"0f0ad9f14dedfdca37260931fac1edf0f6b951c629e84027255512f06a6ebc4c","impliedFormat":1},{"version":"16ad86c48bf950f5a480dc812b64225ca4a071827d3d18ffc5ec1ae176399e36","impliedFormat":1},{"version":"8cbf55a11ff59fd2b8e39a4aa08e25c5ddce46e3af0ed71fb51610607a13c505","impliedFormat":1},{"version":"d5bc4544938741f5daf8f3a339bfbf0d880da9e89e79f44a6383aaf056fe0159","impliedFormat":1},{"version":"97f9169882d393e6f303f570168ca86b5fe9aab556e9a43672dae7e6bb8e6495","impliedFormat":1},{"version":"7c9adb3fcd7851497818120b7e151465406e711d6a596a71b807f3a17853cb58","impliedFormat":1},{"version":"6752d402f9282dd6f6317c8c048aaaac27295739a166eed27e00391b358fed9a","impliedFormat":1},{"version":"9fd7466b77020847dbc9d2165829796bf7ea00895b2520ff3752ffdcff53564b","impliedFormat":1},{"version":"fbfc12d54a4488c2eb166ed63bab0fb34413e97069af273210cf39da5280c8d6","impliedFormat":1},{"version":"85a84240002b7cf577cec637167f0383409d086e3c4443852ca248fc6e16711e","impliedFormat":1},{"version":"84794e3abd045880e0fadcf062b648faf982aa80cfc56d28d80120e298178626","impliedFormat":1},{"version":"053d8b827286a16a669a36ffc8ccc8acdf8cc154c096610aa12348b8c493c7b8","impliedFormat":1},{"version":"3cce4ce031710970fe12d4f7834375f5fd455aa129af4c11eb787935923ff551","impliedFormat":1},{"version":"8f62cbd3afbd6a07bb8c934294b6bfbe437021b89e53a4da7de2648ecfc7af25","impliedFormat":1},{"version":"62c3621d34fb2567c17a2c4b89914ebefbfbd1b1b875b070391a7d4f722e55dc","impliedFormat":1},{"version":"c05ac811542e0b59cb9c2e8f60e983461f0b0e39cea93e320fad447ff8e474f3","impliedFormat":1},{"version":"8e7a5b8f867b99cc8763c0b024068fb58e09f7da2c4810c12833e1ca6eb11c4f","impliedFormat":1},{"version":"132351cbd8437a463757d3510258d0fa98fd3ebef336f56d6f359cf3e177a3ce","impliedFormat":1},{"version":"df877050b04c29b9f8409aa10278d586825f511f0841d1ec41b6554f8362092b","impliedFormat":1},{"version":"33d1888c3c27d3180b7fd20bac84e97ecad94b49830d5dd306f9e770213027d1","impliedFormat":1},{"version":"ee942c58036a0de88505ffd7c129f86125b783888288c2389330168677d6347f","impliedFormat":1},{"version":"a3f317d500c30ea56d41501632cdcc376dae6d24770563a5e59c039e1c2a08ec","impliedFormat":1},{"version":"eb21ddc3a8136a12e69176531197def71dc28ffaf357b74d4bf83407bd845991","impliedFormat":1},{"version":"0c1651a159995dfa784c57b4ea9944f16bdf8d924ed2d8b3db5c25d25749a343","impliedFormat":1},{"version":"aaa13958e03409d72e179b5d7f6ec5c6cc666b7be14773ae7b6b5ee4921e52db","impliedFormat":1},{"version":"0a86e049843ad02977a94bb9cdfec287a6c5a0a4b6b5391a6648b1a122072c5a","impliedFormat":1},{"version":"40f06693e2e3e58526b713c937895c02e113552dc8ba81ecd49cdd9596567ddb","impliedFormat":1},{"version":"4ed5e1992aedb174fb8f5aa8796aa6d4dcb8bd819b4af1b162a222b680a37fa0","impliedFormat":1},{"version":"d7f4bd46a8b97232ea6f8c28012b8d2b995e55e729d11405f159d3e00c51420a","impliedFormat":1},{"version":"d604d413aff031f4bfbdae1560e54ebf503d374464d76d50a2c6ded4df525712","impliedFormat":1},{"version":"e4f4f9cf1e3ac9fd91ada072e4d428ecbf0aa6dc57138fb797b8a0ca3a1d521c","impliedFormat":1},{"version":"12bfd290936824373edda13f48a4094adee93239b9a73432db603127881a300d","impliedFormat":1},{"version":"340ceb3ea308f8e98264988a663640e567c553b8d6dc7d5e43a8f3b64f780374","impliedFormat":1},{"version":"c5a769564e530fba3ec696d0a5cff1709b9095a0bdf5b0826d940d2fc9786413","impliedFormat":1},{"version":"7124ef724c3fc833a17896f2d994c368230a8d4b235baed39aa8037db31de54f","impliedFormat":1},{"version":"5de1c0759a76e7710f76899dcae601386424eab11fb2efaf190f2b0f09c3d3d3","impliedFormat":1},{"version":"9c5ee8f7e581f045b6be979f062a61bf076d362bf89c7f966b993a23424e8b0d","impliedFormat":1},{"version":"1a11df987948a86aa1ec4867907c59bdf431f13ed2270444bf47f788a5c7f92d","impliedFormat":1},{"version":"8018dd2e95e7ce6e613ddd81672a54532614dc745520a2f9e3860ff7fb1be0ca","impliedFormat":1},{"version":"b756781cd40d465da57d1fc6a442c34ae61fe8c802d752aace24f6a43fedacee","impliedFormat":1},{"version":"0fe76167c87289ea094e01616dcbab795c11b56bad23e1ef8aba9aa37e93432a","impliedFormat":1},{"version":"3a45029dba46b1f091e8dc4d784e7be970e209cd7d4ff02bd15270a98a9ba24b","impliedFormat":1},{"version":"032c1581f921f8874cf42966f27fd04afcabbb7878fa708a8251cac5415a2a06","impliedFormat":1},{"version":"69c68ed9652842ce4b8e495d63d2cd425862104c9fb7661f72e7aa8a9ef836f8","impliedFormat":1},{"version":"0e704ee6e9fd8b6a5a7167886f4d8915f4bc22ed79f19cb7b32bd28458f50643","impliedFormat":1},{"version":"06f62a14599a68bcde148d1efd60c2e52e8fa540cc7dcfa4477af132bb3de271","impliedFormat":1},{"version":"904a96f84b1bcee9a7f0f258d17f8692e6652a0390566515fe6741a5c6db8c1c","impliedFormat":1},{"version":"11f19ce32d21222419cecab448fa335017ebebf4f9e5457c4fa9df42fa2dcca7","impliedFormat":1},{"version":"2e8ee2cbb5e9159764e2189cf5547aebd0e6b0d9a64d479397bb051cd1991744","impliedFormat":1},{"version":"1b0471d75f5adb7f545c1a97c02a0f825851b95fe6e069ac6ecaa461b8bb321d","impliedFormat":1},{"version":"1d157c31a02b1e5cca9bc495b3d8d39f4b42b409da79f863fb953fbe3c7d4884","impliedFormat":1},{"version":"07baaceaec03d88a4b78cb0651b25f1ae0322ac1aa0b555ae3749a79a41cba86","impliedFormat":1},{"version":"619a132f634b4ebe5b4b4179ea5870f62f2cb09916a25957bff17b408de8b56d","impliedFormat":1},{"version":"f60fa446a397eb1aead9c4e568faf2df8068b4d0306ebc075fb4be16ed26b741","impliedFormat":1},{"version":"f3cb784be4d9e91f966a0b5052a098d9b53b0af0d341f690585b0cc05c6ca412","impliedFormat":1},{"version":"350f63439f8fe2e06c97368ddc7fb6d6c676d54f59520966f7dbbe6a4586014e","impliedFormat":1},{"version":"eba613b9b357ac8c50a925fa31dc7e65ff3b95a07efbaa684b624f143d8d34ba","impliedFormat":1},{"version":"45b74185005ed45bec3f07cac6e4d68eaf02ead9ff5a66721679fb28020e5e7c","impliedFormat":1},{"version":"0f6199602df09bdb12b95b5434f5d7474b1490d2cd8cc036364ab3ba6fd24263","impliedFormat":1},{"version":"c8ca7fd9ec7a3ec82185bfc8213e4a7f63ae748fd6fced931741d23ef4ea3c0f","impliedFormat":1},{"version":"5c6a8a3c2a8d059f0592d4eab59b062210a1c871117968b10797dee36d991ef7","impliedFormat":1},{"version":"ad77fd25ece8e09247040826a777dc181f974d28257c9cd5acb4921b51967bd8","impliedFormat":1},{"version":"795a08ae4e193f345073b49f68826ab6a9b280400b440906e4ec5c237ae777e6","impliedFormat":1},{"version":"8153df63cf65122809db17128e5918f59d6bb43a371b5218f4430c4585f64085","impliedFormat":1},{"version":"a8150bc382dd12ce58e00764d2366e1d59a590288ee3123af8a4a2cb4ef7f9df","impliedFormat":1},{"version":"5adfaf2f9f33957264ad199a186456a4676b2724ed700fc313ff945d03372169","impliedFormat":1},{"version":"d5c41a741cd408c34cb91f84468f70e9bda3dfeabf33251a61039b3cdb8b22d8","impliedFormat":1},{"version":"c91d3f9753a311284e76cdcb348cbb50bca98733336ec726b54d77b7361b34de","impliedFormat":1},{"version":"cbaf4a4aa8a8c02aa681c5870d5c69127974de29b7e01df570edec391a417959","impliedFormat":1},{"version":"c7135e329a18b0e712378d5c7bc2faec6f5ab0e955ea0002250f9e232af8b3e4","impliedFormat":1},{"version":"340a45cd77b41d8a6deda248167fa23d3dc67ec798d411bd282f7b3d555b1695","impliedFormat":1},{"version":"fae330f86bc10db6841b310f32367aaa6f553036a3afc426e0389ddc5566cd74","impliedFormat":1},{"version":"cf25d45c02d5fd5d7adb16230a0e1d6715441eef5c0a79a21bfeaa9bbc058939","impliedFormat":1},{"version":"54c3822eaf6436f2eddc92dd6e410750465aba218adbf8ce5d488d773919ec01","impliedFormat":1},{"version":"99d99a765426accf8133737843fb024a154dc6545fc0ffbba968a7c0b848959d","impliedFormat":1},{"version":"c782c5fd5fa5491c827ecade05c3af3351201dd1c7e77e06711c8029b7a9ee4d","impliedFormat":1},{"version":"883d2104e448bb351c49dd9689a7e8117b480b614b2622732655cef03021bf6d","impliedFormat":1},{"version":"d9b00ee2eca9b149663fdba1c1956331841ae296ee03eaaff6c5becbc0ff1ea8","impliedFormat":1},{"version":"09a7e04beb0547c43270b327c067c85a4e2154372417390731dfe092c4350998","impliedFormat":1},{"version":"eee530aaa93e9ec362e3941ee8355e2d073c7b21d88c2af4713e3d701dab8fef","impliedFormat":1},{"version":"28d47319b97dbeee9130b78eae03b2061d46dedbf92b0d9de13ed7ab8399ccd0","impliedFormat":1},{"version":"8b8b92781a6bf150f9ee83f3d8ee278b6cdb98b8308c7ab3413684fc5d9078ef","impliedFormat":1},{"version":"7a0e4cd92545ad03910fd019ae9838718643bd4dde39881c745f236914901dfa","impliedFormat":1},{"version":"c99ebd20316217e349004ee1a0bc74d32d041fb6864093f10f31984c737b8cad","impliedFormat":1},{"version":"6f622e7f054f5ab86258362ac0a64a2d6a27f1e88732d6f5f052f422e08a70e7","impliedFormat":1},{"version":"d62d2ef93ceeb41cf9dfab25989a1e5f9ca5160741aac7f1453c69a6c14c69be","impliedFormat":1},{"version":"1491e80d72873fc586605283f2d9056ee59b166333a769e64378240df130d1c9","impliedFormat":1},{"version":"c32c073d389cfaa3b3e562423e16c2e6d26b8edebbb7d73ccffff4aa66f2171d","impliedFormat":1},{"version":"eca72bf229eecadb63e758613c62fab13815879053539a22477d83a48a21cd73","impliedFormat":1},{"version":"633db46fd1765736409a4767bfc670861468dde60dbb9a501fba4c1b72f8644d","impliedFormat":1},{"version":"689390db63cb282e6d0e5ce9b8f1ec2ec0912d0e2e6dac7235699a15ad17d339","impliedFormat":1},{"version":"f2ee748883723aa9325e5d7f30fce424f6a786706e1b91a5a55237c78ee89c4a","impliedFormat":1},{"version":"d928324d17146fce30b99a28d1d6b48648feac72bbd23641d3ce5ac34aefdfee","impliedFormat":1},{"version":"142f5190d730259339be1433931c0eb31ae7c7806f4e325f8a470bd9221b6533","impliedFormat":1},{"version":"c33a88f2578e8df2fdf36c6a0482bbee615eb3234c8f084ba31a9a96bd306b7f","impliedFormat":1},{"version":"22cca068109eb0e6b4f8acc3fe638d1e6ac277e2044246438763319792b546a1","impliedFormat":1},{"version":"8776e64e6165838ac152fa949456732755b0976d1867ae5534ce248f0ccd7f41","impliedFormat":1},{"version":"66cd33c4151ea27f6e17c6071652eadde9da1b3637dae65fd060212211c695ce","impliedFormat":1},{"version":"5c4c5b49bbb01828402bb04af1d71673b18852c11b7e95bfd5cf4c3d80d352c8","impliedFormat":1},{"version":"7030df3d920343df00324df59dc93a959a33e0f4940af3fefef8c07b7ee329bf","impliedFormat":1},{"version":"a96bc00e0c356e29e620eaec24a56d6dd7f4e304feefcc99066a1141c6fe05a7","impliedFormat":1},{"version":"d12cc0e5b09943c4cd0848f787eb9d07bf78b60798e4588c50582db9d4decc70","impliedFormat":1},{"version":"53b094f1afe442490555eeeb0384fc1ceb487560c83e31f9c64fb934c2dccd94","impliedFormat":1},{"version":"19c3760af3cbc9da99d5b7763b9e33aaf8d018bc2ed843287b7ff4343adf4634","impliedFormat":1},{"version":"9d1e38aeb76084848d2fcd39b458ec88246de028c0f3f448b304b15d764b23d2","impliedFormat":1},{"version":"d406da1eccf18cec56fd29730c24af69758fe3ff49c4f94335e797119cbc0554","impliedFormat":1},{"version":"4898c93890a136da9156c75acd1a80a941a961b3032a0cf14e1fa09a764448b7","impliedFormat":1},{"version":"f5d7a845e3e1c6c27351ea5f358073d0b0681537a2da6201fab254aa434121d3","impliedFormat":1},{"version":"9ddf8e9069327faa75d20135cab675779844f66590249769c3d35dd2a38c2ba9","impliedFormat":1},{"version":"d7c30f0abfe9e197e376b016086cf66b2ffb84015139963f37301ed0da9d3d0d","impliedFormat":1},{"version":"ff75bba0148f07775bcb54bf4823421ed4ebdb751b3bf79cc003bd22e49d7d73","impliedFormat":1},{"version":"d40d20ac633703a7333770bfd60360126fc3302d5392d237bbb76e8c529a4f95","impliedFormat":1},{"version":"35a9867207c488061fb4f6fe4715802fbc164b4400018d2fa0149ad02db9a61c","impliedFormat":1},{"version":"91bf47a209ad0eae090023c3ebc1165a491cf9758799368ffcbee8dbe7448f33","impliedFormat":1},{"version":"0abe2cd72812bbfc509975860277c7cd6f6e0be95d765a9da77fee98264a7e32","impliedFormat":1},{"version":"13286c0c8524606b17a8d68650970bab896fb505f348f71601abf0f2296e8913","impliedFormat":1},{"version":"fc2a131847515b3dff2f0e835633d9a00a9d03ed59e690e27eec85b7b0522f92","impliedFormat":1},{"version":"90433c678bc26751eb7a5d54a2bb0a14be6f5717f69abb5f7a04afc75dce15a4","impliedFormat":1},{"version":"cd0565ace87a2d7802bf4c20ea23a997c54e598b9eb89f9c75e69478c1f7a0b4","impliedFormat":1},{"version":"738020d2c8fc9df92d5dee4b682d35a776eaedfe2166d12bc8f186e1ea57cc52","impliedFormat":1},{"version":"86dd7c5657a0b0bc6bee8002edcfd544458d3d3c60974555746eb9b2583dc35e","impliedFormat":1},{"version":"d97b96b6ecd4ee03f9f1170722c825ef778430a6a0d7aab03b8929012bf773cd","impliedFormat":1},{"version":"f61963dc02ef27c48fb0e0016a413b1e00bcb8b97a3f5d4473cedc7b44c8dc77","impliedFormat":1},{"version":"272dbfe04cfa965d6fff63fdaba415c1b5a515b1881ae265148f8a84ddeb318f","impliedFormat":1},{"version":"2035fb009b5fafa9a4f4e3b3fdb06d9225b89f2cbbf17a5b62413bf72cea721a","impliedFormat":1},{"version":"eefafec7c059f07b885b79b327d381c9a560e82b439793de597441a4e68d774a","impliedFormat":1},{"version":"72636f59b635c378dc9ea5246b9b3517b1214e340e468e54cb80126353053b2e","impliedFormat":1},{"version":"ebb79f267a3bf2de5f8edc1995c5d31777b539935fab8b7d863e8efb06c8e9ea","impliedFormat":1},{"version":"ada033e6a4c7f4e147e6d76bb881069dc66750619f8cc2472d65beeec1100145","impliedFormat":1},{"version":"0c04cc14a807a5dc0e3752d18a3b2655a135fefbf76ddcdabd0c5df037530d41","impliedFormat":1},{"version":"605d29d619180fbec287d1701e8b1f51f2d16747ec308d20aba3e9a0dac43a0f","impliedFormat":1},{"version":"67c19848b442d77c767414084fc571ce118b08301c4ddff904889d318f3a3363","impliedFormat":1},{"version":"c704ff0e0cb86d1b791767a88af21dadfee259180720a14c12baee668d0eb8fb","impliedFormat":1},{"version":"195c50e15d5b3ea034e01fbdca6f8ad4b35ad47463805bb0360bdffd6fce3009","impliedFormat":1},{"version":"da665f00b6877ae4adb39cd548257f487a76e3d99e006a702a4f38b4b39431cb","impliedFormat":1},{"version":"2b82adc9eead34b824a3f4dad315203fbfa56bee0061ccf9b485820606564f70","impliedFormat":1},{"version":"eb47aaa5e1b0a69388bb48422a991b9364a9c206a97983e0227289a9e1fca178","impliedFormat":1},{"version":"d7a4309673b06223537bc9544b1a5fe9425628e1c8ab5605f3c5ebc27ecb8074","impliedFormat":1},{"version":"db2108aea36e7faa83c38f6fe8225b9ad40835c0cba7fa38e969768299b83173","impliedFormat":1},{"version":"3eadfd083d40777b403f4f4eecfa40f93876f2a01779157cc114b2565a7afb51","impliedFormat":1},{"version":"cb6789ce3eba018d5a7996ccbf50e27541d850e9b4ee97fdcb3cbd8c5093691f","impliedFormat":1},{"version":"a3684ea9719122f9477902acd08cd363a6f3cff6d493df89d4dc12fa58204e27","impliedFormat":1},{"version":"2828dabf17a6507d39ebcc58fef847e111dcf2d51b8e4ff0d32732c72be032b3","impliedFormat":1},{"version":"c0c46113b4cd5ec9e7cf56e6dbfb3930ef6cbba914c0883eeced396988ae8320","impliedFormat":1},{"version":"118ea3f4e7b9c12e92551be0766706f57a411b4f18a1b4762cfde3cd6d4f0a96","impliedFormat":1},{"version":"2ad163aaddfa29231a021de6838f59378a210501634f125ed04cfa7d066ffc53","impliedFormat":1},{"version":"6305acbe492b9882ec940f8f0c8e5d1e1395258852f99328efcb1cf1683ca817","impliedFormat":1},{"version":"7619b1f6087a4e9336b2c42bd784b05aa4a2204a364b60171e5a628f817a381e","impliedFormat":1},{"version":"15be9120572c9fbcd3c267bd93b4140354514c9e70734e6fcca65ff4a246f83a","impliedFormat":1},{"version":"412482ab85893cec1d6f26231359474d1f59f6339e2743c08da1b05fc1d12767","impliedFormat":1},{"version":"858e2315e58af0d28fcd7f141a2505aba6a76fd10378ba0ad169b0336fee33fc","impliedFormat":1},{"version":"02da6c1b34f4ae2120d70cf5f9268bf1aedf62e55529d34f5974f5a93655ce38","impliedFormat":1},{"version":"3ecf179ef1cc28f7f9b46c8d2e496d50b542c176e94ed0147bab147b4a961cd6","impliedFormat":1},{"version":"b145da03ce7e174af5ced2cbbd16e96d3d5c2212f9a90d3657b63a5650a73b7f","impliedFormat":1},{"version":"c7aadab66a2bc90eeb0ab145ca4daebcbc038e24359263de3b40e7b1c7affba6","impliedFormat":1},{"version":"99518dc06286877a7b716e0f22c1a72d3c62be42701324b49f27bcc03573efff","impliedFormat":1},{"version":"f4575fd196a7e33c7be9773a71bcc5fbe7182a2152be909f6b8e8e7ba2438f06","impliedFormat":1},{"version":"05cba5acd77a4384389b9c62739104b5a1693efd66e6abac6c5ffc53280ae777","impliedFormat":1},{"version":"acacda82ebd929fe2fe9e31a37f193fc8498a7393a1c31dc5ceb656e2b45b708","impliedFormat":1},{"version":"1b13e7c5c58ab894fe65b099b6d19bb8afae6d04252db1bf55fe6ba95a0af954","impliedFormat":1},{"version":"4355d326c3129e5853b56267903f294ad03e34cc28b75f96b80734882dedac80","impliedFormat":1},{"version":"37139a8d45342c05b6a5aa1698a2e8e882d6dca5fb9a77aa91f05ac04e92e70b","impliedFormat":1},{"version":"e37191297f1234d3ae54edbf174489f9a3091a05fe959724db36f8e58d21fb17","impliedFormat":1},{"version":"3fca8fb3aab1bc7abb9b1420f517e9012fdddcbe18803bea2dd48fad6c45e92e","impliedFormat":1},{"version":"d0b0779e0cac4809a9a3c764ba3bd68314de758765a8e3b9291fe1671bfeb8a1","impliedFormat":1},{"version":"d2116b5f989aa68e585ae261b9d6d836be6ed1be0b55b47336d9f3db34674e86","impliedFormat":1},{"version":"d79a227dd654be16d8006eac8b67212679d1df494dfe6da22ea0bd34a13e010c","impliedFormat":1},{"version":"b9c89b4a2435c171e0a9a56668f510a376cb7991eaecef08b619e6d484841735","impliedFormat":1},{"version":"44a298a6c52a7dab8e970e95a6dabe20972a7c31c340842e0dc57f2c822826eb","impliedFormat":1},{"version":"6a79b61f57699de0a381c8a13f4c4bcd120556bfab0b4576994b6917cb62948b","impliedFormat":1},{"version":"c5133d7bdec65f465df12f0b507fbc0d96c78bfa5a012b0eb322cf1ff654e733","impliedFormat":1},{"version":"00b9ff040025f6b00e0f4ac8305fea1809975b325af31541bd9d69fa3b5e57b1","impliedFormat":1},{"version":"9f96b9fd0362a7bfe6a3aa70baa883c47ae167469c904782c99ccc942f62f0dc","impliedFormat":1},{"version":"54d91053dc6a2936bfd01a130cc3b524e11aa0349da082e8ac03a8bf44250338","impliedFormat":1},{"version":"89049878a456b5e0870bb50289ea8ece28a2abd0255301a261fa8ab6a3e9a07d","impliedFormat":1},{"version":"55ae9554811525f24818e19bdc8779fa99df434be7c03e5fc47fa441315f0226","impliedFormat":1},{"version":"24abac81e9c60089a126704e936192b2309413b40a53d9da68dadd1dd107684e","impliedFormat":1},{"version":"f13310c360ecffddb3858dcb33a7619665369d465f55e7386c31d45dfc3847bf","impliedFormat":1},{"version":"e7bde95a05a0564ee1450bc9a53797b0ac7944bf24d87d6f645baca3aa60df48","impliedFormat":1},{"version":"62e68ce120914431a7d34232d3eca643a7ddd67584387936a5202ae1c4dd9a1b","impliedFormat":1},{"version":"91d695bba902cc2eda7edc076cd17c5c9340f7bb254597deb6679e343effadbb","impliedFormat":1},{"version":"e1cb8168c7e0bd4857a66558fe7fe6c66d08432a0a943c51bacdac83773d5745","impliedFormat":1},{"version":"a464510505f31a356e9833963d89ce39f37a098715fc2863e533255af4410525","impliedFormat":1},{"version":"ebbe6765a836bfa7f03181bc433c8984ca29626270ca1e240c009851222cb8a7","impliedFormat":1},{"version":"ac10457b51ee4a3173b7165c87c795eadd094e024f1d9f0b6f0c131126e3d903","impliedFormat":1},{"version":"468df9d24a6e2bc6b4351417e3b5b4c2ca08264d6d5045fe18eb42e7996e58b4","impliedFormat":1},{"version":"954523d1f4856180cbf79b35bd754e14d3b2aea06c7efd71b254c745976086e9","impliedFormat":1},{"version":"a8af4739274959d70f7da4bfdd64f71cfc08d825c2d5d3561bc7baed760b33ef","impliedFormat":1},{"version":"090fda1107e7d4f8f30a2b341834ed949f01737b5ec6021bb6981f8907330bdb","impliedFormat":1},{"version":"cc32874a27100c32e3706d347eb4f435d6dd5c0d83e547c157352f977bbc6385","impliedFormat":1},{"version":"e45b069d58c9ac341d371b8bc3db4fa7351b9eee1731bffd651cfc1eb622f844","impliedFormat":1},{"version":"7f3c74caad25bfb6dfbf78c6fe194efcf8f79d1703d785fc05cd606fe0270525","impliedFormat":1},{"version":"54f3f7ff36384ca5c9e1627118b43df3014b7e0f62c9722619d19cdb7e43d608","impliedFormat":1},{"version":"2f346f1233bae487f1f9a11025fc73a1bf9093ee47980a9f4a75b84ea0bb7021","impliedFormat":1},{"version":"013444d0b8c1f7b5115462c31573a699fee7458381b0611062a0069d3ef810e8","impliedFormat":1},{"version":"0612b149cabbc136cb25de9daf062659f306b67793edc5e39755c51c724e2949","impliedFormat":1},{"version":"2579b150b86b5f644d86a6d58f17e3b801772c78866c34d41f86f3fc9eb523fe","impliedFormat":1},{"version":"0353e05b0d8475c10ddd88056e0483b191aa5cdea00a25e0505b96e023f1a2d9","impliedFormat":1},{"version":"8c4df93dafcf06adc42a63477cc38b352565a3ed0a19dd8ef7dfacc253749327","impliedFormat":1},{"version":"22a35275abc67f8aba44efc52b2f4b1abc2c94e183d36647fdab5a5e7c1bdf23","impliedFormat":1},{"version":"99193bafaa9ce112889698de25c4b8c80b1209bb7402189aea1c7ada708a8a54","impliedFormat":1},{"version":"70473538c6eb9494d53bf1539fe69df68d87c348743d8f7244dcb02ca3619484","impliedFormat":1},{"version":"c48932ab06a4e7531bdca7b0f739ace5fa273f9a1b9009bcd26902f8c0b851f0","impliedFormat":1},{"version":"df6c83e574308f6540c19e3409370482a7d8f448d56c65790b4ac0ab6f6fedd8","impliedFormat":1},{"version":"32f19b665839b1382b21afc41917cda47a56e744cd3df9986b13a72746d1c522","impliedFormat":1},{"version":"8db1ed144dd2304b9bd6e41211e22bad5f4ab1d8006e6ac127b29599f4b36083","impliedFormat":1},{"version":"843a5e3737f2abbbbd43bf2014b70f1c69a80530814a27ae1f8be213ae9ec222","impliedFormat":1},{"version":"6fc1be224ad6b3f3ec11535820def2d21636a47205c2c9de32238ba1ac8d82e6","impliedFormat":1},{"version":"5a44788293f9165116c9c183be66cefef0dc5d718782a04847de53bf664f3cc1","impliedFormat":1},{"version":"afd653ae63ce07075b018ba5ce8f4e977b6055c81cc65998410b904b94003c0a","impliedFormat":1},{"version":"9172155acfeb17b9d75f65b84f36cb3eb0ff3cd763db3f0d1ad5f6d10d55662f","impliedFormat":1},{"version":"71807b208e5f15feffb3ff530bec5b46b1217af0d8cc96dde00d549353bcb864","impliedFormat":1},{"version":"1a6eca5c2bc446481046c01a54553c3ffb856f81607a074f9f0256c59dd0ab13","impliedFormat":1},{"version":"6990f2fb809692c89ecee29660a7680543246d0aee7bfc6756a1047a9918cc29","impliedFormat":1},{"version":"b84b0deafa5845fd2f21e49945eec5642fc74616f4b324e32e1f5bdf84a0eb54","impliedFormat":1},{"version":"8ccf5843249a042f4553a308816fe8a03aa423e55544637757d0cfa338bb5186","impliedFormat":1},{"version":"d8ec19be7d6d3950992c3418f3a4aa2bcad144252bd7c0891462b5879f436e4e","impliedFormat":1},{"version":"884cd5093164bd0d95afa8854b426df08997a085668f123992ec1bb8eb2accc1","impliedFormat":1},{"version":"1b33478647aa1b771314745807397002a410c746480e9447db959110999873ce","impliedFormat":1},{"version":"b8ad793dc17938bc462812e3522bbd3d62519d91d9b4a6422bed1383c2d3eb42","impliedFormat":1},{"version":"8b0b6a4c032a56d5651f7dd02ba3f05fbfe4131c4095093633cda3cae0991972","impliedFormat":1},{"version":"ff3c48a17bf10dfbb62448152042e4a48a56c9972059997ab9e7ed03b191809b","impliedFormat":1},{"version":"192a0c215bffe5e4ac7b9ff1e90e94bf4dfdad4f0f69a5ae07fccc36435ebb87","impliedFormat":1},{"version":"3ef8565e3d254583cced37534f161c31e3a8f341ff005c98b582c6d8c9274538","impliedFormat":1},{"version":"d7e42a3800e287d2a1af8479c7dd58c8663e80a01686cb89e0068be6c777d687","impliedFormat":1},{"version":"1098034333d3eb3c1d974435cacba9bd5a625711453412b3a514774fec7ca748","impliedFormat":1},{"version":"f2388b97b898a93d5a864e85627e3af8638695ebfa6d732ecd39d382824f0e63","impliedFormat":1},{"version":"6c6bd91368169cfa94b4f8cc64ebca2b050685ec76bc4082c44ce125b5530cca","impliedFormat":1},{"version":"f477375e6f0bf2a638a71d4e7a3da8885e3a03f3e5350688541d136b10b762a6","impliedFormat":1},{"version":"a44d6ea4dc70c3d789e9cef3cc42b79c78d17d3ce07f5fd278a7e1cbe824da56","impliedFormat":1},{"version":"272af80940fcc0c8325e4a04322c50d11f8b8842f96ac66cbd440835e958dd14","impliedFormat":1},{"version":"1803e48a3ec919ccafbcafeef5e410776ca0644ae8c6c87beca4c92d8a964434","impliedFormat":1},{"version":"875c43c5409e197e72ee517cb1f8fd358406b4adf058dbdc1e50c8db93d68f26","impliedFormat":1},{"version":"8854713984b9588eac1cab69c9e2a6e1a33760d9a2d182169059991914dd8577","impliedFormat":1},{"version":"e333d487ca89f26eafb95ea4b59bea8ba26b357e9f2fd3728be81d999f9e8cf6","impliedFormat":1},{"version":"2f554c6798b731fc39ff4e3d86aadc932fdeaa063e3cbab025623ff5653c0031","impliedFormat":1},{"version":"fe4613c6c0d23edc04cd8585bdd86bc7337dc6265fb52037d11ca19eeb5e5aaf","impliedFormat":1},{"version":"53b26fbee1a21a6403cf4625d0e501a966b9ccf735754b854366cee8984b711c","impliedFormat":1},{"version":"c503be3ddb3990ab27ca20c6559d29b547d9f9413e05d2987dd7c4bcf52f3736","impliedFormat":1},{"version":"598b15f0ae9a73082631d14cb8297a1285150ca325dbce98fc29c4f0b7079443","impliedFormat":1},{"version":"8c59d8256086ed17676139ee43c1155673e357ab956fb9d00711a7cac73e059d","impliedFormat":1},{"version":"cfe88132f67aa055a3f49d59b01585fa8d890f5a66a0a13bb71973d57573eee7","impliedFormat":1},{"version":"53ce488a97f0b50686ade64252f60a1e491591dd7324f017b86d78239bd232ca","impliedFormat":1},{"version":"50fd11b764194f06977c162c37e5a70bcf0d3579bf82dd4de4eee3ac68d0f82f","impliedFormat":1},{"version":"e0ceb647dcdf6b27fd37e8b0406c7eafb8adfc99414837f3c9bfd28ffed6150a","impliedFormat":1},{"version":"99579aa074ed298e7a3d6a47e68f0cd099e92411212d5081ce88344a5b1b528d","impliedFormat":1},{"version":"c94c1aa80687a277396307b80774ca540d0559c2f7ba340168c2637c82b1f766","impliedFormat":1},{"version":"ce7dbf31739cc7bca35ca50e4f0cbd75cd31fd6c05c66841f8748e225dc73aaf","impliedFormat":1},{"version":"942ab34f62ac3f3d20014615b6442b6dc51815e30a878ebc390dd70e0dec63bf","impliedFormat":1},{"version":"7a671bf8b4ad81b8b8aea76213ca31b8a5de4ba39490fbdee249fc5ba974a622","impliedFormat":1},{"version":"8e07f13fb0f67e12863b096734f004e14c5ebfd34a524ed4c863c80354c25a44","impliedFormat":1},{"version":"6f6bdb523e5162216efc36ebba4f1ef8e845f1a9e55f15387df8e85206448aee","impliedFormat":1},{"version":"aa2d6531a04d6379318d29891de396f61ccc171bfd2f8448cc1649c184becdf2","impliedFormat":1},{"version":"d422f0c340060a53cb56d0db24dd170e31e236a808130ab106f7ab2c846f1cdb","impliedFormat":1},{"version":"424403ef35c4c97a7f00ea85f4a5e2f088659c731e75dbe0c546137cb64ef8d8","impliedFormat":1},{"version":"16900e9a60518461d7889be8efeca3fe2cbcd3f6ce6dee70fea81dfbf8990a76","impliedFormat":1},{"version":"6daf17b3bd9499bd0cc1733ab227267d48cd0145ed9967c983ccb8f52eb72d6e","impliedFormat":1},{"version":"e4177e6220d0fef2500432c723dbd2eb9a27dcb491344e6b342be58cc1379ec0","impliedFormat":1},{"version":"ab710f1ee2866e473454a348cffd8d5486e3c07c255f214e19e59a4f17eece4d","impliedFormat":1},{"version":"db7ff3459e80382c61441ea9171f183252b6acc82957ecb6285fff4dca55c585","impliedFormat":1},{"version":"4a168e11fe0f46918721d2f6fcdb676333395736371db1c113ae30b6fde9ccd2","impliedFormat":1},{"version":"2a899aef0c6c94cc3537fe93ec8047647e77a3f52ee7cacda95a8c956d3623fb","impliedFormat":1},{"version":"ef2c1585cad462bdf65f2640e7bcd75cd0dbc45bae297e75072e11fe3db017fa","impliedFormat":1},{"version":"6a52170a5e4600bbb47a94a1dd9522dca7348ce591d8cdbb7d4fe3e23bbea461","impliedFormat":1},{"version":"6f6eadb32844b0ec7b322293b011316486894f110443197c4c9fbcba01b3b2fa","impliedFormat":1},{"version":"a51e08f41e3e948c287268a275bfe652856a10f68ddd2bf3e3aaf5b8cdb9ef85","impliedFormat":1},{"version":"16c144a21cd99926eeba1605aec9984439e91aa864d1c210e176ca668f5f586a","impliedFormat":1},{"version":"af48a76b75041e2b3e7bd8eed786c07f39ea896bb2ff165e27e18208d09b8bee","impliedFormat":1},{"version":"fd4107bd5c899165a21ab93768904d5cfb3e98b952f91fbf5a12789a4c0744e6","impliedFormat":1},{"version":"deb092bc337b2cb0a1b14f3d43f56bc663e1447694e6d479d6df8296bdd452d6","impliedFormat":1},{"version":"041bc1c3620322cb6152183857601707ef6626e9d99f736e8780533689fb1bf9","impliedFormat":1},{"version":"77165b117f552be305d3bc2ef83424ff1e67afb22bfabd14ebebb3468c21fcaa","impliedFormat":1},{"version":"128e7c2ffd37aa29e05367400d718b0e4770cefb1e658d8783ec80a16bc0643a","impliedFormat":1},{"version":"076ac4f2d642c473fa7f01c8c1b7b4ef58f921130174d9cf78430651f44c43ec","impliedFormat":1},{"version":"396c1e5a39706999ec8cc582916e05fcb4f901631d2c192c1292e95089a494d9","impliedFormat":1},{"version":"89df75d28f34fc698fe261f9489125b4e5828fbd62d863bbe93373d3ed995056","impliedFormat":1},{"version":"93b44aa4a7b27ba57d9e2bad6fb7943956de85c5cc330d2c3e30cd25b4583d44","impliedFormat":1},{"version":"a0c6216075f54cafdfa90412596b165ff85e2cadd319c49557cc8410f487b77c","impliedFormat":1},{"version":"3c359d811ec0097cba00fb2afd844b125a2ddf4cad88afaf864e88c8d3d358bd","impliedFormat":1},{"version":"db37aa3208b48bdcbc27c0c1ae3d1b86c0d5159e65543e8ab79cbfb37b1f2f34","impliedFormat":1},{"version":"d62f09256941e92a95b78ae2267e4cf5ff2ca8915d62b9561b1bc85af1baf428","impliedFormat":1},{"version":"e6223b7263dd7a49f4691bf8df2b1e69f764fb46972937e6f9b28538d050b1ba","impliedFormat":1},{"version":"2daf06d8e15cbca27baa6c106253b92dad96afd87af9996cf49a47103b97dc95","impliedFormat":1},{"version":"1db014db736a09668e0c0576585174dbcfd6471bb5e2d79f151a241e0d18d66b","impliedFormat":1},{"version":"8a153d30edde9cefd102e5523b5a9673c298fc7cf7af5173ae946cbb8dd48f11","impliedFormat":1},{"version":"abaaf8d606990f505ee5f76d0b45a44df60886a7d470820fcfb2c06eafa99659","impliedFormat":1},{"version":"8109e0580fc71dbefd6091b8825acf83209b6c07d3f54c33afeafab5e1f88844","impliedFormat":1},{"version":"d92a80c2c05cf974704088f9da904fe5eadc0b3ad49ddd1ef70ca8028b5adda1","impliedFormat":1},{"version":"fbd7450f20b4486c54f8a90486c395b14f76da66ba30a7d83590e199848f0660","impliedFormat":1},{"version":"ece5b0e45c865645ab65880854899a5422a0b76ada7baa49300c76d38a530ee1","impliedFormat":1},{"version":"62d89ac385aeab821e2d55b4f9a23a277d44f33c67fefe4859c17b80fdb397ea","impliedFormat":1},{"version":"f4dee11887c5564886026263c6ee65c0babc971b2b8848d85c35927af25da827","impliedFormat":1},{"version":"fb8dd49a4cd6d802be4554fbab193bb06e2035905779777f32326cb57cf6a2c2","impliedFormat":1},{"version":"df29ade4994de2d9327a5f44a706bbe6103022a8f40316839afa38d3e078ee06","impliedFormat":1},{"version":"82d3e00d56a71fc169f3cf9ec5f5ffcc92f6c0e67d4dfc130dafe9f1886d5515","impliedFormat":1},{"version":"d38f45cb868a830d130ac8b87d3f7e8caff4961a3a1feae055de5e538e20879a","impliedFormat":1},{"version":"4c30a5cb3097befb9704d16aa4670e64e39ea69c5964a1433b9ffd32e1a5a3a1","impliedFormat":1},{"version":"7b3a5e25bf3c51af55cb2986b89949317aa0f6cbfb5317edd7d4037fa52219a9","impliedFormat":1},{"version":"3cd50f6a83629c0ec330fc482e587bfa96532d4c9ce85e6c3ddf9f52f63eee11","impliedFormat":1},{"version":"9fac6ebf3c60ced53dd21def30a679ec225fc3ff4b8d66b86326c285a4eebb5a","impliedFormat":1},{"version":"8cb83cb98c460cd716d2a98b64eb1a07a3a65c7362436550e02f5c2d212871d1","impliedFormat":1},{"version":"07bc8a3551e39e70c38e7293b1a09916867d728043e352b119f951742cb91624","impliedFormat":1},{"version":"e47adc2176f43c617c0ab47f2d9b2bb1706d9e0669bf349a30c3fe09ddd63261","impliedFormat":1},{"version":"7fec79dfd7319fec7456b1b53134edb54c411ba493a0aef350eee75a4f223eeb","impliedFormat":1},{"version":"189c489705bb96a308dcde9b3336011d08bfbca568bcaf5d5d55c05468e9de7a","impliedFormat":1},{"version":"98f4b1074567341764b580bf14c5aabe82a4390d11553780814f7e932970a6f7","impliedFormat":1},{"version":"dadfa5fd3d5c511ca6bfe240243b5cf2e0f87e44ea63e23c4b2fce253c0d4601","impliedFormat":1},{"version":"2e252235037a2cd8feebfbf74aa460f783e5d423895d13f29a934d7655a1f8be","impliedFormat":1},{"version":"763f4ac187891a6d71ae8821f45eef7ff915b5d687233349e2c8a76c22b3bf2a","impliedFormat":1},{"version":"fc892a9c766a171ee80ae5f90cdb1276a509a10bb8a9cc4ade22a637cd849eab","impliedFormat":1},{"version":"36575bacee68738975db0d0c1443298906e1a9de846543de8087adf2417137bb","impliedFormat":1},{"version":"052bfda778ba1d93404739c42f8c8be8c8f35bb4df1f05740542de9c8786000e","impliedFormat":1},{"version":"db114ef2aba1c12605774caca9a12f389e23a084f007662129450c669da9e981","impliedFormat":1},{"version":"927c6cf84c59b3ca7fdb6d3cbc3aa986193337b6a9758994575106f6073ee737","impliedFormat":1},{"version":"0a33b8bff876368beef794f5f08e8221103efa394f9e0e27e19f557a8cdaa0a0","impliedFormat":1},{"version":"752e6696e63e0b45d33fe38d250fdde73dc3a8173f387003023171b469cb8129","signature":"4680ff663adb1e0efe6fde0b68d06a4affccc5694d95fb248c130b3427b7310b"},{"version":"8ed536c0b72f565ffe28a9e4c343139c18607a92e41104572b91b0e0224ed20f","signature":"53123bc95d236d2bcefcda34a1a45afb36db5bf44c31804e4151da1040ea4744"},{"version":"21247c958d397091ec30e63b27294baa1d1434c333da4fda697743190311dc62","impliedFormat":1},{"version":"73197e8f9d1eae945b7393e399bbdfa649f40cd7338d8a85a0e82e2d5a457303","impliedFormat":1},{"version":"d5eb5865d4cbaa9985cc3cfb920b230cdcf3363f1e70903a08dc4baab80b0ce1","impliedFormat":1},{"version":"51ebca098538b252953b1ef83c165f25b52271bfb6049cd09d197dddd4cd43c5","impliedFormat":1},{"version":"ebae4490e805b2c6fbb74ccd483611140c9883f03c6c83894034e6e252715612","signature":"8326627f9624f5916e8ab8fd9de320a0d84941eb82744ffd681270806d3bc98a"},{"version":"dff93e0997c4e64ff29e9f70cad172c0b438c4f58c119f17a51c94d48164475a","impliedFormat":1},{"version":"fd1ddf926b323dfa439be49c1d41bbe233fe5656975a11183aeb3bf2addfa3bb","impliedFormat":1},{"version":"6dda11db28da6bcc7ff09242cd1866bdddd0ae91e2db3bea03ba66112399641a","impliedFormat":1},{"version":"ea4cd1e72af1aa49cf208b9cb4caf542437beb7a7a5b522f50a5f1b7480362ed","impliedFormat":1},{"version":"903a7d68a222d94da11a5a89449fdd5dd75d83cd95af34c0242e10b85ec33a93","impliedFormat":1},{"version":"e7fe2e7ed5c3a7beff60361632be19a8943e53466b7dd69c34f89faf473206d7","impliedFormat":1},{"version":"b4896cee83379e159f83021e262223354db79e439092e485611163e2082224ff","impliedFormat":1},{"version":"5243e79a643e41d9653011d6c66e95048fc0478eb8593dc079b70877a2e3990e","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"ab41ef1f2cdafb8df48be20cd969d875602483859dc194e9c97c8a576892c052","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"49a5a44f2e68241a1d2bd9ec894535797998841c09729e506a7cbfcaa40f2180","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"4d2b0eb911816f66abe4970898f97a2cfc902bcd743cbfa5017fad79f7ef90d8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"e53a3c2a9f624d90f24bf4588aacd223e7bec1b9d0d479b68d2f4a9e6011147f","impliedFormat":1},{"version":"24b8685c62562f5d98615c5a0c1d05f297cf5065f15246edfe99e81ec4c0e011","impliedFormat":1},{"version":"93507c745e8f29090efb99399c3f77bec07db17acd75634249dc92f961573387","impliedFormat":1},{"version":"339dc5265ee5ed92e536a93a04c4ebbc2128f45eeec6ed29f379e0085283542c","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"8d31155317e3cceb916d113be587617534034977bc364687235cdf4c7bd87e31","affectsGlobalScope":true,"impliedFormat":1},{"version":"6b042aa5d277ad6963e2837179fd2f8fbb01968ac67115b0833c0244e93d1d50","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"8c0bcd6c6b67b4b503c11e91a1fb91522ed585900eab2ab1f61bba7d7caa9d6f","impliedFormat":1},{"version":"9e025aa38cad40827cc30aca974fe33fe2c4652fe8c88f48dadbbbd6300c8b07","affectsGlobalScope":true,"impliedFormat":1},{"version":"f3e58c4c18a031cbb17abec7a4ad0bd5ae9fc70c1f4ba1e7fb921ad87c504aca","impliedFormat":1},{"version":"84c1930e33d1bb12ad01bcbe11d656f9646bd21b2fb2afd96e8e10615a021aef","impliedFormat":1},{"version":"35ec8b6760fd7138bbf5809b84551e31028fb2ba7b6dc91d95d098bf212ca8b4","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"4b87f767c7bc841511113c876a6b8bf1fd0cb0b718c888ad84478b372ec486b1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d04e3640dd9eb67f7f1e5bd3d0bf96c784666f7aefc8ac1537af6f2d38d4c29","impliedFormat":1},{"version":"008e4cac37da1a6831aa43f6726da0073957ae89da2235082311eaf479b2ffa5","impliedFormat":1},{"version":"5a369483ac4cfbdf0331c248deeb36140e6907db5e1daed241546b4a2055f82c","impliedFormat":1},{"version":"e8f5b5cc36615c17d330eaf8eebbc0d6bdd942c25991f96ef122f246f4ff722f","impliedFormat":1},{"version":"f0bd7e6d931657b59605c44112eaf8b980ba7f957a5051ed21cb93d978cf2f45","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"0ada07543808f3b967624645a8e1ccd446f8b01ade47842acf1328aec899fed0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4c21aaa8257d7950a5b75a251d9075b6a371208fc948c9c8402f6690ef3b5b55","impliedFormat":1},{"version":"b5895e6353a5d708f55d8685c38a235c3a6d8138e374dee8ceb8ffde5aa8002a","impliedFormat":1},{"version":"b9b859f6e245c3c39ec85e65ab1b1ffe43473b75eaae16fe64f44c2d6832173e","impliedFormat":1},{"version":"93bd413918fa921c8729cef45302b24d8b6c7855d72d5bf82d3972595ae8dcbf","impliedFormat":1},{"version":"4ff41188773cbf465807dd2f7059c7494cbee5115608efc297383832a1150c43","impliedFormat":1},{"version":"dccdf1677e531e33f8ac961a68bc537418c9a414797c1ea7e91307501cdc3f5e","impliedFormat":1},{"version":"e184c4b8918ef56c8c9e68bd79f3f3780e2d0d75bf2b8a41da1509a40c2deb46","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3114a0b8ab879b52767d1225cb8420ec99a827e5f744dbeb4900afc08c3e341","impliedFormat":1},{"version":"93f437e1398a4f06a984f441f7fa7a9f0535c04399619b5c22e0b87bdee182cb","impliedFormat":1},{"version":"afbe24ab0d74694372baa632ecb28bb375be53f3be53f9b07ecd7fc994907de5","impliedFormat":1},{"version":"70731d10d5311bd4cf710ef7f6539b62660f4b0bfdbb3f9fbe1d25fe6366a7fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"6b19db3600a17af69d4f33d08cc7076a7d19fb65bb36e442cac58929ec7c9482","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e043a1bc8fbf2a255bccf9bf27e0f1caf916c3b0518ea34aa72357c0afd42ec","impliedFormat":1},{"version":"b4f70ec656a11d570e1a9edce07d118cd58d9760239e2ece99306ee9dfe61d02","impliedFormat":1},{"version":"3bc2f1e2c95c04048212c569ed38e338873f6a8593930cf5a7ef24ffb38fc3b6","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"f9d9d753d430ed050dc1bf2667a1bab711ccbb1c1507183d794cc195a5b085cc","impliedFormat":1},{"version":"9eece5e586312581ccd106d4853e861aaaa1a39f8e3ea672b8c3847eedd12f6e","impliedFormat":1},{"version":"ba1f814c22fd970255ddd60d61fb7e00c28271c933ab5d5cc19cd3ca66b8f57c","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"0dbcebe2126d03936c70545e96a6e41007cf065be38a1ce4d32a39fcedefead4","affectsGlobalScope":true,"impliedFormat":1},{"version":"1851a3b4db78664f83901bb9cac9e45e03a37bb5933cc5bf37e10bb7e91ab4eb","impliedFormat":1},{"version":"09d479208911ac3ac6a7c2fe86217fc1abe6c4f04e2d52e4890e500699eeab32","affectsGlobalScope":true,"impliedFormat":1},{"version":"12ed4559eba17cd977aa0db658d25c4047067444b51acfdcbf38470630642b23","affectsGlobalScope":true,"impliedFormat":1},{"version":"f3ffabc95802521e1e4bcba4c88d8615176dc6e09111d920c7a213bdda6e1d65","impliedFormat":1},{"version":"c40b3d3cfbb1227c8935f681c2480a32b560e387dd771d329cdbd1641f2d6da5","impliedFormat":1},{"version":"ae56f65caf3be91108707bd8dfbccc2a57a91feb5daabf7165a06a945545ed26","impliedFormat":1},{"version":"a136d5de521da20f31631a0a96bf712370779d1c05b7015d7019a9b2a0446ca9","impliedFormat":1},{"version":"5b566927cad2ed2139655d55d690ffa87df378b956e7fe1c96024c4d9f75c4cf","affectsGlobalScope":true,"impliedFormat":1},{"version":"c4a3720550d1787c8d6284040853c0781ff1e2cd8d842f2cb44547525ee34c36","affectsGlobalScope":true,"impliedFormat":1},{"version":"d3dffd70e6375b872f0b4e152de4ae682d762c61a24881ecc5eb9f04c5caf76f","impliedFormat":1},{"version":"fe5748232eaa52bbfd7ce314e52b246871731c5f41318fdaf6633cb14fa20da0","impliedFormat":1},{"version":"d91a7d8b5655c42986f1bdfe2105c4408f472831c8f20cf11a8c3345b6b56c8c","impliedFormat":1},{"version":"616075a6ac578cf5a013ee12964188b4412823796ce0b202c6f1d2e4ca8480d7","affectsGlobalScope":true,"impliedFormat":1},{"version":"e8a979b8af001c9fc2e774e7809d233c8ca955a28756f52ee5dee88ccb0611d2","impliedFormat":1},{"version":"cac793cc47c29e26e4ac3601dcb00b4435ebed26203485790e44f2ad8b6ad847","impliedFormat":1},{"version":"08bb8fb1430620b088894ecbb0a6cb972f963d63911bb3704febfa0d3a2f6ea5","impliedFormat":1},{"version":"5e4631f04c72971410015548c8137d6b007256c071ec504de385372033fec177","impliedFormat":1},{"version":"eb234b3e285e8bc071bdddc1ec0460095e13ead6222d44b02c4e0869522f9ba3","impliedFormat":1},{"version":"ce4e58f029088cc5f0e6e7c7863f6ace0bc04c2c4be7bc6730471c2432bd5895","impliedFormat":1},{"version":"018421260380d05df31b567b90368e1eacf22655b2b8dc2c11e0e76e5fd8978f","impliedFormat":1},{"version":"ef803dca265d6ba37f97b46e21c66d055a3007f71c1995d9ef15d4a07b0d2ad0","impliedFormat":1},{"version":"3d4adf825b7ac087cfbf3d54a7dc16a3959877bb4f5080e14d5e9d8d6159eba8","impliedFormat":1},{"version":"f9e034b1ae29825c00532e08ea852b0c72885c343ee48d2975db0a6481218ab3","impliedFormat":1},{"version":"1193f49cbb883f40326461fe379e58ffa4c18d15bf6d6a1974ad2894e4fb20f3","impliedFormat":1},{"version":"8f1241f5d9f0d3d72117768b3c974e462840fbd85026fb66685078945404cf2f","impliedFormat":1},{"version":"ed850ed13659f20c9717d79d6c37f7c1aaa99eeb69f66785a83e35f05a3539e6","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"47937375e097fc9eb186b75a71aeaad6f1dcaa2715eb17e3a9e2e68258937161","signature":"51df08bd1aba1c77ad96dc27e7657955fcfc4ca354f03100850545e93f6ff276"},{"version":"cb5eaaa2a079305b1c5344af739b29c479746f7a7aefffc7175d23d8b7c8dbb0","impliedFormat":1},{"version":"bd324dccada40f2c94aaa1ebc82b11ce3927b7a2fe74a5ab92b431d495a86e6f","impliedFormat":1},{"version":"56749bf8b557c4c76181b2fd87e41bde2b67843303ae2eabb299623897d704d6","impliedFormat":1},{"version":"5a6fbec8c8e62c37e9685a91a6ef0f6ecaddb1ee90f7b2c2b71b454b40a0d9a6","impliedFormat":1},{"version":"e7435f2f56c50688250f3b6ef99d8f3a1443f4e3d65b4526dfb31dfd4ba532f8","impliedFormat":1},{"version":"6fc56a681a637069675b2e11b4aa105efe146f7a88876f23537e9ea139297cf9","impliedFormat":1},{"version":"33b7f4106cf45ae7ccbb95acd551e9a5cd3c27f598d48216bda84213b8ae0c7e","impliedFormat":1},{"version":"176d6f604b228f727afb8e96fd6ff78c7ca38102e07acfb86a0034d8f8a2064a","impliedFormat":1},{"version":"1b1a02c54361b8c222392054648a2137fc5983ad5680134a653b1d9f655fe43d","impliedFormat":1},{"version":"8bcb884d06860a129dbffa3500d51116d9d1040bb3bf1c9762eb2f1e7fd5c85c","impliedFormat":1},{"version":"e55c0f31407e1e4eee10994001a4f570e1817897a707655f0bbe4d4a66920e9e","impliedFormat":1},{"version":"a37c2194c586faa8979f50a5c5ca165b0903d31ee62a9fe65e4494aa099712c0","impliedFormat":1},{"version":"6602339ddc9cd7e54261bda0e70fb356d9cdc10e3ec7feb5fa28982f8a4d9e34","impliedFormat":1},{"version":"7ffaa736b8a04b0b8af66092da536f71ef13a5ef0428c7711f32b94b68f7c8c8","impliedFormat":1},{"version":"7b4930d666bbe5d10a19fcc8f60cfa392d3ad3383b7f61e979881d2c251bc895","impliedFormat":1},{"version":"46342f04405a2be3fbfb5e38fe3411325769f14482b8cd48077f2d14b64abcfb","impliedFormat":1},{"version":"8fa675c4f44e6020328cf85fdf25419300f35d591b4f56f56e00f9d52b6fbb3b","impliedFormat":1},{"version":"ba98f23160cfa6b47ee8072b8f54201f21a1ee9addc2ef461ebadf559fe5c43a","impliedFormat":1},{"version":"45a4591b53459e21217dc9803367a651e5a1c30358a015f27de0b3e719db816b","impliedFormat":1},{"version":"9ef22bee37885193b9fae7f4cad9502542c12c7fe16afe61e826cdd822643d84","impliedFormat":1},{"version":"b0451895b894c102eed19d50bd5fcb3afd116097f77a7d83625624fafcca8939","impliedFormat":1},{"version":"bce17120b679ff4f1be70f5fe5c56044e07ed45f1e555db6486c6ded8e1da1c8","impliedFormat":1},{"version":"7590477bfa2e309e677ff7f31cb466f377fcd0e10a72950439c3203175309958","impliedFormat":1},{"version":"3f9ebd554335d2c4c4e7dc67af342d37dc8f2938afa64605d8a93236022cc8a5","impliedFormat":1},{"version":"1c077c9f6c0bc02a36207994a6e92a8fbf72d017c4567f640b52bf32984d2392","impliedFormat":1},{"version":"600b42323925b32902b17563654405968aa12ee39e665f83987b7759224cc317","impliedFormat":1},{"version":"32c8f85f6b4e145537dfe61b94ddd98b47dbdd1d37dc4b7042a8d969cd63a1aa","impliedFormat":1},{"version":"2426ed0e9982c3d734a6896b697adf5ae93d634b73eb15b48da8106634f6d911","impliedFormat":1},{"version":"057431f69d565fb44c246f9f64eac09cf309a9af7afb97e588ebef19cc33c779","impliedFormat":1},{"version":"960d026ca8bf27a8f7a3920ee50438b50ec913d635aa92542ca07558f9c59eca","impliedFormat":1},{"version":"71f5d895cc1a8a935c40c070d3d0fade53ae7e303fd76f443b8b541dee19a90c","impliedFormat":1},{"version":"252eb4750d0439d1674ad0dc30d2a2a3e4655e08ad9e58a7e236b21e78d1d540","impliedFormat":1},{"version":"e344b4a389bb2dfa98f144f3f195387a02b6bdb69deed4a96d16cc283c567778","impliedFormat":1},{"version":"c6cdcd12d577032b84eed1de4d2de2ae343463701a25961b202cff93989439fb","impliedFormat":1},{"version":"203d75f653988a418930fb16fda8e84dea1fac7e38abdaafd898f257247e0860","impliedFormat":1},{"version":"c5b3da7e2ecd5968f723282aba49d8d1a2e178d0afe48998dad93f81e2724091","impliedFormat":1},{"version":"efd2860dc74358ffa01d3de4c8fa2f966ae52c13c12b41ad931c078151b36601","impliedFormat":1},{"version":"09acacae732e3cc67a6415026cfae979ebe900905500147a629837b790a366b3","impliedFormat":1},{"version":"f7b622759e094a3c2e19640e0cb233b21810d2762b3e894ef7f415334125eb22","impliedFormat":1},{"version":"99236ea5c4c583082975823fd19bcce6a44963c5c894e20384bc72e7eccf9b03","impliedFormat":1},{"version":"f6688a02946a3f7490aa9e26d76d1c97a388e42e77388cbab010b69982c86e9e","impliedFormat":1},{"version":"9f642953aba68babd23de41de85d4e97f0c39ef074cb8ab8aa7d55237f62aff6","impliedFormat":1},{"version":"529ac413f6eada3a1780c4050f4d4853488fc00652f45101737863e9ac519bff","impliedFormat":1},{"version":"2d2ec3235e01474f45a68f28cf826c2f5228b79f7d474d12ca3604cdcfdac80c","impliedFormat":1},{"version":"6dd249868034c0434e170ba6e0451d67a0c98e5a74fd57a7999174ee22a0fa7b","impliedFormat":1},{"version":"9716553c72caf4ff992be810e650707924ec6962f6812bd3fbdb9ac3544fd38f","impliedFormat":1},{"version":"506bc8f4d2d639bebb120e18d3752ddeee11321fd1070ad2ce05612753c628d6","impliedFormat":1},{"version":"053c51bbc32db54be396654ab5ecd03a66118d64102ac9e22e950059bc862a5e","impliedFormat":1},{"version":"1977f62a560f3b0fc824281fd027a97ce06c4b2d47b408f3a439c29f1e9f7e10","impliedFormat":1},{"version":"627570f2487bd8d899dd4f36ecb20fe0eb2f8c379eff297e24caba0c985a6c43","impliedFormat":1},{"version":"0f6e0b1a1deb1ab297103955c8cd3797d18f0f7f7d30048ae73ba7c9fb5a1d89","impliedFormat":1},{"version":"0a051f254f9a16cdde942571baab358018386830fed9bdfff42478e38ba641ce","impliedFormat":1},{"version":"17269f8dfc30c4846ab7d8b5d3c97ac76f50f33de96f996b9bf974d817ed025b","impliedFormat":1},{"version":"9e82194af3a7d314ccbc64bb94bfb62f4bfea047db3422a7f6c5caf2d06540a9","impliedFormat":1},{"version":"083d6f3547ccbf25dfa37b950c50bee6691ed5c42107f038cc324dbca1e173ae","impliedFormat":1},{"version":"952a9eab21103b79b7a6cca8ad970c3872883aa71273f540285cad360c35da40","impliedFormat":1},{"version":"8ba48776335db39e0329018c04486907069f3d7ee06ce8b1a6134b7d745271cc","impliedFormat":1},{"version":"e6d5809e52ed7ef1860d1c483e005d1f71bab36772ef0fd80d5df6db1da0e815","impliedFormat":1},{"version":"893e5cfbae9ed690b75b8b2118b140665e08d182ed8531e1363ec050905e6cb2","impliedFormat":1},{"version":"6ae7c7ada66314a0c3acfbf6f6edf379a12106d8d6a1a15bd35bd803908f2c31","impliedFormat":1},{"version":"e4b1e912737472765e6d2264b8721995f86a463a1225f5e2a27f783ecc013a7b","impliedFormat":1},{"version":"97146bbe9e6b1aab070510a45976faaf37724c747a42d08563aeae7ba0334b4f","impliedFormat":1},{"version":"c40d552bd2a4644b0617ec2f0f1c58618a25d098d2d4aa7c65fb446f3c305b54","impliedFormat":1},{"version":"09e64dea2925f3a0ef972d7c11e7fa75fec4c0824e9383db23eacf17b368532f","impliedFormat":1},{"version":"424ddba00938bb9ae68138f1d03c669f43556fc3e9448ed676866c864ca3f1d6","impliedFormat":1},{"version":"a0fe12181346c8404aab9d9a938360133b770a0c08b75a2fce967d77ca4b543f","impliedFormat":1},{"version":"3cc6eb7935ff45d7628b93bb6aaf1a32e8cb3b24287f9e75694b607484b377b3","impliedFormat":1},{"version":"ced02e78a2e10f89f4d70440d0a8de952a5946623519c54747bc84214d644bac","impliedFormat":1},{"version":"efd463021ccc91579ed8ae62584176baab2cd407c555c69214152480531a2072","impliedFormat":1},{"version":"29647c3b79320cfeecb5862e1f79220e059b26db2be52ea256df9cf9203fb401","impliedFormat":1},{"version":"e8cdefd2dc293cb4866ee8f04368e7001884650bb0f43357c4fe044cc2e1674f","impliedFormat":1},{"version":"582a3578ebba9238eb0c5d30b4d231356d3e8116fea497119920208fb48ccf85","impliedFormat":1},{"version":"185eae4a1e8a54e38f36cd6681cfa54c975a2fc3bc2ba6a39bf8163fac85188d","impliedFormat":1},{"version":"0c0a02625cf59a0c7be595ccc270904042bea523518299b754c705f76d2a6919","impliedFormat":1},{"version":"c44fc1bbdb5d1c8025073cb7c5eab553aa02c069235a1fc4613cd096d578ab80","impliedFormat":1},{"version":"cee72255e129896f0240ceb58c22e207b83d2cc81d8446190d1b4ef9b507ccd6","impliedFormat":1},{"version":"3b54670e11a8d3512f87e46645aa9c83ae93afead4a302299a192ac5458aa586","impliedFormat":1},{"version":"c2fc4d3a130e9dc0e40f7e7d192ef2494a39c37da88b5454c8adf143623e5979","impliedFormat":1},{"version":"2e693158fc1eedba3a5766e032d3620c0e9c8ad0418e4769be8a0f103fdb52cd","impliedFormat":1},{"version":"516275ccf3e66dc391533afd4d326c44dd750345b68bb573fc592e4e4b74545f","impliedFormat":1},{"version":"07c342622568693847f6cb898679402dd19740f815fd43bec996daf24a1e2b85","impliedFormat":1},{"version":"4d9bffaca7e0f0880868bab5fd351f9e4d57fcc6567654c4c330516fea7932aa","impliedFormat":1},{"version":"b42201db6adb94eeee965e8b8a5c24ce4a3fe78ebb89bbfd2d94bf2897af5134","impliedFormat":1},{"version":"89968316b7069339433bd42d53fe56df98b6990783dfe00c9513fb4bd01c2a1c","impliedFormat":1},{"version":"a4096686f982f6977433ee9759ecbef49da29d7e6a5d8278f0fbc7b9f70fce12","impliedFormat":1},{"version":"62e62a477c56cda719013606616dd856cfdc37c60448d0feb53654860d3113bb","impliedFormat":1},{"version":"207c107dd2bd23fa9febac2fe05c7c72cdac02c3f57003ab2e1c6794a6db0c05","impliedFormat":1},{"version":"55133e906c4ddabecdfcbc6a2efd4536a3ac47a8fa0a3fe6d0b918cac882e0d4","impliedFormat":1},{"version":"2147f8d114cf58c05106c3dccea9924d069c69508b5980ed4011d2b648af2ffe","impliedFormat":1},{"version":"2eb4012a758b9a7ba9121951d7c4b9f103fe2fc626f13bec3e29037bb9420dc6","impliedFormat":1},{"version":"fe61f001bd4bd0a374daa75a2ba6d1bb12c849060a607593a3d9a44e6b1df590","impliedFormat":1},{"version":"cfe8221c909ad721b3da6080570553dea2f0e729afbdbcf2c141252cf22f39b5","impliedFormat":1},{"version":"34e89249b6d840032b9acdec61d136877f84f2cd3e3980355b8a18f119809956","impliedFormat":1},{"version":"6f36ff8f8a898184277e7c6e3bf6126f91c7a8b6a841f5b5e6cb415cfc34820e","impliedFormat":1},{"version":"4b6378c9b1b3a2521316c96f5c777e32a1b14d05b034ccd223499e26de8a379c","impliedFormat":1},{"version":"07be5ae9bf5a51f3d98ffcfacf7de2fe4842a7e5016f741e9fad165bb929be93","impliedFormat":1},{"version":"cb1b37eda1afc730d2909a0f62cac4a256276d5e62fea36db1473981a5a65ab1","impliedFormat":1},{"version":"195f855b39c8a6e50eb1f37d8f794fbd98e41199dffbc98bf629506b6def73d7","impliedFormat":1},{"version":"471386a0a7e4eb88c260bdde4c627e634a772bf22f830c4ec1dad823154fd6f5","impliedFormat":1},{"version":"108314a60f3cb2454f2d889c1fb8b3826795399e5d92e87b2918f14d70c01e69","impliedFormat":1},{"version":"d75cc838286d6b1260f0968557cd5f28495d7341c02ac93989fb5096deddfb47","impliedFormat":1},{"version":"d531dc11bb3a8a577bd9ff83e12638098bfc9e0856b25852b91aac70b0887f2a","impliedFormat":1},{"version":"19968b998a2ab7dfd39de0c942fc738b2b610895843fec25477bc393687babd8","impliedFormat":1},{"version":"c0e6319f0839d76beed6e37b45ec4bb80b394d836db308ae9db4dea0fe8a9297","impliedFormat":1},{"version":"1a7b11be5c442dab3f4af9faf20402798fddf1d3c904f7b310f05d91423ba870","impliedFormat":1},{"version":"079d3f1ddcaf6c0ff28cfc7851b0ce79fcd694b3590afa6b8efa6d1656216924","impliedFormat":1},{"version":"2c817fa37b3d2aa72f01ce4d3f93413a7fbdecafe1b9fb7bd7baaa1bbd46eb08","impliedFormat":1},{"version":"682203aed293a0986cc2fccc6321d862742b48d7359118ac8f36b290d28920d2","impliedFormat":1},{"version":"7406d75a4761b34ce126f099eafe6643b929522e9696e5db5043f4e5c74a9e40","impliedFormat":1},{"version":"7e9c4e62351e3af1e5e49e88ebb1384467c9cd7a03c132a3b96842ccdc8045c4","impliedFormat":1},{"version":"ea1f9c60a912065c08e0876bd9500e8fa194738855effb4c7962f1bfb9b1da86","impliedFormat":1},{"version":"903f34c920e699dacbc483780b45d1f1edcb1ebf4b585a999ece78e403bb2db3","impliedFormat":1},{"version":"100ebfd0470433805c43be5ae377b7a15f56b5d7181c314c21789c4fe9789595","impliedFormat":1},{"version":"12533f60d36d03d3cf48d91dc0b1d585f530e4c9818a4d695f672f2901a74a86","impliedFormat":1},{"version":"21d9968dad7a7f021080167d874b718197a60535418e240389d0b651dd8110e7","impliedFormat":1},{"version":"2ef7349b243bce723d67901991d5ad0dfc534da994af61c7c172a99ff599e135","impliedFormat":1},{"version":"fa103f65225a4b42576ae02d17604b02330aea35b8aaf889a8423d38c18fa253","impliedFormat":1},{"version":"1b9173f64a1eaee88fa0c66ab4af8474e3c9741e0b0bd1d83bfca6f0574b6025","impliedFormat":1},{"version":"1b212f0159d984162b3e567678e377f522d7bee4d02ada1cc770549c51087170","impliedFormat":1},{"version":"46bd71615bdf9bfa8499b9cfce52da03507f7140c93866805d04155fa19caa1b","impliedFormat":1},{"version":"86cb49eb242fe19c5572f58624354ffb8743ff0f4522428ebcabc9d54a837c73","impliedFormat":1},{"version":"fc2fb9f11e930479d03430ee5b6588c3788695372b0ab42599f3ec7e78c0f6d5","impliedFormat":1},{"version":"bb1e5cf70d99c277c9f1fe7a216b527dd6bd2f26b307a8ab65d24248fb3319f5","impliedFormat":1},{"version":"817547eacf93922e22570ba411f23e9164544dead83e379c7ae9c1cfc700c2cf","impliedFormat":1},{"version":"a728478cb11ab09a46e664c0782610d7dd5c9db3f9a249f002c92918ca0308f7","impliedFormat":1},{"version":"9e91ef9c3e057d6d9df8bcbfbba0207e83ef9ab98aa302cf9223e81e32fdfe8d","impliedFormat":1},{"version":"66d30ef7f307f95b3f9c4f97e6c1a5e4c462703de03f2f81aca8a1a2f8739dbd","impliedFormat":1},{"version":"293ca178fd6c23ed33050052c6544c9d630f9d3b11d42c36aa86218472129243","impliedFormat":1},{"version":"90a4be0e17ba5824558c38c93894e7f480b3adf5edd1fe04877ab56c56111595","impliedFormat":1},{"version":"fadd55cddab059940934df39ce2689d37110cfe37cc6775f06b0e8decf3092d7","impliedFormat":1},{"version":"91324fe0902334523537221b6c0bef83901761cfd3bd1f140c9036fa6710fa2b","impliedFormat":1},{"version":"b4f3b4e20e2193179481ab325b8bd0871b986e1e8a8ed2961ce020c2dba7c02d","impliedFormat":1},{"version":"41744c67366a0482db029a21f0df4b52cd6f1c85cbc426b981b83b378ccb6e65","impliedFormat":1},{"version":"c3f3cf7561dd31867635c22f3c47c8491af4cfa3758c53e822a136828fc24e5d","impliedFormat":1},{"version":"a88ddea30fae38aa071a43b43205312dc5ff86f9e21d85ba26b14690dc19d95e","impliedFormat":1},{"version":"b5b2d0510e5455234016bbbaba3839ca21adbc715d1b9c3d6dede7d411a28545","impliedFormat":1},{"version":"5515f17f45c6aafe6459afa3318bba040cb466a8d91617041566808a5fd77a44","impliedFormat":1},{"version":"4df1f0c17953b0450aa988c9930061f8861b114e1649e1a16cfd70c5cbdf8d83","impliedFormat":1},{"version":"441104b363d80fe57eb79a50d495e0b7e3ebeb45a5f0d1a4067d71ef75e8fbfa","impliedFormat":1},"a24e353dbf5a93fb13ef96433697faf1b795415ce065634f2d41dba5093fba4b","0b266da97aefa7f01a372538abda22420a88792f98b3de61407db05814a49c0d","105a83531661110f00a992af79e6ff0695e09d47bcea7a75c4b4d054b7815822","00d4bafa170004ca2271f5338a8f64dadb946370a01c09a592ba086dc27fc1a0",{"version":"be81d1128123c38859b147918c0ee20fd74aac665cb8b4b52a72529cf103674f","signature":"a5d10d1d92ede95e4e67cd48389beb9875ab11e0ab7c9afb7dbef248dada86b7"},{"version":"a3d3f704c5339a36da3ca8c62b29072f87e86c783b8452d235992142ec71aa2d","impliedFormat":1},{"version":"d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","impliedFormat":1},{"version":"293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","impliedFormat":1},{"version":"54f6ec6ea75acea6eb23635617252d249145edbc7bcd9d53f2d70280d2aef953","impliedFormat":1},{"version":"c25ce98cca43a3bfa885862044be0d59557be4ecd06989b2001a83dcf69620fd","impliedFormat":1},{"version":"8e71e53b02c152a38af6aec45e288cc65bede077b92b9b43b3cb54a37978bb33","impliedFormat":1},{"version":"754a9396b14ca3a4241591afb4edc644b293ccc8a3397f49be4dfd520c08acb3","impliedFormat":1},{"version":"f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","impliedFormat":1},{"version":"e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","impliedFormat":1},{"version":"de2316e90fc6d379d83002f04ad9698bc1e5285b4d52779778f454dd12ce9f44","impliedFormat":1},{"version":"25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","impliedFormat":1},{"version":"b004b3c5e264455f82c17e41eae9aa677b669171ff199148c202042bd6a3bdd2","impliedFormat":1},{"version":"5d26d2e47e2352def36f89a3e8bf8581da22b7f857e07ef3114cd52cf4813445","impliedFormat":1},{"version":"3db2efd285e7328d8014b54a7fce3f4861ebcdc655df40517092ed0050983617","impliedFormat":1},{"version":"d5d39a24c759df40480a4bfc0daffd364489702fdbcbdfc1711cde34f8739995","impliedFormat":1},"acecefa34a550f7df18c63f36f531ea5735ed3955d24d0a396e058139c724348","33ff0b5a255e0137097c96d38c260d7dd83d73fb2788d2bceaa28cec9f03f1f9",{"version":"3498737e2a8835761e106afbaf1e8ef1a0666a136a8bc82d26e821994d74240c","signature":"57b7e6245777fded4df6e20a099bc8e4016e2b0c760bb3d0925fcddedbf164e8"},{"version":"625b72575a76f990970738e268f2c956d2b3d509acb15d80331589eff5f32aae","signature":"9e5e7b48e41b25b0026a527bb59588a0a521ec360ee42416ffe032124ebab451"},{"version":"077945979c46b2a39afffb3a07b70188f79a4b4b5100a7d9de09bfe919caefed","signature":"aa1725e38b5a0b4009f6a74f296f173e7926c119a60454dbd2e523861735df69"},{"version":"abd6ccdaae9905ea2ec85488fdce744930862327633eebd40d429511f6a1d5da","impliedFormat":1},{"version":"4669b2a774cd3e5fbe0760dfe8b02b31f9301b5a3fefba896bca3cd4de334708","impliedFormat":1},{"version":"7c14e702387296711c1a829bc95052ff02f533d4aa27d53cc0186c795094a3a9","impliedFormat":1},{"version":"4c72d080623b3dcd8ebd41f38f7ac7804475510449d074ca9044a1cbe95517ae","impliedFormat":1},{"version":"579f8828da42ae02db6915a0223d23b0da07157ff484fecdbf8a96fffa0fa4df","impliedFormat":1},{"version":"279f097303c870a7ce213952224f7a66ae511741299e683e500f63646f6ebf08","impliedFormat":1},{"version":"3ae3b86c48ae3b092e5d5548acbf4416b427fed498730c227180b5b1a8aa86e3","impliedFormat":1},{"version":"8f1241f5d9f0d3d72117768b3c974e462840fbd85026fb66685078945404cf2f","impliedFormat":1},{"version":"fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","impliedFormat":1},{"version":"818e7c86776c67f49dbd781d445e13297b59aa7262e54b065b1332d7dcc6f59a","impliedFormat":1},{"version":"d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","impliedFormat":1},{"version":"b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","impliedFormat":1},{"version":"baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","impliedFormat":1},{"version":"2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed","impliedFormat":1},{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true,"impliedFormat":1},{"version":"b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","impliedFormat":1},{"version":"0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a","impliedFormat":1},{"version":"104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","impliedFormat":1},{"version":"cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","impliedFormat":1},{"version":"86ea91bfa7fef1eeb958056f30f1db4e0680bc9b5132e5e9d6e9cfd773c0c4fd","affectsGlobalScope":true,"impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"ff155930718467b27e379e4a195e4607ce277f805cad9d2fa5f4fd5dec224df6","affectsGlobalScope":true,"impliedFormat":1},{"version":"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"03c92769f389dbd9e45232f7eb01c3e0f482b62555aaf2029dcbf380d5cee9e4","impliedFormat":1},{"version":"32d7f70fd3498bc76a46dab8b03af4215f445f490f8e213c80cf06b636a4e413","impliedFormat":1},{"version":"ba63131c5e91f797736444933af16ffa42f9f8c150d859ec65f568f037a416ea","impliedFormat":1},{"version":"44372b8b42e8916b0ab379da38dcf4de11227bad4221aba3e2dbe718999bdfab","impliedFormat":1},{"version":"43ebfcc5a9e9a9306ea4de9fda3abdd9e018040e246434b48ad56d93b14d4a3d","impliedFormat":1},{"version":"0e9aa853b5eb2ca09e0e3e3eb94cbd1d5fb3d682ab69817d4d11fe225953fc57","impliedFormat":1},{"version":"179683df1e78572988152d598f44297da79ac302545770710bba87563ce53e06","impliedFormat":1},{"version":"793c353144f16601da994fa4e62c09b7525836ce999c44f69c28929072ca206a","impliedFormat":1},{"version":"599ac4a84b7aa6a298731179ec1663a623ff8ac324cdc1dabb9c73c1259dc854","impliedFormat":1},{"version":"95c2ab3597d7d38e990bf212231a6def6f6af7e3d12b3bb1b67c15fc8bfd4f4a","impliedFormat":1},{"version":"585bc61f439c027640754dd26e480afa202f33e51db41ee283311a59c12c62e7","impliedFormat":1},{"version":"8f1241f5d9f0d3d72117768b3c974e462840fbd85026fb66685078945404cf2f","impliedFormat":1},{"version":"cc8701b189e4af93ee1a54a1f6e72eb02b1a8ddfa24ee73c912221a5dc982c5f","signature":"0de84aa08adedf293dad839a637792daa5e312e62ad1ff0b5486c91b21103ad1"},{"version":"59903cfdad93d1367615bb34684cb3b5fed23688ba1775b0ba10bedf9237cbc2","signature":"1a506582cb9122197c7e81839f86752c525f759c4aa97112f16884ad2686f0c4"},{"version":"7d2b7fe4adb76d8253f20e4dbdce044f1cdfab4902ec33c3604585f553883f7d","impliedFormat":1},{"version":"e3880367d195aef46c31107ea766ac86fb9e5fc11e855cc4d25cc4114e5c59c7","signature":"73fb329e01ac36992a640dbdeb5a43b1fab076175985a679a8d934f8b1b8c3f5"},{"version":"ef8401ab8e2bc5e6be85663a1465c5d60754dfee6018676f165238914d10b5ab","signature":"9116cbf32650ce234338c6f8395ecb044d06f6d939f2f6ca6d21335f4e663b71"},{"version":"fe4d42ceae379d15af604049b980a287574a771a5db2b01376f18105f6d177d4","signature":"aa1c955db73a9aad9dabfd13af51b83c40bad13b70261075c5cfbcf7d054ae30"},{"version":"4f0424b7c6857793498a6e60041af2a38658e8193a403a701574e80df50a360a","impliedFormat":1},{"version":"034856eb35ba68a5b7190db2d8e743cc640996545b7200e6766e86b27a2fd527","impliedFormat":1},{"version":"adb4283721e37317d30627d9c31404e46a6bb0174e5806c43c59d08d8d91ea67","impliedFormat":1},{"version":"ec379d84f25c38ceaaa81715fd1b6a0b3a000386ea41155969dc49f88eab33ef","impliedFormat":1},{"version":"d02329b04183e4f319fd78e5726375b2154d4eab6ec90ee3706b4090f94d3d99","impliedFormat":1},{"version":"81477bb2c9b97a9dd5ce7750ab4ae655e74172f0d536d637be345ba76b41cd92","impliedFormat":1},{"version":"cb5b0d51a7c42a3916d839e1ee149bcc18ffb9037f29636510fa433ff65684ca","impliedFormat":1},{"version":"b7d85dc2de8db4ca983d848c8cfad6cf4d743f8cb35afe1957bedf997c858052","impliedFormat":1},{"version":"83daad5d7ae60a0aede88ea6b9e40853abcbe279c10187342b25e96e35bc9f78","impliedFormat":1},{"version":"c39ddfb764058d817d0e8c4044363950edb075fa52ab0054d09dec01c5ec7267","impliedFormat":1},{"version":"3dffa83b578e67fcbfd7965c5ecb72476a293f9224608e17e0bca0eef53eb6b4","impliedFormat":1},{"version":"f7a5ab7b54bdc6a13cf1015e1b5d6eeb31d765d54045281bfeefcdfcc982a37c","impliedFormat":1},{"version":"39eaec2510829bd8503fd25defd6477575b08abd1e73bd12a73a4b1fa2ceb213","impliedFormat":1},{"version":"c9170aaac9149ca2a733230b20790dd02212b3a2ed880a696bca69a5f21f6fd2","signature":"234be12937bccf13b8f194674711d454b69ba856e3cc71969a406ed820db84ea"},{"version":"ffa125aebea0616fe68aa1e6fc684b859baa37bb166457b520eb73bed66213e2","signature":"6c7c3ad0d8503662be36fcb84f9283282ba9b4d18d038963d29594b723cd9059"},{"version":"95d9f96ed1dbd0b3c1fd43b13780b3338a8ece26fc3327f35e3a343c57b5a84d","signature":"24a24c0324e53e350a7c0f293ecb8c5d30beffde131e5f8e8de3ce12bb04c194"},{"version":"ed89444d9d6df29a3afce4854ec3bb225943a5e73ab3d42a0a816ae56edf6f94","signature":"8d1260ac0ee4dc2a2b885c71f225b0c967cb47b54fd41e4a38f6439dcba7810b"},{"version":"c75fa8fadd0404a4b5dfa3456fe0419cb02bb9e41db2eeb1aaff4abfe397fc14","signature":"a73a033a2f783f1d11a4b26cbd2f9131cd99513d44ed3c9afaec81fe5463845c"},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"17668c1aab598920796050ee5a00d961ede5e92595f6ac8908a975ed75a537e5","impliedFormat":1},{"version":"2422ee2f778bb5a0e99c32054fbfdaabf8a530cd8532a32e1d15208b2d44d3c6","signature":"8946bded236cfb3164cd38c49d38b720272465393200182ba310e43363d5636f"},{"version":"c34133574c99cd8678cd8502d27eb3a80cd205d83a07eb8560138056022e3b20","signature":"a28b5c0c372fb375910b3fe3c3ce4331509bc18ccef7cc39c9ee9d8daf8225d1"},{"version":"d95f6226b441e71b392905cf6a64af25c3ee77e77339467264c510b5995658c3","signature":"c25dc6cf0da95a43596b2bde16723bc488cb99d3bfde7f945a07442c43d730a6"},{"version":"06eacd96f42443422fb3f53911f276c59985a0ab5727983e5baee3dce3bca486","signature":"9e55d69c2879e4c1f6039d177c0daf79a72435ac51ec7d4f46fc72e8b0c503d6"},{"version":"6ecc423e71318bafbd230e6059e082c377170dfc7e02fccfa600586f8604d452","impliedFormat":1},{"version":"772f9bdd2bf50c9c01b0506001545e9b878faa7394ad6e7d90b49b179a024584","impliedFormat":1},{"version":"f204b03cb07517d71715ac8bc7552542bfab395adb53e31c07fbc67de6856de1","impliedFormat":1},{"version":"7467736a77548887faa90a7d0e074459810a5db4bbc6de302a2be6c05287ccae","impliedFormat":1},{"version":"39504a2c1278ee4d0dc1a34e27c80e58b4c53c08c87e3a7fc924f18c936bebb5","impliedFormat":1},{"version":"cd1ccdd9fd7980d43dfede5d42ee3d18064baed98b136089cf7c8221d562f058","impliedFormat":1},{"version":"d60f9a4fd1e734e7b79517f02622426ea1000deb7d6549dfdece043353691a4e","impliedFormat":1},{"version":"403d28b5e5f8fcff795ac038902033ec5890143e950af45bd91a3ed231e8b59c","impliedFormat":1},{"version":"c73b59f91088c00886d44ca296d53a75c263c3bda31e3b2f37ceb137382282be","impliedFormat":1},{"version":"e7aa2c584edb0970cb4bb01eb10344200286055f9a22bc3dadcc5a1f9199af3e","impliedFormat":1},{"version":"bfeb476eb0049185cb94c2bfcadb3ce1190554bbcf170d2bf7c68ed9bb00458e","impliedFormat":1},{"version":"ae23a65a2b664ffe979b0a2a98842e10bdf3af67a356f14bbc9d77eb3ab13585","impliedFormat":1},{"version":"eccf6ad2a8624329653896e8dbd03f30756cbd902a81b5d3942d6cf0e1a21575","impliedFormat":1},{"version":"1930c964051c04b4b5475702613cd5a27fcc2d33057aa946ff52bfca990dbc84","impliedFormat":1},{"version":"2793d525d79404df346e4ef58a82f9b6d28a7650beeb17378cd121c45ba03f02","impliedFormat":1},{"version":"62463aa3d299ae0cdc5473d2ac32213a05753c3adce87a8801c6d2b114a64116","impliedFormat":1},{"version":"c9c2eabaad71c534d7de16385977f95184fdf3ddd0339dadbd5d599488d94f90","impliedFormat":1},{"version":"d0642c453e6af4c0700182bec4afc5b2cc9498fe27c9b1bcf2e6f75dd1892699","impliedFormat":1},{"version":"8f4469dd750d15f72ba66876c8bc429d3c9ce49599a13f868a427d6681d45351","impliedFormat":1},{"version":"d1e888a33faeb1f0e3c558bbe0ea4a55056318e0b2f8eba72ffd6729c3bbff4e","impliedFormat":1},{"version":"f689c0633e8c95f550d36af943d775f3fae3dac81a28714b45c7af0bbb76a980","impliedFormat":1},{"version":"fef736cfb404b4db9aa942f377dbbac6edb76d18aabd3b647713fa75da8939e9","impliedFormat":1},{"version":"45659c92e49dfca4601acc7e57fbb03a71513c69768984baf86ead8d20387a01","impliedFormat":1},{"version":"0239d8f6a3f51b26cbdbb9362f4fde35651c6bd0ff3d9fc09ee4a2da6065cb4e","impliedFormat":1},{"version":"6e5ab399ec7bd61d4f86421cc6074fd904379c3923706c899d15146e4f9a08c8","impliedFormat":1},{"version":"c9ffec02582eed74f518ae3e32a5dcf4ac835532e548300c5c5f950cdfeead5f","impliedFormat":1},{"version":"df343f5de08f5b607a3c7954ff1b512b7fa983d561e136cce0b6dc6849602a15","impliedFormat":1},{"version":"8fc97ef271771dc6f81a9c846d007ac4f0cb5779e3f441c1de54dfda5046fe7b","impliedFormat":1},{"version":"b5a060e2a4c54695076f871ddc0c91a0ff8eea1262177c4ede5593acbf1ca3bb","impliedFormat":1},{"version":"08ee70765d3fa7c5bad4afbbe1c542771e17f84bfd5e3e872ae1fdc5160836c8","impliedFormat":1},{"version":"1c225a18846203fafc4334658715b0d3fd3ee842c4cfd42e628a535eda17730d","impliedFormat":1},{"version":"7ce93da38595d1caf57452d57e0733474564c2b290459d34f6e9dcf66e2d8beb","impliedFormat":1},{"version":"d7b672c1c583e9e34ff6df2549d6a55d7ca3adaf72e6a05081ea9ee625dac59f","impliedFormat":1},{"version":"f3a2902e84ebdef6525ed6bf116387a1256ea9ae8eeb36c22f070b7c9ea4cf09","impliedFormat":1},{"version":"33bb0d96cea9782d701332e6b7390f8efae3af92fd3e2aa2ac45e4a610e705d6","impliedFormat":1},{"version":"ae3e98448468e46474d817b5ebe74db11ab22c2feb60e292d96ce1a4ee963623","impliedFormat":1},{"version":"f0a2fdee9e801ac9320a8660dd6b8a930bf8c5b658d390ae0feafdba8b633688","impliedFormat":1},{"version":"7beb7f04f6186bdac5e622d44e4cac38d9f2b9fcad984b10d3762e369524dd77","impliedFormat":1},{"version":"8f1241f5d9f0d3d72117768b3c974e462840fbd85026fb66685078945404cf2f","impliedFormat":1},{"version":"d1d6e09a51e1c000ef3ca76ef096cb8ae901690fd0ee19679e9d9280ecd0f304","signature":"7ff7d0f06650eedf7c8b7bc5c0aee785f400940ec9e48026a3f7ee19ca962f62"},{"version":"037259f205cada692a39c224a8a3b90f96849afeb3032b92b001212cd4be3b98","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"d023752daf2a5c2e27a2a850aedc10a48a42fb507dceae37db91dc8294aafdec","impliedFormat":1},{"version":"bd61a00b150635b14813cceba3fa797df93cdbd5bd0d445fc419580b990042bf","signature":"294aa89857186184b594efaed091cf1b1ba0d7fb623c64e3218eaf96676b7f1d"},{"version":"28629c3abd038b6eabc6113f21aecabdc054ce49d39f11e358ae6565d319f9ab","signature":"788b2651281fb34c84c26cd65ef742d8baa9e2efe9d6838297831f5a81dfbe8b"},{"version":"421e56e634135d75f4e010a4618a834306cddf85d4b046d4c19e47bc0364b996","signature":"f6472235e47d129744f98eb7990ba6beec5d1ae1a6daa8882318d3dfbfd8de34"},{"version":"6e781aead05bc52c878a9f760055a0a8df31646dde27a8f1e054f2301d62d452","signature":"39bc55f98ce0af880ae6ab8db5efdfd93e873217f5d67edef91881984bcec22e"},{"version":"d9a958126cc325419b277a469268581d5b8aca1aff7197971e7abab8deef092e","signature":"6525ba306b1880cc8580165724286abd7a677cc4cf36f8e699092e575beb938d"},"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",{"version":"e43b68770b6035ccd38fa9f3706ddbe8dd4188ae8e2afd082148142b030d38a6","signature":"1d5f824cdef96a60fd70ea62d6b3a7d92768e3108a6ea07179a077668fe3b15c"},{"version":"65743188c07fff4c2c8e0d31166e3586f22170d168b1a279bff87e21b210eee5","signature":"09cfc3465531969ed8ffa4855bdf215ddb4d0e8ec4698c5921f8d43452b7add0"},{"version":"1eb30c93dc0d8dd1284cb2cefa921b651297964b64c6b0d799345e5632e23bda","signature":"81571607487247b30f16fb26a6696e1ab49f901932d6dcd78345cbdc8b2a8ee6"},{"version":"d273dc64da3e3b117c4bace1fe38c01237f61cc4f559db9f258e5dcff7fd447e","signature":"d19e5f630a620d46fc0260c16277ad5ede4105bb2f7530a71bac1f5f45d778ce"},{"version":"a2812ef97b0db67449e4946bc9bdbb07f99b4d6ea9527dc705a04fb90f94ce20","signature":"8542e9c9c5fbfc2765235aeab17fa278a714ed194bb1349774294118b6131cd1"},"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",{"version":"1b7f4dc03064afd085911965e975be04441df1bdd91bf004ff64befbcdfb9501","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"6605a1a69d76f11731b8400cf746f224f6e3655cbadafb0d43197b8733f00603","signature":"c106970ee4b686b5ebf0964ea4e0d1b2af02bdecd2d5cfeecedeb7bb5b2f404b"},{"version":"be719d34d3cc6d4f38953221444acb3fe9c499cbfde67373e24768b5901688c9","signature":"c106970ee4b686b5ebf0964ea4e0d1b2af02bdecd2d5cfeecedeb7bb5b2f404b"},"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",{"version":"2f8c605e3128f303f45b07f2aa605edb0147914fa0e6e0092d1560ce3ce5dfff","affectsGlobalScope":true},{"version":"85df2298d112b743b917f0d9c1eddcf7455f4f09197544e16ab96dbaf4148429","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e04ded6ebd4493989232ec5c460579001e7e7d46b598ffea7aa616563a8ccc0f","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","impliedFormat":1},{"version":"d88b3dc8b7055665059ea06ffafce9467fc4bdfa7cb2d7a6f4262556bb482b0d","impliedFormat":1},{"version":"b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","impliedFormat":1},{"version":"32ddc6ad753ae79571bbf28cebff7a383bf7f562ac5ef5d25c94ef7f71609d49","impliedFormat":1},{"version":"670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","impliedFormat":1},{"version":"81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","impliedFormat":1},{"version":"069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","impliedFormat":1},{"version":"0dc6940ff35d845686a118ee7384713a84024d60ef26f25a2f87992ec7ddbd64","impliedFormat":1},{"version":"e2b48abff5a8adc6bb1cd13a702b9ef05e6045a98e7cfa95a8779b53b6d0e69d","impliedFormat":1},{"version":"f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","impliedFormat":1},{"version":"a4a39b5714adfcadd3bbea6698ca2e942606d833bde62ad5fb6ec55f5e438ff8","impliedFormat":1},{"version":"bbc1d029093135d7d9bfa4b38cbf8761db505026cc458b5e9c8b74f4000e5e75","impliedFormat":1},{"version":"1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","impliedFormat":1},{"version":"afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","impliedFormat":1},{"version":"742d4b7b02ffc3ba3c4258a3d196457da2b3fec0125872fd0776c50302a11b9d","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"03566a51ebc848dec449a4ed69518e9f20caa6ac123fa32676aaaabe64adae8e","impliedFormat":1},{"version":"b2d0630483bf337ef9dac326c3334a245aa4946e9f60f12baf7da5be44beafbb","impliedFormat":1},{"version":"035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","impliedFormat":1},{"version":"a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","impliedFormat":1},{"version":"5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","impliedFormat":1},{"version":"cdcc132f207d097d7d3aa75615ab9a2e71d6a478162dde8b67f88ea19f3e54de","impliedFormat":1},{"version":"0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","impliedFormat":1},{"version":"c085e9aa62d1ae1375794c1fb927a445fa105fed891a7e24edbb1c3300f7384a","impliedFormat":1},{"version":"f315e1e65a1f80992f0509e84e4ae2df15ecd9ef73df975f7c98813b71e4c8da","impliedFormat":1},{"version":"5b9586e9b0b6322e5bfbd2c29bd3b8e21ab9d871f82346cb71020e3d84bae73e","impliedFormat":1},{"version":"3e70a7e67c2cb16f8cd49097360c0309fe9d1e3210ff9222e9dac1f8df9d4fb6","impliedFormat":1},{"version":"ab68d2a3e3e8767c3fba8f80de099a1cfc18c0de79e42cb02ae66e22dfe14a66","impliedFormat":1},{"version":"d96cc6598148bf1a98fb2e8dcf01c63a4b3558bdaec6ef35e087fd0562eb40ec","impliedFormat":1},{"version":"f8db4fea512ab759b2223b90ecbbe7dae919c02f8ce95ec03f7fb1cf757cfbeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"19990350fca066265b2c190c9b6cde1229f35002ea2d4df8c9e397e9942f6c89","impliedFormat":99},{"version":"8fb8fdda477cd7382477ffda92c2bb7d9f7ef583b1aa531eb6b2dc2f0a206c10","impliedFormat":99},{"version":"66995b0c991b5c5d42eff1d950733f85482c7419f7296ab8952e03718169e379","impliedFormat":99},{"version":"9863f888da357e35e013ca3465b794a490a198226bd8232c2f81fb44e16ff323","impliedFormat":99},{"version":"b4c6184d78303b0816e779a48bef779b15aea4a66028eb819aac0abee8407dea","impliedFormat":99},{"version":"db085d2171d48938a99e851dafe0e486dce9859e5dfa73c21de5ed3d4d6fb0c5","impliedFormat":99},{"version":"62a3ad1ddd1f5974b3bf105680b3e09420f2230711d6520a521fab2be1a32838","impliedFormat":99},{"version":"a77be6fc44c876bc10c897107f84eaba10790913ebdcad40fcda7e47469b2160","impliedFormat":99},{"version":"06cf55b6da5cef54eaaf51cdc3d4e5ebf16adfdd9ebd20cec7fe719be9ced017","impliedFormat":99},{"version":"91f5dbcdb25d145a56cffe957ec665256827892d779ef108eb2f3864faff523b","impliedFormat":99},{"version":"052ba354bab8fb943e0bc05a0769f7b81d7c3b3c6cd0f5cfa53c7b2da2a525c5","impliedFormat":99},{"version":"927955a3de5857e0a1c575ced5a4245e74e6821d720ed213141347dd1870197f","impliedFormat":99},{"version":"fec804d54cd97dd77e956232fc37dc13f53e160d4bbeeb5489e86eeaa91f7ebd","impliedFormat":99},{"version":"03c258e060b7da220973f84b89615e4e9850e9b5d30b3a8e4840b3e3268ae8eb","impliedFormat":1},{"version":"fd0589ca571ad090b531d8c095e26caa53d4825c64d3ff2b2b1ab95d72294175","impliedFormat":1},{"version":"669843ecafb89ae1e944df06360e8966219e4c1c34c0d28aa2503272cdd444a7","affectsGlobalScope":true,"impliedFormat":1},{"version":"96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","impliedFormat":1},{"version":"b0f9ef6423d6b29dde29fd60d83d215796b2c1b76bfca28ac374ae18702cfb8e","impliedFormat":1},{"version":"65ff5a0aefd7817a03c1ad04fee85c9cdd3ec415cc3c9efec85d8008d4d5e4ee","impliedFormat":1},{"version":"549df62b64a71004aee17685b445a8289013daf96246ce4d9b087d13d7a27a61","affectsGlobalScope":true,"impliedFormat":1},{"version":"40a1b33c67109be18a961127873e8ba198429eacf11a468b4a052cddc9a73f8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"17ed71200119e86ccef2d96b73b02ce8854b76ad6bd21b5021d4269bec527b5f","impliedFormat":1},{"version":"4ef960df4f672e93b479f88211ed8b5cfa8a598b97aafa3396cacdc3341e3504","impliedFormat":1},{"version":"cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","impliedFormat":1},{"version":"9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","impliedFormat":1},{"version":"c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","impliedFormat":1},{"version":"8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","impliedFormat":1},{"version":"86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","impliedFormat":1},{"version":"42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","impliedFormat":1},{"version":"ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","impliedFormat":1},{"version":"83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","impliedFormat":1},{"version":"1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","impliedFormat":1},{"version":"0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","impliedFormat":1},{"version":"cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","impliedFormat":1},{"version":"c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","impliedFormat":1},{"version":"f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","impliedFormat":1},{"version":"0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","impliedFormat":1},{"version":"7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","impliedFormat":1},{"version":"bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","impliedFormat":1},{"version":"52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","impliedFormat":1},{"version":"770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","impliedFormat":1},{"version":"d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","impliedFormat":1},{"version":"799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","impliedFormat":1},{"version":"2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","impliedFormat":1},{"version":"9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","impliedFormat":1},{"version":"397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","impliedFormat":1},{"version":"a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","impliedFormat":1},{"version":"a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","impliedFormat":1},{"version":"c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","impliedFormat":1},{"version":"4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","impliedFormat":1},{"version":"f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","impliedFormat":1},{"version":"cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","impliedFormat":1},{"version":"b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","impliedFormat":1},{"version":"c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","impliedFormat":1},{"version":"14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","impliedFormat":1},{"version":"a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","impliedFormat":1},{"version":"f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","impliedFormat":1},{"version":"3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","impliedFormat":1},{"version":"662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","impliedFormat":1},{"version":"c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","impliedFormat":1},{"version":"2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","impliedFormat":1},{"version":"34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","impliedFormat":1},{"version":"844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","impliedFormat":1},{"version":"ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","impliedFormat":1},{"version":"e7bb49fac2aa46a13011b5eb5e4a8648f70a28aea1853fab2444dd4fcb4d4ec7","impliedFormat":1},{"version":"464e45d1a56dae066d7e1a2f32e55b8de4bfb072610c3483a4091d73c9924908","impliedFormat":1},{"version":"da318e126ac39362c899829547cc8ee24fa3e8328b52cdd27e34173cf19c7941","impliedFormat":1},{"version":"24bd01a91f187b22456c7171c07dbf44f3ad57ebd50735aab5c13fa23d7114b4","impliedFormat":1},{"version":"4738eefeaaba4d4288a08c1c226a76086095a4d5bcc7826d2564e7c29da47671","impliedFormat":1},{"version":"736097ddbb2903bef918bb3b5811ef1c9c5656f2a73bd39b22a91b9cc2525e50","impliedFormat":1},{"version":"dbec715e9e82df297e49e3ed0029f6151aa40517ebfd6fcdba277a8a2e1d3a1b","impliedFormat":1},{"version":"097f1f8ca02e8940cfdcca553279e281f726485fa6fb214b3c9f7084476f6bcc","impliedFormat":1},{"version":"8f75e211a2e83ff216eb66330790fb6412dcda2feb60c4f165c903cf375633ee","impliedFormat":1},{"version":"dbe69644ab6e699ad2ef740056c637c34f3348af61d3764ff555d623703525db","impliedFormat":1},{"version":"3f36c0c7508302f3dca3dc5ab0a66d822b2222f70c24bb1796ddb5c9d1168a05","impliedFormat":1},{"version":"b23d5b89c465872587e130f427b39458b8e3ad16385f98446e9e86151ba6eb15","affectsGlobalScope":true,"impliedFormat":1},{"version":"61f41da9aaa809e5142b1d849d4e70f3e09913a5cb32c629bf6e61ef27967ff7","impliedFormat":1},{"version":"bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","impliedFormat":1},{"version":"26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","impliedFormat":1}],"root":[500,501,506,623,624,768,[786,788],825,826,[828,830],[844,848],[851,854],894,895,[897,919]],"options":{"allowSyntheticDefaultImports":true,"composite":false,"declaration":true,"declarationMap":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"inlineSources":false,"module":1,"noFallthroughCasesInSwitch":false,"noImplicitAny":false,"noUnusedLocals":false,"noUnusedParameters":false,"outDir":"./dist","removeComments":true,"rootDir":"./src","skipLibCheck":true,"sourceMap":true,"strict":true,"strictBindCallApply":false,"strictNullChecks":false,"target":4},"referencedMap":[[406,1],[314,1],[52,1],[303,2],[304,2],[305,1],[306,3],[316,4],[307,1],[308,5],[309,1],[310,1],[311,2],[312,2],[313,2],[315,6],[323,7],[325,1],[322,1],[328,8],[326,1],[324,1],[320,9],[321,10],[327,1],[329,11],[317,1],[319,12],[318,13],[258,1],[261,14],[257,1],[453,1],[259,1],[260,1],[346,15],[331,15],[338,15],[335,15],[348,15],[339,15],[345,15],[330,16],[349,15],[352,17],[343,15],[333,15],[351,15],[336,15],[334,15],[344,15],[340,15],[350,15],[337,15],[347,15],[332,15],[342,15],[341,15],[359,18],[355,19],[354,1],[353,1],[358,20],[397,21],[53,1],[54,1],[55,1],[435,22],[57,23],[441,24],[440,25],[247,26],[248,23],[368,1],[277,1],[278,1],[369,27],[249,1],[370,1],[371,28],[56,1],[251,29],[252,1],[250,30],[253,29],[254,1],[256,31],[268,32],[269,1],[274,33],[270,1],[271,1],[272,1],[273,1],[275,1],[276,34],[282,35],[285,36],[283,1],[284,1],[302,37],[286,1],[287,1],[403,38],[267,39],[265,40],[263,41],[264,42],[266,1],[294,43],[288,1],[297,44],[290,45],[295,46],[293,47],[296,48],[291,49],[292,50],[280,51],[298,52],[281,53],[300,54],[301,55],[289,1],[255,1],[262,56],[299,57],[365,58],[360,1],[366,59],[361,60],[362,61],[363,62],[364,63],[367,64],[383,65],[382,66],[388,67],[380,1],[381,68],[384,65],[385,69],[387,70],[386,71],[389,72],[374,73],[375,74],[378,75],[377,75],[376,74],[379,74],[373,76],[391,77],[390,78],[393,79],[392,80],[394,81],[356,51],[357,82],[279,1],[395,83],[372,84],[396,85],[507,3],[616,86],[617,87],[621,88],[508,1],[514,89],[614,90],[615,91],[509,1],[510,1],[513,92],[511,1],[512,1],[619,1],[620,93],[618,94],[622,95],[404,96],[405,97],[426,98],[427,99],[428,1],[429,100],[430,101],[439,102],[432,103],[436,104],[444,105],[442,3],[443,106],[433,107],[445,1],[447,108],[448,109],[449,110],[438,111],[434,112],[458,113],[446,114],[471,115],[431,116],[472,117],[469,118],[470,3],[493,119],[421,120],[417,121],[419,122],[468,123],[412,124],[460,125],[459,1],[420,126],[465,127],[424,128],[466,1],[467,129],[422,130],[416,131],[423,132],[418,133],[411,1],[463,134],[475,135],[473,3],[407,3],[462,136],[408,10],[409,99],[410,137],[414,138],[413,139],[474,140],[415,141],[452,142],[450,108],[451,143],[400,10],[461,144],[401,145],[478,146],[479,147],[476,148],[477,149],[480,150],[481,151],[482,152],[457,153],[454,154],[455,2],[456,143],[484,155],[483,156],[490,157],[425,3],[486,158],[485,3],[488,159],[487,1],[489,160],[437,161],[464,162],[492,163],[491,3],[795,164],[791,165],[790,166],[792,1],[793,167],[794,168],[796,169],[815,1],[819,170],[823,171],[816,3],[818,172],[817,1],[820,173],[821,174],[822,175],[824,176],[855,1],[856,1],[859,177],[860,1],[861,1],[863,1],[862,1],[877,1],[864,1],[865,178],[866,1],[867,1],[868,179],[869,177],[870,1],[872,180],[873,177],[874,181],[875,179],[876,1],[878,182],[883,183],[892,184],[882,185],[857,1],[871,181],[880,186],[881,1],[879,1],[884,187],[889,188],[885,3],[886,3],[887,3],[888,3],[858,1],[890,1],[891,189],[893,190],[499,191],[497,192],[398,3],[399,1],[496,193],[402,194],[498,195],[495,196],[494,197],[843,198],[834,199],[840,1],[831,1],[832,200],[835,201],[836,3],[837,202],[833,200],[838,203],[839,204],[841,205],[842,1],[560,206],[561,206],[562,207],[520,208],[563,209],[564,210],[565,211],[515,1],[518,212],[516,1],[517,1],[566,213],[567,214],[568,215],[569,216],[570,217],[571,218],[572,218],[574,219],[573,220],[575,221],[576,222],[577,223],[559,224],[519,1],[578,225],[579,226],[580,227],[612,228],[581,229],[582,230],[583,231],[584,232],[585,233],[586,234],[587,235],[588,236],[589,237],[590,238],[591,238],[592,239],[593,1],[594,240],[596,241],[595,242],[597,243],[598,244],[599,245],[600,246],[601,247],[602,248],[603,249],[604,250],[605,251],[606,252],[607,253],[608,254],[609,255],[610,256],[611,257],[613,258],[51,1],[537,259],[547,260],[536,259],[557,261],[528,262],[527,263],[556,258],[550,264],[555,265],[530,266],[544,267],[529,268],[553,269],[525,270],[524,258],[554,271],[526,272],[531,273],[532,1],[535,273],[522,1],[558,274],[548,275],[539,276],[540,277],[542,278],[538,279],[541,280],[551,258],[533,281],[534,282],[543,283],[523,284],[546,275],[545,273],[549,1],[552,285],[623,286],[501,287],[854,288],[500,3],[848,289],[852,290],[828,291],[846,292],[845,292],[847,292],[826,292],[830,293],[829,294],[844,295],[825,296],[851,297],[894,298],[853,298],[897,299],[898,300],[899,300],[900,300],[901,300],[902,1],[903,300],[904,300],[905,300],[906,300],[895,301],[907,302],[908,1],[909,1],[910,1],[624,303],[911,304],[506,305],[912,306],[913,307],[914,1],[915,1],[916,1],[917,308],[768,309],[918,310],[787,311],[788,312],[919,313],[786,314],[504,315],[503,316],[923,317],[921,1],[941,1],[944,318],[505,319],[502,1],[943,1],[920,1],[926,320],[922,317],[924,321],[925,317],[769,1],[807,322],[806,323],[927,1],[932,324],[931,325],[930,326],[928,1],[803,327],[811,328],[933,329],[937,330],[934,1],[936,331],[804,1],[938,1],[939,332],[940,333],[949,334],[964,335],[965,336],[929,1],[966,1],[789,337],[967,1],[799,1],[797,1],[814,338],[798,339],[850,340],[849,341],[813,342],[812,341],[810,343],[808,327],[809,344],[968,1],[801,1],[802,1],[971,345],[969,1],[970,346],[972,1],[997,347],[998,348],[973,349],[976,349],[995,347],[996,347],[986,347],[985,350],[983,347],[978,347],[991,347],[989,347],[993,347],[977,347],[990,347],[994,347],[979,347],[980,347],[992,347],[974,347],[981,347],[982,347],[984,347],[988,347],[999,351],[987,347],[975,347],[1012,352],[1011,1],[1006,351],[1008,353],[1007,351],[1000,351],[1001,351],[1003,351],[1005,351],[1009,353],[1010,353],[1002,353],[1004,353],[800,354],[805,355],[1013,1],[1022,356],[1014,1],[1017,357],[1020,358],[1021,359],[1015,360],[1018,361],[1016,362],[1023,363],[1025,364],[1024,1],[963,1],[1026,1],[827,1],[667,365],[658,1],[659,1],[660,1],[661,1],[662,1],[663,1],[664,1],[665,1],[666,1],[1027,1],[1028,366],[521,1],[942,1],[628,1],[747,367],[751,367],[750,367],[748,367],[749,367],[752,367],[631,367],[643,367],[632,367],[645,367],[647,367],[641,367],[640,367],[642,367],[646,367],[648,367],[633,367],[644,367],[634,367],[636,368],[637,367],[638,367],[639,367],[655,367],[654,367],[755,369],[649,367],[651,367],[650,367],[652,367],[653,367],[754,367],[753,367],[656,367],[738,367],[737,367],[668,370],[669,370],[671,367],[715,367],[736,367],[672,370],[716,367],[713,367],[717,367],[673,367],[674,367],[675,370],[718,367],[712,370],[670,370],[719,367],[676,370],[720,367],[700,367],[677,370],[678,367],[679,367],[710,370],[682,367],[681,367],[721,367],[722,367],[723,370],[684,367],[686,367],[687,367],[693,367],[694,367],[688,370],[724,367],[711,370],[689,367],[690,367],[725,367],[691,367],[683,370],[726,367],[709,367],[727,367],[692,370],[695,367],[696,367],[714,370],[728,367],[729,367],[708,371],[685,367],[730,370],[731,367],[732,367],[733,367],[734,370],[697,367],[735,367],[701,367],[698,370],[699,370],[680,367],[702,367],[705,367],[703,367],[704,367],[657,367],[745,367],[739,367],[740,367],[742,367],[743,367],[741,367],[746,367],[744,367],[630,372],[763,373],[761,374],[762,375],[760,376],[759,367],[758,377],[627,1],[629,1],[625,1],[756,1],[757,378],[635,372],[626,1],[935,1],[948,379],[1019,380],[946,381],[947,382],[896,1],[707,383],[706,1],[952,384],[961,385],[950,1],[951,386],[962,387],[957,388],[958,389],[956,390],[960,391],[954,392],[953,393],[959,394],[955,385],[945,395],[246,396],[219,1],[197,397],[195,397],[245,398],[210,399],[209,399],[110,400],[61,401],[217,400],[218,400],[220,402],[221,400],[222,403],[121,404],[223,400],[194,400],[224,400],[225,405],[226,400],[227,399],[228,406],[229,400],[230,400],[231,400],[232,400],[233,399],[234,400],[235,400],[236,400],[237,400],[238,407],[239,400],[240,400],[241,400],[242,400],[243,400],[60,398],[63,403],[64,403],[65,403],[66,403],[67,403],[68,403],[69,403],[70,400],[72,408],[73,403],[71,403],[74,403],[75,403],[76,403],[77,403],[78,403],[79,403],[80,400],[81,403],[82,403],[83,403],[84,403],[85,403],[86,400],[87,403],[88,403],[89,403],[90,403],[91,403],[92,403],[93,400],[95,409],[94,403],[96,403],[97,403],[98,403],[99,403],[100,407],[101,400],[102,400],[116,410],[104,411],[105,403],[106,403],[107,400],[108,403],[109,403],[111,412],[112,403],[113,403],[114,403],[115,403],[117,403],[118,403],[119,403],[120,403],[122,413],[123,403],[124,403],[125,403],[126,400],[127,403],[128,414],[129,414],[130,414],[131,400],[132,403],[133,403],[134,403],[139,403],[135,403],[136,400],[137,403],[138,400],[140,403],[141,403],[142,403],[143,403],[144,403],[145,403],[146,400],[147,403],[148,403],[149,403],[150,403],[151,403],[152,403],[153,403],[154,403],[155,403],[156,403],[157,403],[158,403],[159,403],[160,403],[161,403],[162,403],[163,415],[164,403],[165,403],[166,403],[167,403],[168,403],[169,403],[170,400],[171,400],[172,400],[173,400],[174,400],[175,403],[176,403],[177,403],[178,403],[196,416],[244,400],[181,417],[180,418],[204,419],[203,420],[199,421],[198,420],[200,422],[189,423],[187,424],[202,425],[201,422],[188,1],[190,426],[103,427],[59,428],[58,403],[193,1],[185,429],[186,430],[183,1],[184,431],[182,403],[191,432],[62,433],[211,1],[212,1],[205,1],[208,399],[207,1],[213,1],[214,1],[206,434],[215,1],[216,1],[179,435],[192,436],[48,1],[49,1],[8,1],[9,1],[13,1],[12,1],[2,1],[14,1],[15,1],[16,1],[17,1],[18,1],[19,1],[20,1],[21,1],[3,1],[22,1],[23,1],[4,1],[24,1],[50,1],[28,1],[25,1],[26,1],[27,1],[29,1],[30,1],[31,1],[5,1],[32,1],[33,1],[34,1],[35,1],[6,1],[39,1],[36,1],[37,1],[38,1],[40,1],[7,1],[41,1],[46,1],[47,1],[42,1],[43,1],[44,1],[45,1],[1,1],[11,1],[10,1],[783,437],[774,438],[781,439],[776,1],[777,1],[775,440],[778,441],[770,1],[771,1],[782,442],[773,443],[779,1],[780,444],[772,445],[784,446],[785,447],[767,448],[765,1],[766,1],[764,1]],"affectedFilesPendingEmit":[[623,51],[501,51],[854,51],[500,51],[848,51],[852,51],[828,51],[846,51],[845,51],[847,51],[826,51],[830,51],[829,51],[844,51],[825,51],[851,51],[894,51],[853,51],[897,51],[898,51],[899,51],[900,51],[901,51],[902,51],[903,51],[904,51],[905,51],[906,51],[895,51],[907,51],[908,51],[909,51],[910,51],[624,51],[911,51],[506,51],[912,51],[913,51],[914,51],[915,51],[916,51],[768,51],[918,51],[787,51],[788,51],[919,51],[786,51]],"version":"5.8.3"}
</file>

<file path="apps/api/webpack-hmr.config.js">
/* eslint-disable @typescript-eslint/no-var-requires */
const nodeExternals = require('webpack-node-externals');
const { RunScriptWebpackPlugin } = require('run-script-webpack-plugin');

module.exports = function (options, webpack) {
  return {
    ...options,
    entry: ['webpack/hot/poll?100', options.entry],
    externals: [
      nodeExternals({
        allowlist: ['webpack/hot/poll?100'],
        modulesDir: '../../node_modules',
      }),
    ],
    plugins: [
      ...options.plugins,
      new webpack.HotModuleReplacementPlugin(),
      new webpack.WatchIgnorePlugin({
        paths: [/\.js$/, /\.d\.ts$/],
      }),
      new RunScriptWebpackPlugin({ name: options.output.filename }),
    ],
  };
};
</file>

<file path="apps/web/pages/courses/[slug]/quizzes/[id]/results.tsx">
import React, { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Link from 'next/link';
import { Quiz, Question, AnswerOption, UserAnswer } from '@repo/core/src/types/quiz.types';
import RadialProgress from '../../../../../src/components/quiz/RadialProgress';
import IncorrectAnswersList from '../../../../../src/components/quiz/IncorrectAnswersList';
import OfflineQuizNotification from '../../../../../src/components/quiz/OfflineQuizNotification';
import { getQuizResults } from '../../../../../src/services/userProgressApi';

// Mock data for development - will be replaced with API call
const getMockQuizData = (id: string): { 
  quiz: Quiz; 
  questions: Question[]; 
  answerOptions: Record<number, AnswerOption[]>;
  userAnswers: UserAnswer[];
  score: number;
} => {
  // This is a simplified version - in a real app, this would come from the API
  // or be passed from the quiz page via state management
  
  // Mock quiz
  const quiz: Quiz = {
    id: parseInt(id),
    title: 'React Fundamentals Quiz',
    description: 'Test din viden om React grundbegreber',
    moduleId: 1,
    passingScore: 70,
    createdAt: new Date(),
    updatedAt: new Date()
  };
  
  // Mock questions
  const questions: Question[] = [
    {
      id: 1,
      text: 'Hvad er React?',
      type: 'MULTIPLE_CHOICE' as any,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'React er et JavaScript-bibliotek til at bygge brugergrænseflader, udviklet af Facebook.'
    },
    {
      id: 2,
      text: 'Hvad er JSX?',
      type: 'MULTIPLE_CHOICE' as any,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'JSX er en syntaksudvidelse til JavaScript, der ligner HTML og gør det lettere at skrive React-elementer.'
    },
    {
      id: 3,
      text: 'Hvad er en React-komponent?',
      type: 'MULTIPLE_CHOICE' as any,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'En React-komponent er en genbrugelig kodeblok, der returnerer React-elementer som beskriver, hvad der skal vises på skærmen.'
    },
    {
      id: 4,
      text: 'Hvad er forskellen mellem state og props i React?',
      type: 'MULTIPLE_CHOICE' as any,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'Props er data, der sendes til en komponent fra dens forælder, mens state er data, der administreres internt i komponenten.'
    },
    {
      id: 5,
      text: 'Hvad er en React Hook?',
      type: 'MULTIPLE_CHOICE' as any,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'Hooks er funktioner, der lader dig "hooke ind i" React-funktioner som state og livscyklus fra funktionelle komponenter.'
    }
  ];
  
  // Mock answer options
  const answerOptions: Record<number, AnswerOption[]> = {
    1: [
      { id: 101, text: 'Et JavaScript-bibliotek til at bygge brugergrænseflader', isCorrect: true, questionId: 1, createdAt: new Date(), updatedAt: new Date() },
      { id: 102, text: 'Et komplet framework som Angular', isCorrect: false, questionId: 1, createdAt: new Date(), updatedAt: new Date() },
      { id: 103, text: 'Et programmeringssprog', isCorrect: false, questionId: 1, createdAt: new Date(), updatedAt: new Date() },
      { id: 104, text: 'En database', isCorrect: false, questionId: 1, createdAt: new Date(), updatedAt: new Date() }
    ],
    2: [
      { id: 201, text: 'En ny programmeringssprog', isCorrect: false, questionId: 2, createdAt: new Date(), updatedAt: new Date() },
      { id: 202, text: 'En syntaksudvidelse til JavaScript, der ligner HTML', isCorrect: true, questionId: 2, createdAt: new Date(), updatedAt: new Date() },
      { id: 203, text: 'Et værktøj til at style komponenter', isCorrect: false, questionId: 2, createdAt: new Date(), updatedAt: new Date() },
      { id: 204, text: 'En JavaScript-compiler', isCorrect: false, questionId: 2, createdAt: new Date(), updatedAt: new Date() }
    ],
    3: [
      { id: 301, text: 'En HTML-fil', isCorrect: false, questionId: 3, createdAt: new Date(), updatedAt: new Date() },
      { id: 302, text: 'En CSS-klasse', isCorrect: false, questionId: 3, createdAt: new Date(), updatedAt: new Date() },
      { id: 303, text: 'En genbrugelig kodeblok, der returnerer React-elementer', isCorrect: true, questionId: 3, createdAt: new Date(), updatedAt: new Date() },
      { id: 304, text: 'En JavaScript-variabel', isCorrect: false, questionId: 3, createdAt: new Date(), updatedAt: new Date() }
    ],
    4: [
      { id: 401, text: 'Der er ingen forskel, de er det samme', isCorrect: false, questionId: 4, createdAt: new Date(), updatedAt: new Date() },
      { id: 402, text: 'Props er for styling, state er for data', isCorrect: false, questionId: 4, createdAt: new Date(), updatedAt: new Date() },
      { id: 403, text: 'Props sendes til komponenten, state administreres internt i komponenten', isCorrect: true, questionId: 4, createdAt: new Date(), updatedAt: new Date() },
      { id: 404, text: 'State kan ikke ændres, props kan ændres', isCorrect: false, questionId: 4, createdAt: new Date(), updatedAt: new Date() }
    ],
    5: [
      { id: 501, text: 'En måde at tilføje HTML til React', isCorrect: false, questionId: 5, createdAt: new Date(), updatedAt: new Date() },
      { id: 502, text: 'En funktion, der lader dig bruge React-funktioner i funktionelle komponenter', isCorrect: true, questionId: 5, createdAt: new Date(), updatedAt: new Date() },
      { id: 503, text: 'Et værktøj til at forbinde React med en database', isCorrect: false, questionId: 5, createdAt: new Date(), updatedAt: new Date() },
      { id: 504, text: 'En måde at style komponenter på', isCorrect: false, questionId: 5, createdAt: new Date(), updatedAt: new Date() }
    ]
  };
  
  // Mock user answers - in a real app, this would come from the quiz state
  const userAnswers: UserAnswer[] = [
    { id: 1, quizAttemptId: 1, questionId: 1, selectedAnswerOptionId: 101, createdAt: new Date(), updatedAt: new Date() },
    { id: 2, quizAttemptId: 1, questionId: 2, selectedAnswerOptionId: 201, createdAt: new Date(), updatedAt: new Date() }, // Incorrect
    { id: 3, quizAttemptId: 1, questionId: 3, selectedAnswerOptionId: 303, createdAt: new Date(), updatedAt: new Date() },
    { id: 4, quizAttemptId: 1, questionId: 4, selectedAnswerOptionId: 403, createdAt: new Date(), updatedAt: new Date() },
    { id: 5, quizAttemptId: 1, questionId: 5, selectedAnswerOptionId: 504, createdAt: new Date(), updatedAt: new Date() }, // Incorrect
  ];
  
  // Calculate score
  const score = Math.round((3 / 5) * 100); // 3 correct out of 5 = 60%
  
  return { quiz, questions, answerOptions, userAnswers, score };
};

const QuizResultPage: React.FC = () => {
  const router = useRouter();
  const { slug, id } = router.query;
  const [quizData, setQuizData] = useState<ReturnType<typeof getMockQuizData> | null>(null);
  const [incorrectAnswers, setIncorrectAnswers] = useState<Array<{
    question: Question;
    selectedOption: AnswerOption;
    correctOption: AnswerOption;
  }>>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  
  useEffect(() => {
    if (router.isReady && id) {
      const fetchData = async () => {
        try {
          setIsLoading(true);
          setError(null);
          
          // In a real app, we would fetch the quiz results from the API
          // For now, we'll use mock data
          const data = getMockQuizData(id as string);
          
          // Try to fetch real results from API (this will likely fail in development)
          try {
            const quizId = parseInt(id as string);
            const apiResults = await getQuizResults(quizId);
            console.log('API results:', apiResults);
            // If we got results, we could use them instead of mock data
            // This is just for demonstration
          } catch (apiError) {
            console.log('Using mock data instead of API results');
          }
          
          setQuizData(data);
          
          // Process incorrect answers
          const incorrect = data.userAnswers
            .filter(answer => {
              const question = data.questions.find(q => q.id === answer.questionId);
              if (!question || !answer.selectedAnswerOptionId) return false;
              
              const selectedOption = data.answerOptions[question.id]?.find(
                opt => opt.id === answer.selectedAnswerOptionId
              );
              return selectedOption && !selectedOption.isCorrect;
            })
            .map(answer => {
              const question = data.questions.find(q => q.id === answer.questionId)!;
              const selectedOption = data.answerOptions[question.id]?.find(
                opt => opt.id === answer.selectedAnswerOptionId
              )!;
              const correctOption = data.answerOptions[question.id]?.find(
                opt => opt.isCorrect
              )!;
              
              return { question, selectedOption, correctOption };
            });
          
          setIncorrectAnswers(incorrect);
        } catch (err) {
          console.error('Error fetching quiz results:', err);
          setError('Der opstod en fejl ved indlæsning af quizresultater.');
        } finally {
          setIsLoading(false);
        }
      };
      
      fetchData();
    }
  }, [router.isReady, id]);
  
  // Show loading state while router is not ready or data is loading
  if (!router.isReady || isLoading) {
    return (
      <div className="flex justify-center items-center h-screen">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
      </div>
    );
  }
  
  // Show error state
  if (error) {
    return (
      <div className="max-w-4xl mx-auto px-4 py-8">
        <div className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md p-6 text-center">
          <h2 className="text-xl font-semibold text-red-700 dark:text-red-300 mb-2">Fejl</h2>
          <p className="text-red-600 dark:text-red-400">{error}</p>
          <div className="mt-6">
            <Link 
              href={`/courses/${slug}`}
              className="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
            >
              Tilbage til kursus
            </Link>
          </div>
        </div>
      </div>
    );
  }
  
  if (!quizData) {
    return (
      <div className="max-w-4xl mx-auto px-4 py-8">
        <div className="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md p-6 text-center">
          <h2 className="text-xl font-semibold text-yellow-700 dark:text-yellow-300 mb-2">Ingen resultater fundet</h2>
          <p className="text-yellow-600 dark:text-yellow-400">Vi kunne ikke finde resultaterne for denne quiz.</p>
          <div className="mt-6">
            <Link 
              href={`/courses/${slug}/quizzes/${id}`}
              className="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 mr-4"
            >
              Tag quizzen
            </Link>
            <Link 
              href={`/courses/${slug}`}
              className="inline-flex items-center justify-center px-5 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-200 dark:border-gray-700 dark:hover:bg-gray-700"
            >
              Tilbage til kursus
            </Link>
          </div>
        </div>
      </div>
    );
  }
  
  const { quiz, score } = quizData;
  const passed = score >= (quiz.passingScore || 70);
  
  return (
    <>
      <Head>
        <title>Quiz Results | {quiz.title} | LearningLab</title>
      </Head>
      
      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* Breadcrumb */}
        <nav className="flex mb-6 text-sm text-gray-500 dark:text-gray-400">
          <Link href="/courses" className="hover:text-gray-700 dark:hover:text-gray-200">
            Kurser
          </Link>
          <span className="mx-2">/</span>
          <Link href={`/courses/${slug}`} className="hover:text-gray-700 dark:hover:text-gray-200">
            {slug}
          </Link>
          <span className="mx-2">/</span>
          <Link href={`/courses/${slug}/quizzes/${id}`} className="hover:text-gray-700 dark:hover:text-gray-200">
            Quiz
          </Link>
          <span className="mx-2">/</span>
          <span className="text-gray-700 dark:text-gray-200">Resultater</span>
        </nav>
        
        {/* Offline notification */}
        <OfflineQuizNotification className="mb-4" />
        
        <div className="bg-gray-50 dark:bg-gray-900 rounded-lg p-6">
          <div className="mb-8 text-center">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
              {quiz.title} - Resultater
            </h2>
            <p className="text-gray-600 dark:text-gray-300 mb-6">
              {passed 
                ? 'Tillykke! Du har bestået quizzen.' 
                : 'Du har ikke bestået quizzen. Prøv igen!'}
            </p>
            
            {/* Radial Progress */}
            <div className="flex justify-center mb-6">
              <RadialProgress 
                percentage={score} 
                size={180} 
                passed={passed}
              />
            </div>
            
            <div className="flex flex-col sm:flex-row justify-center gap-4 mb-8">
              <Link 
                href={`/courses/${slug}/quizzes/${id}`}
                className="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
              >
                Prøv igen
              </Link>
              <Link 
                href={`/courses/${slug}`}
                className="inline-flex items-center justify-center px-5 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-200 dark:border-gray-700 dark:hover:bg-gray-700"
              >
                Tilbage til kursus
              </Link>
            </div>
          </div>
          
          {/* Incorrect Answers List */}
          {incorrectAnswers.length > 0 && (
            <div className="mt-8">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-4">
                Forkerte svar
              </h3>
              <IncorrectAnswersList incorrectAnswers={incorrectAnswers} />
            </div>
          )}
        </div>
      </div>
    </>
  );
};

export default QuizResultPage;
</file>

<file path="apps/web/pages/courses/index.tsx">
// apps/web/pages/courses/index.tsx
import React from 'react';
import Head from 'next/head';
import Link from 'next/link';

const Courses: React.FC = () => {
  // Mock courses data
  const courses = [
    {
      id: 1,
      slug: 'react-fundamentals',
      title: 'React Fundamentals',
      description: 'Lær grundlæggende React-koncepter og byg din første app',
      level: 'Begynder',
      duration: '4 uger',
      modules: 8,
    },
    {
      id: 2,
      slug: 'typescript-basics',
      title: 'TypeScript Basics',
      description: 'Bliv fortrolig med TypeScript og statisk typning',
      level: 'Begynder',
      duration: '3 uger',
      modules: 6,
    },
    {
      id: 3,
      slug: 'nextjs-advanced',
      title: 'Next.js Advanced',
      description: 'Avancerede teknikker og best practices i Next.js',
      level: 'Avanceret',
      duration: '5 uger',
      modules: 10,
    },
    {
      id: 4,
      slug: 'redux-toolkit',
      title: 'Redux Toolkit Masterclass',
      description: 'Lær at håndtere global state med Redux Toolkit',
      level: 'Mellem',
      duration: '4 uger',
      modules: 7,
    },
    {
      id: 5,
      slug: 'tailwind-css',
      title: 'Tailwind CSS for Developers',
      description: 'Byg moderne UI\'er hurtigt med Tailwind CSS',
      level: 'Begynder',
      duration: '2 uger',
      modules: 5,
    },
    {
      id: 6,
      slug: 'testing-react-apps',
      title: 'Testing React Applications',
      description: 'Lær at skrive tests for React-applikationer',
      level: 'Mellem',
      duration: '3 uger',
      modules: 6,
    },
  ];

  return (
    <>
      <Head>
        <title>Kurser | LearningLab</title>
      </Head>
      <div>
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold text-gray-900 dark:text-white">Alle Kurser</h1>
          
          <div className="flex space-x-2">
            <div className="relative">
              <input
                type="text"
                placeholder="Søg efter kurser..."
                className="pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
              <svg
                className="absolute left-3 top-2.5 h-5 w-5 text-gray-400 dark:text-gray-500"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
            
            <select className="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option value="">Alle niveauer</option>
              <option value="beginner">Begynder</option>
              <option value="intermediate">Mellem</option>
              <option value="advanced">Avanceret</option>
            </select>
          </div>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {courses.map((course) => (
            <Link href={`/courses/${course.slug}`} key={course.id}>
              <div className="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden hover:shadow-lg transition-shadow duration-300">
                <div className="h-40 bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
                  <span className="text-white text-xl font-bold">{course.title}</span>
                </div>
                <div className="p-4">
                  <h3 className="text-lg font-semibold text-gray-800 dark:text-white">{course.title}</h3>
                  <p className="text-sm text-gray-600 dark:text-gray-300 mt-1">{course.description}</p>
                  
                  <div className="flex items-center mt-4 text-xs text-gray-500 dark:text-gray-400">
                    <div className="flex items-center mr-4">
                      <svg className="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                      </svg>
                      <span>{course.level}</span>
                    </div>
                    
                    <div className="flex items-center mr-4">
                      <svg className="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      <span>{course.duration}</span>
                    </div>
                    
                    <div className="flex items-center">
                      <svg className="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                      </svg>
                      <span>{course.modules} moduler</span>
                    </div>
                  </div>
                </div>
              </div>
            </Link>
          ))}
        </div>
      </div>
    </>
  );
};

export default Courses;
</file>

<file path="apps/web/pages/lessons/[id].tsx">
// apps/web/pages/lessons/[id].tsx
import React from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import Link from 'next/link';

// Define types for our lesson data
interface LessonLink {
  id: number;
  title: string;
}

interface LessonContent {
  type: string;
  content: string;
}

interface Lesson {
  id: number;
  title: string;
  courseId: number;
  courseSlug: string;
  courseTitle: string;
  moduleId: number;
  moduleTitle: string;
  content: LessonContent[];
  prevLesson: LessonLink | null;
  nextLesson: LessonLink | null;
}

const LessonDetail: React.FC = () => {
  const router = useRouter();
  const { id } = router.query;

  // Mock lesson data - dynamisk baseret på id
  const getLessonData = (lessonId: string | string[] | undefined): Lesson => {
    // Default lesson
    const defaultLesson: Lesson = {
      id: 101,
      title: 'Hvad er React?',
      courseId: 1,
      courseSlug: 'react-fundamentals',
      courseTitle: 'React Fundamentals',
      moduleId: 1,
      moduleTitle: 'Introduktion til React',
      content: [
        {
          type: 'text',
          content: `
            <h2>Introduktion til React</h2>
            <p>React er et JavaScript-bibliotek til at bygge brugergrænseflader, udviklet og vedligeholdt af Facebook. Det blev først udgivet i 2013 og har siden da vokset til at blive et af de mest populære frontend-værktøjer.</p>
            
            <h3>Hvorfor React?</h3>
            <p>React løser mange af de udfordringer, som udviklere står over for, når de bygger komplekse brugergrænseflader:</p>
            <ul>
              <li><strong>Deklarativ kodestil:</strong> React gør det nemt at skabe interaktive UIs. Design simple visninger for hver tilstand i din applikation, og React vil effektivt opdatere og rendere de rette komponenter, når dine data ændrer sig.</li>
              <li><strong>Komponentbaseret:</strong> Byg indkapslede komponenter, der håndterer deres egen tilstand, og sammensæt dem for at lave komplekse brugergrænseflader.</li>
              <li><strong>Lær én gang, skriv overalt:</strong> React er ikke begrænset til web. Du kan også bygge mobile apps med React Native og endda desktop-applikationer.</li>
            </ul>
            
            <h3>Virtual DOM</h3>
            <p>En af de vigtigste funktioner i React er det virtuelle DOM (Document Object Model). I stedet for at opdatere DOM'en direkte, når din applikations tilstand ændrer sig, opdaterer React først en virtuel repræsentation af DOM'en. Derefter sammenligner den denne virtuelle repræsentation med den faktiske DOM og opdaterer kun de elementer, der er ændret.</p>
            <p>Dette gør React meget effektiv, da DOM-manipulationer er dyre operationer, der kan påvirke ydeevnen.</p>
            
            <h3>JSX</h3>
            <p>React bruger JSX, en syntaksudvidelse til JavaScript, der ligner HTML. Med JSX kan du skrive HTML-lignende kode i dine JavaScript-filer, hvilket gør det nemmere at visualisere UI'en, du bygger.</p>
            
            <pre><code>
            const element = &lt;h1&gt;Hello, world!&lt;/h1&gt;;
            </code></pre>
            
            <p>Dette er ikke en streng eller HTML - det er JSX, og det bliver kompileret til JavaScript-funktionskald.</p>
            
            <h3>Komponenter</h3>
            <p>Komponenter er byggestenene i React. En komponent er en isoleret del af UI'en, der har sin egen logik og præsentation. Komponenter kan være så små som en knap eller så store som en hel side.</p>
            
            <p>I de næste lektioner vil vi dykke dybere ned i, hvordan man opretter og bruger komponenter i React.</p>
          `,
        },
      ],
      prevLesson: null,
      nextLesson: {
        id: 102,
        title: 'Opsætning af udviklingsmiljø',
      },
    };

    // Lektion 2
    const lesson102: Lesson = {
      id: 102,
      title: 'Opsætning af udviklingsmiljø',
      courseId: 1,
      courseSlug: 'react-fundamentals',
      courseTitle: 'React Fundamentals',
      moduleId: 1,
      moduleTitle: 'Introduktion til React',
      content: [
        {
          type: 'text',
          content: `
            <h2>Opsætning af udviklingsmiljø til React</h2>
            <p>For at komme i gang med React, skal du have et udviklingsmiljø opsat. Der er flere måder at gøre dette på, men vi vil fokusere på den mest populære og anbefalede metode: Create React App.</p>
            
            <h3>Forudsætninger</h3>
            <p>Før du begynder, skal du sikre dig, at du har følgende installeret på din computer:</p>
            <ul>
              <li><strong>Node.js:</strong> React kræver Node.js version 14.0.0 eller nyere. Du kan downloade det fra <a href="https://nodejs.org/" target="_blank">nodejs.org</a>.</li>
              <li><strong>npm eller Yarn:</strong> Disse er pakkeforvaltere, der hjælper dig med at installere og administrere biblioteker og afhængigheder. npm kommer med Node.js, men du kan også bruge Yarn, hvis du foretrækker det.</li>
              <li><strong>En koderedigeringsværktøj:</strong> Vi anbefaler Visual Studio Code, men du kan bruge enhver editor, du er komfortabel med.</li>
            </ul>
            
            <h3>Oprettelse af et nyt React-projekt med Create React App</h3>
            <p>Create React App er et officielt understøttet værktøj til at oprette React-applikationer med en enkelt kommando. Det opsætter dit udviklingsmiljø, så du kan bruge de nyeste JavaScript-funktioner, giver en god udvikleroplevelse og optimerer din app til produktion.</p>
            
            <p>For at oprette et nyt projekt, åbn din terminal og kør følgende kommando:</p>
            
            <pre><code>
            npx create-react-app my-app
            cd my-app
            npm start
            </code></pre>
            
            <p>Dette vil oprette en ny mappe kaldet "my-app" med en grundlæggende React-applikation, installere alle nødvendige afhængigheder og starte en udviklingsserver.</p>
            
            <h3>Projektstruktur</h3>
            <p>Efter at have oprettet dit projekt, vil du se følgende mappestruktur:</p>
            
            <pre><code>
            my-app/
              README.md
              node_modules/
              package.json
              public/
                index.html
                favicon.ico
              src/
                App.css
                App.js
                App.test.js
                index.css
                index.js
                logo.svg
            </code></pre>
            
            <p>De vigtigste filer at være opmærksom på er:</p>
            <ul>
              <li><strong>public/index.html:</strong> HTML-skabelonen for din app.</li>
              <li><strong>src/index.js:</strong> JavaScript-indgangspunktet for din app.</li>
              <li><strong>src/App.js:</strong> En React-komponent, der repræsenterer din app.</li>
            </ul>
            
            <h3>Alternative metoder</h3>
            <p>Ud over Create React App er der andre populære værktøjer til at oprette React-applikationer:</p>
            <ul>
              <li><strong>Next.js:</strong> Et React-framework med server-side rendering og statisk site generation.</li>
              <li><strong>Gatsby:</strong> Et statisk site generator baseret på React.</li>
              <li><strong>Vite:</strong> Et nyere, hurtigere build-værktøj, der også understøtter React.</li>
            </ul>
            
            <p>I næste lektion vil vi dykke ned i at skrive din første React-komponent!</p>
          `,
        },
      ],
      prevLesson: {
        id: 101,
        title: 'Hvad er React?',
      },
      nextLesson: {
        id: 103,
        title: 'Din første React-komponent',
      },
    };

    // Lektion 3
    const lesson103: Lesson = {
      id: 103,
      title: 'Din første React-komponent',
      courseId: 1,
      courseSlug: 'react-fundamentals',
      courseTitle: 'React Fundamentals',
      moduleId: 1,
      moduleTitle: 'Introduktion til React',
      content: [
        {
          type: 'text',
          content: `
            <h2>Din første React-komponent</h2>
            <p>Nu hvor du har dit udviklingsmiljø opsat, er det tid til at skrive din første React-komponent. Komponenter er byggestenene i React, og de giver dig mulighed for at opdele din UI i uafhængige, genanvendelige dele.</p>
            
            <h3>Hvad er en komponent?</h3>
            <p>En React-komponent er en JavaScript-funktion eller klasse, der returnerer et React-element. Dette element beskriver, hvad der skal vises på skærmen.</p>
            
            <h3>Funktionelle komponenter</h3>
            <p>Den enkleste måde at definere en komponent på er at skrive en JavaScript-funktion:</p>
            
            <pre><code>
            function Welcome(props) {
              return &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;
            }
            </code></pre>
            
            <p>Denne funktion er en gyldig React-komponent, fordi den accepterer et enkelt "props" (som står for properties) objekt argument med data og returnerer et React-element.</p>
            
            <h3>Klasse-komponenter</h3>
            <p>Du kan også definere en komponent som en ES6-klasse:</p>
            
            <pre><code>
            class Welcome extends React.Component {
              render() {
                return &lt;h1&gt;Hello, {this.props.name}&lt;/h1&gt;;
              }
            }
            </code></pre>
            
            <p>Disse to komponenter er ækvivalente fra Reacts synspunkt, men funktionelle komponenter er nu den anbefalede tilgang, især med introduktionen af Hooks i React 16.8.</p>
            
            <h3>Oprettelse af en simpel komponent</h3>
            <p>Lad os oprette en simpel komponent i vores projekt. Åbn src/App.js og erstat indholdet med følgende:</p>
            
            <pre><code>
            import React from 'react';
            
            function App() {
              return (
                &lt;div className="App"&gt;
                  &lt;header className="App-header"&gt;
                    &lt;h1&gt;Min første React-app&lt;/h1&gt;
                    &lt;p&gt;
                      Velkommen til React!
                    &lt;/p&gt;
                  &lt;/header&gt;
                &lt;/div&gt;
              );
            }
            
            export default App;
            </code></pre>
            
            <p>Dette er en simpel funktionel komponent, der returnerer nogle JSX-elementer.</p>
            
            <h3>Brug af komponenter</h3>
            <p>Nu hvor vi har defineret vores App-komponent, kan vi bruge den i andre dele af vores applikation. React-komponenter skal starte med et stort bogstav, så React kan skelne dem fra almindelige HTML-tags.</p>
            
            <p>For eksempel, i src/index.js, bruger vi App-komponenten sådan her:</p>
            
            <pre><code>
            import React from 'react';
            import ReactDOM from 'react-dom';
            import './index.css';
            import App from './App';
            
            ReactDOM.render(
              &lt;React.StrictMode&gt;
                &lt;App /&gt;
              &lt;/React.StrictMode&gt;,
              document.getElementById('root')
            );
            </code></pre>
            
            <h3>Props: Passing Data to Components</h3>
            <p>En af de vigtigste funktioner i React er muligheden for at sende data til komponenter via props. Lad os oprette en ny komponent, der bruger props:</p>
            
            <pre><code>
            function Greeting(props) {
              return &lt;h1&gt;Hello, {props.name}!&lt;/h1&gt;;
            }
            
            function App() {
              return (
                &lt;div className="App"&gt;
                  &lt;Greeting name="Alice" /&gt;
                  &lt;Greeting name="Bob" /&gt;
                  &lt;Greeting name="Charlie" /&gt;
                &lt;/div&gt;
              );
            }
            </code></pre>
            
            <p>I dette eksempel sender vi en "name" prop til Greeting-komponenten, som derefter bruger denne værdi i sin rendering.</p>
            
            <h3>Sammenfatning</h3>
            <p>Tillykke! Du har nu oprettet din første React-komponent. I de næste lektioner vil vi udforske mere avancerede koncepter som state, lifecycle-metoder og hooks.</p>
          `,
        },
      ],
      prevLesson: {
        id: 102,
        title: 'Opsætning af udviklingsmiljø',
      },
      nextLesson: null,
    };

    // Map lesson ID to the correct lesson data
    const lessonMap: Record<string, Lesson> = {
      '101': defaultLesson,
      '102': lesson102,
      '103': lesson103,
    };

    // Return the lesson data based on the ID, or default if not found
    const idToUse = Array.isArray(lessonId) ? lessonId[0] : lessonId;
    return lessonMap[idToUse as string] || defaultLesson;
  };

  // Get the lesson data based on the ID
  const lesson = getLessonData(id);

  if (router.isFallback) {
    return <div className="text-center py-10">Indlæser lektion...</div>;
  }

  return (
    <>
      <Head>
        <title>{lesson.title} | {lesson.courseTitle} | LearningLab</title>
      </Head>
      <div>
        {/* Breadcrumb */}
        <nav className="flex mb-4 text-sm text-gray-500 dark:text-gray-400">
          <Link href="/courses" className="hover:text-gray-700 dark:hover:text-gray-200">
            Kurser
          </Link>
          <span className="mx-2">/</span>
          <Link href={`/courses/${lesson.courseSlug}`} className="hover:text-gray-700 dark:hover:text-gray-200">
            {lesson.courseTitle}
          </Link>
          <span className="mx-2">/</span>
          <span className="text-gray-700 dark:text-gray-200">{lesson.title}</span>
        </nav>
        
        {/* Lesson header */}
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6">
          <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">{lesson.title}</h1>
          <p className="text-gray-600 dark:text-gray-300">
            {lesson.moduleTitle} • Lektion {id}
          </p>
        </div>
        
        {/* Lesson content */}
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6">
          <div className="prose dark:prose-invert max-w-none">
            {lesson.content.map((block, index) => (
              <div key={index} dangerouslySetInnerHTML={{ __html: block.content }} />
            ))}
          </div>
        </div>
        
        {/* Lesson navigation */}
        <div className="flex justify-between">
          {lesson.prevLesson ? (
            <Link 
              href={`/lessons/${lesson.prevLesson.id}`}
              className="flex items-center px-4 py-2 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 rounded-md shadow hover:bg-gray-50 dark:hover:bg-gray-750"
            >
              <svg className="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
              </svg>
              {lesson.prevLesson.title}
            </Link>
          ) : (
            <div></div>
          )}
          
          {lesson.nextLesson && (
            <Link 
              href={`/lessons/${lesson.nextLesson.id}`}
              className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-md shadow hover:bg-blue-700"
            >
              {lesson.nextLesson.title}
              <svg className="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
              </svg>
            </Link>
          )}
        </div>
      </div>
    </>
  );
};

export default LessonDetail;
</file>

<file path="apps/web/pages/dashboard.tsx">
// apps/web/pages/dashboard.tsx
import React from 'react';
import Head from 'next/head';
import Link from 'next/link';

const Dashboard: React.FC = () => {
  return (
    <>
      <Head>
        <title>Dashboard | LearningLab</title>
      </Head>
      <div>
        <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">Dashboard</h1>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {/* Stats Card */}
          <div className="bg-blue-50 dark:bg-blue-900 p-6 rounded-lg shadow">
            <h2 className="text-lg font-semibold text-blue-700 dark:text-blue-200 mb-2">Aktive Kurser</h2>
            <p className="text-3xl font-bold text-blue-800 dark:text-blue-100">3</p>
          </div>
          
          {/* Stats Card */}
          <div className="bg-green-50 dark:bg-green-900 p-6 rounded-lg shadow">
            <h2 className="text-lg font-semibold text-green-700 dark:text-green-200 mb-2">Gennemførte Kurser</h2>
            <p className="text-3xl font-bold text-green-800 dark:text-green-100">2</p>
          </div>
          
          {/* Stats Card */}
          <div className="bg-purple-50 dark:bg-purple-900 p-6 rounded-lg shadow">
            <h2 className="text-lg font-semibold text-purple-700 dark:text-purple-200 mb-2">Samlet Fremskridt</h2>
            <p className="text-3xl font-bold text-purple-800 dark:text-purple-100">68%</p>
          </div>
        </div>
        
        <h2 className="text-xl font-semibold text-gray-800 dark:text-white mt-8 mb-4">Dine Kurser</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {/* Course Card */}
          <Link href="/courses/react-fundamentals" className="block">
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden hover:shadow-lg transition-shadow duration-300">
              <div className="h-40 bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
                <span className="text-white text-xl font-bold">React Fundamentals</span>
              </div>
              <div className="p-4">
                <h3 className="text-lg font-semibold text-gray-800 dark:text-white">Introduktion til React</h3>
                <p className="text-sm text-gray-600 dark:text-gray-300 mt-1">Lær grundlæggende React-koncepter og byg din første app</p>
                <div className="mt-4">
                  <div className="w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2.5">
                    <div className="bg-blue-600 h-2.5 rounded-full" style={{ width: '75%' }}></div>
                  </div>
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-1">75% gennemført</p>
                </div>
              </div>
            </div>
          </Link>
          
          {/* Course Card */}
          <Link href="/courses/typescript-basics" className="block">
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden hover:shadow-lg transition-shadow duration-300">
              <div className="h-40 bg-gradient-to-r from-green-500 to-teal-600 flex items-center justify-center">
                <span className="text-white text-xl font-bold">TypeScript Basics</span>
              </div>
              <div className="p-4">
                <h3 className="text-lg font-semibold text-gray-800 dark:text-white">TypeScript Fundamentals</h3>
                <p className="text-sm text-gray-600 dark:text-gray-300 mt-1">Bliv fortrolig med TypeScript og statisk typning</p>
                <div className="mt-4">
                  <div className="w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2.5">
                    <div className="bg-blue-600 h-2.5 rounded-full" style={{ width: '45%' }}></div>
                  </div>
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-1">45% gennemført</p>
                </div>
              </div>
            </div>
          </Link>
          
          {/* Course Card */}
          <Link href="/courses/nextjs-advanced" className="block">
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden hover:shadow-lg transition-shadow duration-300">
              <div className="h-40 bg-gradient-to-r from-indigo-500 to-purple-600 flex items-center justify-center">
                <span className="text-white text-xl font-bold">Next.js Advanced</span>
              </div>
              <div className="p-4">
                <h3 className="text-lg font-semibold text-gray-800 dark:text-white">Next.js Advanced</h3>
                <p className="text-sm text-gray-600 dark:text-gray-300 mt-1">Avancerede teknikker og best practices i Next.js</p>
                <div className="mt-4">
                  <div className="w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2.5">
                    <div className="bg-blue-600 h-2.5 rounded-full" style={{ width: '20%' }}></div>
                  </div>
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-1">20% gennemført</p>
                </div>
              </div>
            </div>
          </Link>
        </div>
      </div>
    </>
  );
};

export default Dashboard;
</file>

<file path="apps/web/pages/index.tsx">
import { useEffect } from 'react';
import { useRouter } from 'next/router';
import { useHelloQuery } from "../src/store/services/api";

export default function Home() {
  const router = useRouter();
  const { data } = useHelloQuery();
  
  useEffect(() => {
    // Redirect to dashboard
    router.push('/dashboard');
  }, [router]);

  return null; // No need to render anything as we're redirecting
}
</file>

<file path="apps/web/src/components/auth/ProtectedRoute.tsx">
// apps/web/src/components/auth/ProtectedRoute.tsx
import React, { ReactNode, useEffect } from 'react';
import { useRouter } from 'next/router';
import { useAuth } from '../../context/AuthContext';

interface ProtectedRouteProps {
  children: ReactNode;
}

export default function ProtectedRoute({ children }: ProtectedRouteProps) {
  const { user, isLoading: authIsLoading } = useAuth();
  const router = useRouter();

  // ▶️ Hook now always runs, before any returns:
  useEffect(() => {
    if (!authIsLoading && !user) {
      console.log('ProtectedRoute: Ingen bruger, omdirigerer til /login');
      router.replace('/login');
    }
  }, [authIsLoading, user, router]);

  // ⏳ While auth state is initializing:
  if (authIsLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen bg-gray-100 font-inter">
        <div className="p-8 text-center">
          <svg
            className="animate-spin h-10 w-10 text-indigo-600 mx-auto mb-4"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
          >
            <circle
              className="opacity-25"
              cx="12"
              cy="12"
              r="10"
              stroke="currentColor"
              strokeWidth="4"
            />
            <path
              className="opacity-75"
              fill="currentColor"
              d="M4 12a8 8 0 018-8V0C5.373 0 0
                 5.373 0 12h4zm2 5.291A7.962
                 7.962 0 014 12H0c0 3.042 1.135
                 5.824 3 7.938l3-2.647z"
            />
          </svg>
          <p className="text-lg text-gray-700">Verificerer adgang...</p>
        </div>
      </div>
    );
  }

  // ✅ If we have a user, render the protected content:
  if (user) {
    return <>{children}</>;
  }

  // 🔄 Otherwise (not loading & no user), show a redirecting spinner:
  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100 font-inter">
      <div className="p-8 text-center">
        <svg
          className="animate-spin h-10 w-10 text-indigo-600 mx-auto mb-4"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
        >
          <circle
            className="opacity-25"
            cx="12"
            cy="12"
            r="10"
            stroke="currentColor"
            strokeWidth="4"
          />
          <path
            className="opacity-75"
            fill="currentColor"
            d="M4 12a8 8 0 018-8V0C5.373 0 0
               5.373 0 12h4zm2 5.291A7.962
               7.962 0 014 12H0c0 3.042 1.135
               5.824 3 7.938l3-2.647z"
          />
        </svg>
        <p className="text-lg text-gray-700">Omdirigerer...</p>
      </div>
    </div>
  );
}
</file>

<file path="apps/web/src/components/layout/Layout.tsx">
// apps/web/src/components/layout/Layout.tsx
import React, { useState, ReactNode } from 'react';
import Header from './Header';
import Sidebar from './Sidebar';
import OfflineIndicator from '../common/OfflineIndicator';

interface LayoutProps {
  children: ReactNode;
}

const Layout: React.FC<LayoutProps> = ({ children }) => {
  const [sidebarOpen, setSidebarOpen] = useState(false);

  const toggleSidebar = () => {
    setSidebarOpen(!sidebarOpen);
  };

  return (
    <div className="min-h-screen bg-gray-100 dark:bg-gray-900 flex flex-col">
      <Header />
      
      <div className="flex flex-1 overflow-hidden">
        <Sidebar isOpen={sidebarOpen} toggleSidebar={toggleSidebar} />
        
        <main className="flex-1 overflow-y-auto p-4 sm:p-6 lg:p-8">
          {/* Mobile sidebar toggle button */}
          <button
            onClick={toggleSidebar}
            className="lg:hidden mb-4 p-2 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 focus:outline-none"
            aria-label="Open sidebar"
          >
            <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button>
          
          {/* Page content */}
          <div className="bg-white dark:bg-gray-800 shadow rounded-lg p-4 sm:p-6">
            {children}
          </div>
          
          {/* Offline indicator */}
          <OfflineIndicator />
        </main>
      </div>
    </div>
  );
};

export default Layout;
</file>

<file path="apps/web/src/components/quiz/QuizNavigation.tsx">
import React from 'react';
import { useQuiz } from '../../context/QuizContext';

const QuizNavigation: React.FC = () => {
  const { 
    goToNextQuestion, 
    goToPreviousQuestion, 
    isFirstQuestion, 
    isLastQuestion,
    currentQuestionIndex,
    totalQuestions,
    hasAnsweredCurrentQuestion,
    submitQuiz,
    isSubmitted
  } = useQuiz();

  const handlePrevious = () => {
    console.log('Previous button clicked');
    if (!isFirstQuestion) {
      goToPreviousQuestion();
    }
  };
  
  const handleNext = () => {
    console.log('Next button clicked');
    // Allow navigation even if the question hasn't been answered
    // This makes the UI more flexible
    if (!isLastQuestion) {
      goToNextQuestion();
    }
  };
  
  const handleSubmit = () => {
    console.log('Submit button clicked');
    if (!isSubmitted) {
      submitQuiz();
    }
  };
  
  return (
    <div className="flex justify-between items-center mt-6">
      <button
        onClick={handlePrevious}
        disabled={isFirstQuestion}
        className={`px-4 py-2 rounded-md flex items-center ${
          isFirstQuestion
            ? 'bg-gray-200 text-gray-500 cursor-not-allowed dark:bg-gray-700 dark:text-gray-400'
            : 'bg-white text-gray-700 hover:bg-gray-50 hover:shadow active:shadow-inner active:translate-y-0.5 dark:bg-gray-800 dark:text-gray-200 dark:hover:bg-gray-750'
        } border border-gray-300 dark:border-gray-600 shadow-sm transition-all duration-150`}
      >
        <svg className="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
        </svg>
        Forrige
      </button>
      
      <div className="text-sm text-gray-500 dark:text-gray-400">
        Spørgsmål {currentQuestionIndex + 1} af {totalQuestions}
      </div>
      
      {isLastQuestion ? (
        <button
          onClick={handleSubmit}
          disabled={isSubmitted}
          className={`px-4 py-2 rounded-md flex items-center ${
            isSubmitted
              ? 'bg-gray-200 text-gray-500 cursor-not-allowed dark:bg-gray-700 dark:text-gray-400'
              : 'bg-blue-600 text-white hover:bg-blue-700 hover:shadow active:shadow-inner active:translate-y-0.5 dark:bg-blue-500 dark:hover:bg-blue-600'
          } shadow-sm transition-all duration-150`}
        >
          Afslut Quiz
          <svg className="h-5 w-5 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
          </svg>
        </button>
      ) : (
        <button
          onClick={handleNext}
          className="px-4 py-2 rounded-md flex items-center bg-blue-600 text-white hover:bg-blue-700 hover:shadow active:shadow-inner active:translate-y-0.5 dark:bg-blue-500 dark:hover:bg-blue-600 shadow-sm transition-all duration-150"
        >
          Næste
          <svg className="h-5 w-5 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
          </svg>
        </button>
      )}
    </div>
  );
};

export default QuizNavigation;
</file>

<file path="apps/web/src/components/quiz/QuizQuestion.tsx">
import React from 'react';
import { Question, AnswerOption } from '@repo/core/src/types/quiz.types';
import { useQuiz } from '../../context/QuizContext';

// Extended Question type for our application
interface ExtendedQuestion extends Question {
  explanation?: string;
}

interface QuizQuestionProps {
  question: ExtendedQuestion;
  options: AnswerOption[];
  selectedOptionId?: number;
  isSubmitted?: boolean;
}

const QuizQuestion: React.FC<QuizQuestionProps> = ({
  question,
  options,
  selectedOptionId,
  isSubmitted = false
}) => {
  const { selectAnswer, isSubmitted: quizSubmitted } = useQuiz();
  const showFeedback = isSubmitted || quizSubmitted;

  const handleOptionSelect = (optionId: number) => {
    console.log('Option clicked:', optionId);
    // Always try to select the answer, even if showFeedback is true
    // This ensures the selection works even if there are timing issues
    console.log('Selecting answer:', question.id, optionId);
    selectAnswer(question.id, optionId);
  };

  return (
    <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
      <h3 className="text-xl font-semibold text-gray-800 dark:text-white mb-4">
        {question.text}
      </h3>
      
      <div className="space-y-3">
        {options.map((option) => {
          const isSelected = selectedOptionId === option.id;
          const isCorrect = option.isCorrect;
          
          let optionClasses = "flex items-center p-4 border rounded-md cursor-pointer transition-colors";
          
          if (!showFeedback) {
            optionClasses += isSelected
              ? " border-blue-500 bg-blue-50 dark:bg-blue-900/20 dark:border-blue-400"
              : " border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-750";
          } else {
            if (isSelected && isCorrect) {
              optionClasses += " border-green-500 bg-green-50 dark:bg-green-900/20 dark:border-green-400";
            } else if (isSelected && !isCorrect) {
              optionClasses += " border-red-500 bg-red-50 dark:bg-red-900/20 dark:border-red-400";
            } else if (!isSelected && isCorrect) {
              optionClasses += " border-green-500 bg-green-50 dark:bg-green-900/20 dark:border-green-400";
            } else {
              optionClasses += " border-gray-200 dark:border-gray-700";
            }
          }
          
          return (
            <div
              key={option.id}
              className={`${optionClasses} hover:shadow-md active:shadow-inner active:translate-y-0.5 transition-all duration-150`}
              onClick={() => handleOptionSelect(option.id)}
              role="button"
              tabIndex={0}
              aria-pressed={isSelected}
              onKeyDown={(e) => {
                if (e.key === 'Enter' || e.key === ' ') {
                  handleOptionSelect(option.id);
                }
              }}
            >
              <div className="flex-1">
                <p className="text-gray-700 dark:text-gray-200">{option.text}</p>
              </div>
              
              {showFeedback && (
                <div className="ml-3">
                  {isCorrect ? (
                    <svg className="h-6 w-6 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                  ) : isSelected ? (
                    <svg className="h-6 w-6 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  ) : null}
                </div>
              )}
            </div>
          );
        })}
      </div>
      
      {showFeedback && question.explanation && (
        <div className="mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-md">
          <h4 className="font-medium text-blue-800 dark:text-blue-300 mb-1">Forklaring</h4>
          <p className="text-blue-700 dark:text-blue-200">{question.explanation}</p>
        </div>
      )}
    </div>
  );
};

export default QuizQuestion;
</file>

<file path="apps/web/src/context/QuizContext.tsx">
import React, { createContext, useContext, useState, ReactNode } from 'react';
import { 
  Quiz, 
  Question, 
  AnswerOption, 
  UserAnswer 
} from '@repo/core/src/types/quiz.types';

// Extended Quiz type for our application
interface ExtendedQuiz extends Quiz {
  questions?: Question[];
  answerOptions?: Record<number, AnswerOption[]>;
  passingScore?: number;
}

interface QuizContextType {
  quiz: ExtendedQuiz | null;
  currentQuestionIndex: number;
  userAnswers: Record<number, number>; // questionId -> selectedOptionId
  isSubmitting: boolean;
  isSubmitted: boolean;
  score: number | null;
  
  // Actions
  setQuiz: (quiz: ExtendedQuiz) => void;
  goToNextQuestion: () => void;
  goToPreviousQuestion: () => void;
  selectAnswer: (questionId: number, optionId: number) => void;
  submitQuiz: () => void;
  resetQuiz: () => void;
  
  // Computed values
  currentQuestion: Question | null;
  totalQuestions: number;
  isLastQuestion: boolean;
  isFirstQuestion: boolean;
  hasAnsweredCurrentQuestion: boolean;
}

const QuizContext = createContext<QuizContextType | undefined>(undefined);

interface QuizProviderProps {
  children: ReactNode;
}

export const QuizProvider: React.FC<QuizProviderProps> = ({ children }) => {
  const [quiz, setQuiz] = useState<ExtendedQuiz | null>(null);
  const [questions, setQuestions] = useState<Question[]>([]);
  const [answerOptions, setAnswerOptions] = useState<Record<number, AnswerOption[]>>({});
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [userAnswers, setUserAnswers] = useState<Record<number, number>>({});
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [score, setScore] = useState<number | null>(null);

  // Set quiz data
  const handleSetQuiz = (quizData: ExtendedQuiz) => {
    console.log('Setting quiz data in context:', { 
      quizId: quizData.id, 
      hasQuestions: !!quizData.questions,
      questionsCount: quizData.questions?.length || 0
    });
    
    setQuiz(quizData);
    
    if (quizData.questions && quizData.questions.length > 0) {
      console.log('Setting questions:', quizData.questions.length);
      setQuestions(quizData.questions);
    }
    
    if (quizData.answerOptions) {
      console.log('Setting answer options');
      setAnswerOptions(quizData.answerOptions);
    }
    
    // Reset state when loading a new quiz
    setCurrentQuestionIndex(0);
    setUserAnswers({});
    setIsSubmitted(false);
    setScore(null);
  };

  // Navigation
  const goToNextQuestion = () => {
    if (currentQuestionIndex < questions.length - 1) {
      setCurrentQuestionIndex(currentQuestionIndex + 1);
    }
  };

  const goToPreviousQuestion = () => {
    if (currentQuestionIndex > 0) {
      setCurrentQuestionIndex(currentQuestionIndex - 1);
    }
  };

  // Answer selection
  const selectAnswer = (questionId: number, optionId: number) => {
    setUserAnswers({
      ...userAnswers,
      [questionId]: optionId
    });
  };

  // Quiz submission
  const submitQuiz = () => {
    if (!quiz) return;
    
    setIsSubmitting(true);
    
    // Calculate score
    let correctAnswers = 0;
    let totalAnswered = 0;
    
    questions.forEach(question => {
      const selectedOptionId = userAnswers[question.id];
      if (selectedOptionId) {
        totalAnswered++;
        const selectedOption = answerOptions[question.id]?.find(
          option => option.id === selectedOptionId
        );
        if (selectedOption?.isCorrect) {
          correctAnswers++;
        }
      }
    });
    
    const calculatedScore = totalAnswered > 0 
      ? Math.round((correctAnswers / questions.length) * 100) 
      : 0;
    
    setScore(calculatedScore);
    setIsSubmitted(true);
    setIsSubmitting(false);
  };

  // Reset quiz state
  const resetQuiz = () => {
    setUserAnswers({});
    setCurrentQuestionIndex(0);
    setIsSubmitted(false);
    setScore(null);
  };

  // Computed values
  const currentQuestion = questions[currentQuestionIndex] || null;
  const totalQuestions = questions.length;
  const isLastQuestion = currentQuestionIndex === totalQuestions - 1;
  const isFirstQuestion = currentQuestionIndex === 0;
  const hasAnsweredCurrentQuestion = currentQuestion 
    ? !!userAnswers[currentQuestion.id] 
    : false;

  const value = {
    quiz,
    currentQuestionIndex,
    userAnswers,
    isSubmitting,
    isSubmitted,
    score,
    
    setQuiz: handleSetQuiz,
    goToNextQuestion,
    goToPreviousQuestion,
    selectAnswer,
    submitQuiz,
    resetQuiz,
    
    currentQuestion,
    totalQuestions,
    isLastQuestion,
    isFirstQuestion,
    hasAnsweredCurrentQuestion
  };

  return (
    <QuizContext.Provider value={value}>
      {children}
    </QuizContext.Provider>
  );
};

export const useQuiz = (): QuizContextType => {
  const context = useContext(QuizContext);
  if (context === undefined) {
    throw new Error('useQuiz must be used within a QuizProvider');
  }
  return context;
};
</file>

<file path="apps/web/src/screens/auth/reset-password/reset-password.tsx">
// apps/web/src/screens/auth/reset-password/reset-password.tsx
import React, { useState, FormEvent, useEffect } from 'react';
import { useRouter } from 'next/router';
import { useAuth } from '../../../context/AuthContext';

export function ResetPasswordScreen() {
  const router = useRouter();
  const { token: queryToken } = router.query; // Hent token fra URL query parameter
  const { resetPassword, isLoading: authIsLoading } = useAuth();

  const [token, setToken] = useState<string>('');
  const [newPassword, setNewPassword] = useState<string>('');
  const [confirmPassword, setConfirmPassword] = useState<string>('');
  const [error, setError] = useState<string | null>(null);
  const [successMessage, setSuccessMessage] = useState<string | null>(null);

  // Sæt token fra URL, når komponenten mounter, hvis det findes
  useEffect(() => {
    if (queryToken && typeof queryToken === 'string') {
      setToken(queryToken);
    }
  }, [queryToken]);

  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    setError(null);
    setSuccessMessage(null);

    if (newPassword !== confirmPassword) {
      setError('De nye adgangskoder matcher ikke.');
      return;
    }

    if (!token) {
        setError('Password reset token mangler. Prøv at anmode om et nyt nulstillingslink.');
        return;
    }

    try {
      // Brug resetPassword funktionen fra AuthContext
      const message = await resetPassword(token, newPassword, confirmPassword);
      
      console.log('Nulstilling af adgangskode succesfuld');
      setSuccessMessage(message || 'Din adgangskode er blevet nulstillet! Du bliver nu sendt til login-siden.');
      
      // Omdiriger til login-siden efter en kort pause
      setTimeout(() => {
        router.push('/login');
      }, 3000); // 3 sekunders forsinkelse

    } catch (err: any) {
      console.error('Fejl ved nulstilling af adgangskode:', err);
      setError(err.message || 'Der opstod en uventet fejl.');
    }
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100 font-inter">
      <div className="w-full max-w-md p-8 space-y-6 bg-white rounded-xl shadow-xl">
        <h2 className="text-3xl font-bold text-center text-gray-900">
          Nulstil Adgangskode
        </h2>
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Token felt (kan være skjult eller forudfyldt fra URL) */}
          <div>
            <label
              htmlFor="token"
              className="block text-sm font-medium text-gray-700"
            >
              Nulstillings-token
            </label>
            <input
              id="token"
              name="token"
              type="text"
              required
              value={token}
              onChange={(e) => setToken(e.target.value)}
              disabled={authIsLoading || !!successMessage || !!queryToken} // Deaktiver hvis token kommer fra URL
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-100"
              placeholder="Indsæt dit token her"
            />
             {queryToken && <p className="mt-1 text-xs text-gray-500">Token hentet fra URL.</p>}
          </div>

          {/* Nyt Password felt */}
          <div>
            <label
              htmlFor="newPassword"
              className="block text-sm font-medium text-gray-700"
            >
              Ny Adgangskode
            </label>
            <input
              id="newPassword"
              name="newPassword"
              type="password"
              autoComplete="new-password"
              required
              value={newPassword}
              onChange={(e) => setNewPassword(e.target.value)}
              disabled={authIsLoading || !!successMessage}
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50"
              placeholder="Din nye adgangskode"
            />
          </div>

          {/* Bekræft Nyt Password felt */}
          <div>
            <label
              htmlFor="confirmPassword"
              className="block text-sm font-medium text-gray-700"
            >
              Bekræft Ny Adgangskode
            </label>
            <input
              id="confirmPassword"
              name="confirmPassword"
              type="password"
              autoComplete="new-password"
              required
              value={confirmPassword}
              onChange={(e) => setConfirmPassword(e.target.value)}
              disabled={authIsLoading || !!successMessage}
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50"
              placeholder="Gentag ny adgangskode"
            />
          </div>
          
          {/* Fejlmeddelelse */}
          {error && (
            <div className="p-3 text-sm text-red-700 bg-red-100 border border-red-400 rounded-md">
              {error}
            </div>
          )}

          {/* Succesmeddelelse */}
          {successMessage && (
            <div className="p-3 text-sm text-green-700 bg-green-100 border border-green-400 rounded-md">
              {successMessage}
            </div>
          )}

          {/* Submit knap */}
          <div>
            <button
              type="submit"
              disabled={authIsLoading || !!successMessage}
              className="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400 disabled:cursor-not-allowed transition-colors duration-150"
            >
              {authIsLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : (
                'Nulstil Adgangskode'
              )}
            </button>
          </div>
        </form>
        <p className="text-sm text-center text-gray-600">
          Husker du din adgangskode?{' '}
          <a href="/login" className="font-medium text-indigo-600 hover:text-indigo-500">
            Log ind
          </a>
        </p>
      </div>
    </div>
  );
}
</file>

<file path="apps/web/src/screens/auth/signup/signup.tsx">
// apps/web/src/screens/auth/signup/signup.tsx
import React, { useState, FormEvent } from 'react';
import { useRouter } from 'next/router';
import { useAuth } from '../../../context/AuthContext';

export function SignupScreen() {
  const router = useRouter();
  const { signup, isLoading: authIsLoading } = useAuth();

  const [name, setName] = useState<string>('');
  const [email, setEmail] = useState<string>('');
  const [password, setPassword] = useState<string>('');
  const [confirmPassword, setConfirmPassword] = useState<string>('');
  const [error, setError] = useState<string | null>(null);
  const [successMessage, setSuccessMessage] = useState<string | null>(null);

  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    setError(null);
    setSuccessMessage(null);

    if (password !== confirmPassword) {
      setError('Adgangskoderne matcher ikke.');
      return;
    }

    try {
      // Brug signup funktionen fra AuthContext
      await signup(name || undefined, email, password);
      
      console.log('Registrering succesfuld');
      setSuccessMessage('Din konto er blevet oprettet! Du bliver nu sendt til login-siden.');
      
      // Omdiriger til login-siden efter en kort pause, så brugeren kan se succesbeskeden.
      setTimeout(() => {
        router.push('/login');
      }, 3000); // 3 sekunders forsinkelse

    } catch (err: any) {
      console.error('Registreringsfejl:', err);
      setError(err.message || 'Der opstod en uventet fejl under registrering.');
    }
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100 font-inter">
      <div className="w-full max-w-md p-8 space-y-6 bg-white rounded-xl shadow-xl">
        <h2 className="text-3xl font-bold text-center text-gray-900">
          Opret en ny konto
        </h2>
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Navn felt (valgfrit) */}
          <div>
            <label
              htmlFor="name"
              className="block text-sm font-medium text-gray-700"
            >
              Navn (valgfrit)
            </label>
            <input
              id="name"
              name="name"
              type="text"
              autoComplete="name"
              value={name}
              onChange={(e) => setName(e.target.value)}
              disabled={authIsLoading}
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50"
              placeholder="Dit fulde navn"
            />
          </div>

          {/* Email felt */}
          <div>
            <label
              htmlFor="email"
              className="block text-sm font-medium text-gray-700"
            >
              Emailadresse
            </label>
            <input
              id="email"
              name="email"
              type="email"
              autoComplete="email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              disabled={authIsLoading}
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50"
              placeholder="din@email.com"
            />
          </div>

          {/* Password felt */}
          <div>
            <label
              htmlFor="password"
              className="block text-sm font-medium text-gray-700"
            >
              Adgangskode
            </label>
            <input
              id="password"
              name="password"
              type="password"
              autoComplete="new-password"
              required
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              disabled={authIsLoading}
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50"
              placeholder="Vælg en stærk adgangskode"
            />
          </div>

          {/* Bekræft Password felt */}
          <div>
            <label
              htmlFor="confirmPassword"
              className="block text-sm font-medium text-gray-700"
            >
              Bekræft adgangskode
            </label>
            <input
              id="confirmPassword"
              name="confirmPassword"
              type="password"
              autoComplete="new-password"
              required
              value={confirmPassword}
              onChange={(e) => setConfirmPassword(e.target.value)}
              disabled={authIsLoading}
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50"
              placeholder="Gentag din adgangskode"
            />
          </div>
          
          {/* Fejlmeddelelse */}
          {error && (
            <div className="p-3 text-sm text-red-700 bg-red-100 border border-red-400 rounded-md">
              {error}
            </div>
          )}

          {/* Succesmeddelelse */}
          {successMessage && (
            <div className="p-3 text-sm text-green-700 bg-green-100 border border-green-400 rounded-md">
              {successMessage}
            </div>
          )}

          {/* Submit knap */}
          <div>
            <button
              type="submit"
              disabled={authIsLoading || !!successMessage} // Deaktiver også hvis succesbesked vises
              className="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400 disabled:cursor-not-allowed transition-colors duration-150"
            >
              {authIsLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  {/* ... spinner SVG ... */}
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : (
                'Opret konto'
              )}
            </button>
          </div>
        </form>
        <p className="text-sm text-center text-gray-600">
          Har du allerede en konto?{' '}
          <a href="/login" className="font-medium text-indigo-600 hover:text-indigo-500">
            Log ind her
          </a>
        </p>
      </div>
    </div>
  );
}
</file>

<file path="apps/web/.eslintrc.js">
module.exports = require("@repo/config/eslint-preset");
</file>

<file path="apps/web/jest.config.js">
const nextJest = require("next/jest");

const createJestConfig = nextJest({
  // Provide the path to your Next.js app to load next.config.js and .env files in your test environment
  dir: "./",
});

// Add any custom config to be passed to Jest
const customJestConfig = {
  // Add more setup options before each test is run
 setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],
  // if using TypeScript with a baseUrl set to the root directory then you need the below for alias' to work
  moduleDirectories: ["node_modules", "<rootDir>/"],
  testEnvironment: "jest-environment-jsdom",
};

// createJestConfig is exported this way to ensure that next/jest can load the Next.js config which is async
module.exports = createJestConfig(customJestConfig);
</file>

<file path="apps/web/postcss.config.js">
module.exports = require("@repo/config/postcss.config.js");
</file>

<file path="apps/web/tsconfig.json">
{
  "extends": "../../packages/tsconfig/nextjs.json",
  "compilerOptions": {
    "baseUrl": ".", // Eller "./src" for at bruge paths-aliaset nedenfor
    "rootDir": "src", // Antager at din kildekode er i en 'src' mappe
    // "paths": { // Valgfrit: Hvis baseUrl er "./src"
    //   "@/*": ["*"]
    // }
  },
  "include": ["next-env.d.ts", "src"],
  "exclude": ["node_modules"],
  "references": [
    { "path": "../../packages/ui" },
    { "path": "../../packages/core" },
    { "path": "../../packages/config" }
  ]
}
</file>

<file path="apps/web/tsconfig.tsbuildinfo">
{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.es2021.d.ts","../../node_modules/typescript/lib/lib.es2022.d.ts","../../node_modules/typescript/lib/lib.es2023.d.ts","../../node_modules/typescript/lib/lib.es2024.d.ts","../../node_modules/typescript/lib/lib.esnext.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../node_modules/typescript/lib/lib.es2023.intl.d.ts","../../node_modules/typescript/lib/lib.es2024.arraybuffer.d.ts","../../node_modules/typescript/lib/lib.es2024.collection.d.ts","../../node_modules/typescript/lib/lib.es2024.object.d.ts","../../node_modules/typescript/lib/lib.es2024.promise.d.ts","../../node_modules/typescript/lib/lib.es2024.regexp.d.ts","../../node_modules/typescript/lib/lib.es2024.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2024.string.d.ts","../../node_modules/typescript/lib/lib.esnext.array.d.ts","../../node_modules/typescript/lib/lib.esnext.collection.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.disposable.d.ts","../../node_modules/typescript/lib/lib.esnext.promise.d.ts","../../node_modules/typescript/lib/lib.esnext.decorators.d.ts","../../node_modules/typescript/lib/lib.esnext.iterator.d.ts","../../node_modules/typescript/lib/lib.esnext.float16.d.ts","../../node_modules/typescript/lib/lib.decorators.d.ts","../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../node_modules/next/dist/styled-jsx/types/css.d.ts","../../node_modules/@types/react/global.d.ts","../../node_modules/csstype/index.d.ts","../../node_modules/@types/prop-types/index.d.ts","../../node_modules/@types/react/index.d.ts","../../node_modules/next/dist/styled-jsx/types/index.d.ts","../../node_modules/next/dist/styled-jsx/types/macro.d.ts","../../node_modules/next/dist/styled-jsx/types/style.d.ts","../../node_modules/next/dist/styled-jsx/types/global.d.ts","../../node_modules/next/dist/shared/lib/amp.d.ts","../../node_modules/next/amp.d.ts","./node_modules/@types/node/compatibility/disposable.d.ts","./node_modules/@types/node/compatibility/indexable.d.ts","./node_modules/@types/node/compatibility/iterators.d.ts","./node_modules/@types/node/compatibility/index.d.ts","./node_modules/@types/node/globals.typedarray.d.ts","./node_modules/@types/node/buffer.buffer.d.ts","../../node_modules/buffer/index.d.ts","./node_modules/undici-types/header.d.ts","./node_modules/undici-types/readable.d.ts","./node_modules/undici-types/file.d.ts","./node_modules/undici-types/fetch.d.ts","./node_modules/undici-types/formdata.d.ts","./node_modules/undici-types/connector.d.ts","./node_modules/undici-types/client.d.ts","./node_modules/undici-types/errors.d.ts","./node_modules/undici-types/dispatcher.d.ts","./node_modules/undici-types/global-dispatcher.d.ts","./node_modules/undici-types/global-origin.d.ts","./node_modules/undici-types/pool-stats.d.ts","./node_modules/undici-types/pool.d.ts","./node_modules/undici-types/handlers.d.ts","./node_modules/undici-types/balanced-pool.d.ts","./node_modules/undici-types/agent.d.ts","./node_modules/undici-types/mock-interceptor.d.ts","./node_modules/undici-types/mock-agent.d.ts","./node_modules/undici-types/mock-client.d.ts","./node_modules/undici-types/mock-pool.d.ts","./node_modules/undici-types/mock-errors.d.ts","./node_modules/undici-types/proxy-agent.d.ts","./node_modules/undici-types/env-http-proxy-agent.d.ts","./node_modules/undici-types/retry-handler.d.ts","./node_modules/undici-types/retry-agent.d.ts","./node_modules/undici-types/api.d.ts","./node_modules/undici-types/interceptors.d.ts","./node_modules/undici-types/util.d.ts","./node_modules/undici-types/cookies.d.ts","./node_modules/undici-types/patch.d.ts","./node_modules/undici-types/websocket.d.ts","./node_modules/undici-types/eventsource.d.ts","./node_modules/undici-types/filereader.d.ts","./node_modules/undici-types/diagnostics-channel.d.ts","./node_modules/undici-types/content-type.d.ts","./node_modules/undici-types/cache.d.ts","./node_modules/undici-types/index.d.ts","./node_modules/@types/node/globals.d.ts","./node_modules/@types/node/assert.d.ts","./node_modules/@types/node/assert/strict.d.ts","./node_modules/@types/node/async_hooks.d.ts","./node_modules/@types/node/buffer.d.ts","./node_modules/@types/node/child_process.d.ts","./node_modules/@types/node/cluster.d.ts","./node_modules/@types/node/console.d.ts","./node_modules/@types/node/constants.d.ts","./node_modules/@types/node/crypto.d.ts","./node_modules/@types/node/dgram.d.ts","./node_modules/@types/node/diagnostics_channel.d.ts","./node_modules/@types/node/dns.d.ts","./node_modules/@types/node/dns/promises.d.ts","./node_modules/@types/node/domain.d.ts","./node_modules/@types/node/dom-events.d.ts","./node_modules/@types/node/events.d.ts","./node_modules/@types/node/fs.d.ts","./node_modules/@types/node/fs/promises.d.ts","./node_modules/@types/node/http.d.ts","./node_modules/@types/node/http2.d.ts","./node_modules/@types/node/https.d.ts","./node_modules/@types/node/inspector.d.ts","./node_modules/@types/node/module.d.ts","./node_modules/@types/node/net.d.ts","./node_modules/@types/node/os.d.ts","./node_modules/@types/node/path.d.ts","./node_modules/@types/node/perf_hooks.d.ts","./node_modules/@types/node/process.d.ts","./node_modules/@types/node/punycode.d.ts","./node_modules/@types/node/querystring.d.ts","./node_modules/@types/node/readline.d.ts","./node_modules/@types/node/readline/promises.d.ts","./node_modules/@types/node/repl.d.ts","./node_modules/@types/node/sea.d.ts","./node_modules/@types/node/stream.d.ts","./node_modules/@types/node/stream/promises.d.ts","./node_modules/@types/node/stream/consumers.d.ts","./node_modules/@types/node/stream/web.d.ts","./node_modules/@types/node/string_decoder.d.ts","./node_modules/@types/node/test.d.ts","./node_modules/@types/node/timers.d.ts","./node_modules/@types/node/timers/promises.d.ts","./node_modules/@types/node/tls.d.ts","./node_modules/@types/node/trace_events.d.ts","./node_modules/@types/node/tty.d.ts","./node_modules/@types/node/url.d.ts","./node_modules/@types/node/util.d.ts","./node_modules/@types/node/v8.d.ts","./node_modules/@types/node/vm.d.ts","./node_modules/@types/node/wasi.d.ts","./node_modules/@types/node/worker_threads.d.ts","./node_modules/@types/node/zlib.d.ts","./node_modules/@types/node/index.d.ts","../../node_modules/next/dist/server/get-page-files.d.ts","../../node_modules/@types/react/canary.d.ts","../../node_modules/@types/react/experimental.d.ts","../../node_modules/@types/react-dom/index.d.ts","../../node_modules/@types/react-dom/canary.d.ts","../../node_modules/@types/react-dom/experimental.d.ts","../../node_modules/next/dist/compiled/webpack/webpack.d.ts","../../node_modules/next/dist/server/config.d.ts","../../node_modules/next/dist/lib/load-custom-routes.d.ts","../../node_modules/next/dist/shared/lib/image-config.d.ts","../../node_modules/next/dist/build/webpack/plugins/subresource-integrity-plugin.d.ts","../../node_modules/next/dist/server/body-streams.d.ts","../../node_modules/next/dist/server/future/route-kind.d.ts","../../node_modules/next/dist/server/future/route-definitions/route-definition.d.ts","../../node_modules/next/dist/server/future/route-matches/route-match.d.ts","../../node_modules/next/dist/client/components/app-router-headers.d.ts","../../node_modules/next/dist/server/request-meta.d.ts","../../node_modules/next/dist/server/config-shared.d.ts","../../node_modules/next/dist/server/base-http/index.d.ts","../../node_modules/next/dist/server/api-utils/index.d.ts","../../node_modules/next/dist/server/node-environment.d.ts","../../node_modules/next/dist/server/require-hook.d.ts","../../node_modules/next/dist/server/node-polyfill-fetch.d.ts","../../node_modules/next/dist/server/node-polyfill-form.d.ts","../../node_modules/next/dist/server/node-polyfill-web-streams.d.ts","../../node_modules/next/dist/server/node-polyfill-crypto.d.ts","../../node_modules/next/dist/shared/lib/router/utils/route-regex.d.ts","../../node_modules/next/dist/shared/lib/router/utils/route-matcher.d.ts","../../node_modules/next/dist/server/future/route-matchers/route-matcher.d.ts","../../node_modules/next/dist/server/future/route-matcher-providers/route-matcher-provider.d.ts","../../node_modules/next/dist/server/future/helpers/i18n-provider.d.ts","../../node_modules/next/dist/server/future/route-matcher-managers/route-matcher-manager.d.ts","../../node_modules/next/dist/server/router.d.ts","../../node_modules/next/dist/build/analysis/get-page-static-info.d.ts","../../node_modules/next/dist/build/webpack/loaders/get-module-build-info.d.ts","../../node_modules/next/dist/build/webpack/plugins/middleware-plugin.d.ts","../../node_modules/next/dist/server/render-result.d.ts","../../node_modules/next/dist/server/web/next-url.d.ts","../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.d.ts","../../node_modules/next/dist/server/web/spec-extension/cookies.d.ts","../../node_modules/next/dist/server/web/spec-extension/request.d.ts","../../node_modules/next/dist/server/web/spec-extension/fetch-event.d.ts","../../node_modules/next/dist/server/web/spec-extension/response.d.ts","../../node_modules/next/dist/server/web/types.d.ts","../../node_modules/next/dist/lib/setup-exception-listeners.d.ts","../../node_modules/next/dist/build/index.d.ts","../../node_modules/next/dist/build/webpack/plugins/pages-manifest-plugin.d.ts","../../node_modules/next/dist/server/send-payload/revalidate-headers.d.ts","../../node_modules/next/dist/server/send-payload/index.d.ts","../../node_modules/next/dist/server/font-utils.d.ts","../../node_modules/next/dist/build/webpack/plugins/flight-manifest-plugin.d.ts","../../node_modules/next/dist/server/future/route-modules/route-module.d.ts","../../node_modules/next/dist/server/load-components.d.ts","../../node_modules/next/dist/build/webpack/plugins/next-font-manifest-plugin.d.ts","../../node_modules/next/dist/server/render.d.ts","../../node_modules/next/dist/server/base-http/node.d.ts","../../node_modules/next/dist/shared/lib/router/utils/parse-url.d.ts","../../node_modules/next/dist/shared/lib/router/utils/middleware-route-matcher.d.ts","../../node_modules/next/dist/server/response-cache/types.d.ts","../../node_modules/next/dist/server/response-cache/index.d.ts","../../node_modules/next/dist/server/future/helpers/module-loader/module-loader.d.ts","../../node_modules/next/dist/server/future/route-definitions/app-route-route-definition.d.ts","../../node_modules/next/dist/build/webpack/plugins/app-build-manifest-plugin.d.ts","../../node_modules/next/dist/lib/coalesced-function.d.ts","../../node_modules/next/dist/server/lib/incremental-cache/index.d.ts","../../node_modules/next/dist/client/components/hooks-server-context.d.ts","../../node_modules/next/dist/client/components/static-generation-async-storage.d.ts","../../node_modules/next/dist/server/lib/patch-fetch.d.ts","../../node_modules/next/dist/build/utils.d.ts","../../node_modules/next/dist/server/async-storage/async-storage-wrapper.d.ts","../../node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.d.ts","../../node_modules/next/dist/server/web/http.d.ts","../../node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.d.ts","../../node_modules/next/dist/server/async-storage/draft-mode-provider.d.ts","../../node_modules/next/dist/server/web/spec-extension/adapters/headers.d.ts","../../node_modules/next/dist/client/components/request-async-storage.d.ts","../../node_modules/next/dist/client/components/draft-mode.d.ts","../../node_modules/next/dist/client/components/headers.d.ts","../../node_modules/next/dist/client/components/static-generation-bailout.d.ts","../../node_modules/next/dist/client/components/action-async-storage.d.ts","../../node_modules/next/dist/server/future/route-modules/app-route/module.d.ts","../../node_modules/next/dist/server/future/route-matches/app-route-route-match.d.ts","../../node_modules/next/dist/server/future/route-handler-managers/route-handler-manager.d.ts","../../node_modules/next/dist/server/future/normalizers/normalizer.d.ts","../../node_modules/next/dist/server/future/normalizers/locale-route-normalizer.d.ts","../../node_modules/next/dist/server/base-server.d.ts","../../node_modules/next/dist/server/future/route-definitions/locale-route-definition.d.ts","../../node_modules/next/dist/server/future/route-definitions/pages-api-route-definition.d.ts","../../node_modules/next/dist/server/future/route-matches/pages-api-route-match.d.ts","../../node_modules/next/dist/server/lib/cpu-profile.d.ts","../../node_modules/next/dist/server/lib/render-server.d.ts","../../node_modules/next/dist/server/image-optimizer.d.ts","../../node_modules/next/dist/server/next-server.d.ts","../../node_modules/next/dist/server/future/route-matcher-managers/default-route-matcher-manager.d.ts","../../node_modules/next/dist/server/future/route-matcher-managers/dev-route-matcher-manager.d.ts","../../node_modules/next/dist/server/dev/static-paths-worker.d.ts","../../node_modules/next/dist/server/dev/next-dev-server.d.ts","../../node_modules/next/dist/server/next.d.ts","../../node_modules/next/dist/lib/metadata/types/alternative-urls-types.d.ts","../../node_modules/next/dist/lib/metadata/types/extra-types.d.ts","../../node_modules/next/dist/lib/metadata/types/metadata-types.d.ts","../../node_modules/next/dist/lib/metadata/types/manifest-types.d.ts","../../node_modules/next/dist/lib/metadata/types/opengraph-types.d.ts","../../node_modules/next/dist/lib/metadata/types/twitter-types.d.ts","../../node_modules/next/dist/lib/metadata/types/metadata-interface.d.ts","../../node_modules/next/types/index.d.ts","../../node_modules/next/dist/shared/lib/html-context.d.ts","../../node_modules/@next/env/dist/index.d.ts","../../node_modules/next/dist/shared/lib/mitt.d.ts","../../node_modules/next/dist/client/with-router.d.ts","../../node_modules/next/dist/client/router.d.ts","../../node_modules/next/dist/client/route-loader.d.ts","../../node_modules/next/dist/client/page-loader.d.ts","../../node_modules/next/dist/shared/lib/bloom-filter.d.ts","../../node_modules/next/dist/shared/lib/router/router.d.ts","../../node_modules/next/dist/shared/lib/modern-browserslist-target.d.ts","../../node_modules/next/dist/shared/lib/constants.d.ts","../../node_modules/next/dist/shared/lib/utils.d.ts","../../node_modules/next/dist/pages/_app.d.ts","../../node_modules/next/app.d.ts","../../node_modules/next/dist/server/web/spec-extension/unstable-cache.d.ts","../../node_modules/next/dist/server/web/spec-extension/revalidate-path.d.ts","../../node_modules/next/dist/server/web/spec-extension/revalidate-tag.d.ts","../../node_modules/next/cache.d.ts","../../node_modules/next/dist/shared/lib/runtime-config.d.ts","../../node_modules/next/config.d.ts","../../node_modules/next/dist/pages/_document.d.ts","../../node_modules/next/document.d.ts","../../node_modules/next/dist/shared/lib/dynamic.d.ts","../../node_modules/next/dynamic.d.ts","../../node_modules/next/dist/pages/_error.d.ts","../../node_modules/next/error.d.ts","../../node_modules/next/dist/shared/lib/head.d.ts","../../node_modules/next/head.d.ts","../../node_modules/next/dist/shared/lib/get-img-props.d.ts","../../node_modules/next/dist/client/image-component.d.ts","../../node_modules/next/dist/shared/lib/image-external.d.ts","../../node_modules/next/image.d.ts","../../node_modules/next/dist/client/link.d.ts","../../node_modules/next/link.d.ts","../../node_modules/next/router.d.ts","../../node_modules/next/dist/client/script.d.ts","../../node_modules/next/script.d.ts","../../node_modules/next/dist/server/web/spec-extension/user-agent.d.ts","../../node_modules/next/dist/compiled/@edge-runtime/primitives/url.d.ts","../../node_modules/next/dist/compiled/@vercel/og/satori/index.d.ts","../../node_modules/next/dist/compiled/@vercel/og/emoji/index.d.ts","../../node_modules/next/dist/compiled/@vercel/og/types.d.ts","../../node_modules/next/dist/compiled/@vercel/og/index.node.d.ts","../../node_modules/next/dist/server/web/spec-extension/image-response.d.ts","../../node_modules/next/server.d.ts","../../node_modules/next/types/global.d.ts","../../node_modules/next/index.d.ts","../../node_modules/next/image-types/global.d.ts","./next-env.d.ts","./src/context/authcontext.tsx","./src/components/auth/protectedroute.tsx","./src/context/themecontext.tsx","./src/components/layout/header.tsx","./src/components/layout/sidebar.tsx","./src/components/layout/layout.tsx","../../packages/core/dist/types/quiz.types.d.ts","./src/context/quizcontext.tsx","./src/components/quiz/quizquestion.tsx","./src/components/quiz/quiznavigation.tsx","./src/components/quiz/quizprogress.tsx","./src/components/quiz/scoretoast.tsx","./src/components/quiz/quizcontainer.tsx","./src/context/useauth.ts","./src/screens/auth/forgot-password/forgot-password.tsx","../../node_modules/@types/aria-query/index.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/matches.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/wait-for.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/query-helpers.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/queries.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/get-queries-for-element.d.ts","../../node_modules/@testing-library/react/node_modules/pretty-format/build/types.d.ts","../../node_modules/@testing-library/react/node_modules/pretty-format/build/index.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/screen.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/get-node-text.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/events.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/pretty-dom.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/role-helpers.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/config.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/suggestions.d.ts","../../node_modules/@testing-library/react/node_modules/@testing-library/dom/types/index.d.ts","../../node_modules/@types/react-dom/test-utils/index.d.ts","../../node_modules/@testing-library/react/types/index.d.ts","../../node_modules/react-redux/es/utils/reactbatchedupdates.d.ts","../../node_modules/redux/index.d.ts","../../node_modules/react-redux/es/utils/subscription.d.ts","../../node_modules/@types/hoist-non-react-statics/node_modules/@types/react/global.d.ts","../../node_modules/@types/hoist-non-react-statics/node_modules/@types/react/index.d.ts","../../node_modules/@types/hoist-non-react-statics/index.d.ts","../../node_modules/react-redux/es/connect/selectorfactory.d.ts","../../node_modules/@types/use-sync-external-store/index.d.ts","../../node_modules/@types/use-sync-external-store/with-selector.d.ts","../../node_modules/react-redux/es/utils/usesyncexternalstore.d.ts","../../node_modules/react-redux/es/components/connect.d.ts","../../node_modules/react-redux/es/types.d.ts","../../node_modules/react-redux/es/hooks/useselector.d.ts","../../node_modules/react-redux/es/components/context.d.ts","../../node_modules/react-redux/es/components/provider.d.ts","../../node_modules/react-redux/es/hooks/usedispatch.d.ts","../../node_modules/react-redux/es/hooks/usestore.d.ts","../../node_modules/react-redux/es/utils/shallowequal.d.ts","../../node_modules/react-redux/es/exports.d.ts","../../node_modules/react-redux/es/index.d.ts","../../node_modules/immer/dist/utils/env.d.ts","../../node_modules/immer/dist/utils/errors.d.ts","../../node_modules/immer/dist/types/types-external.d.ts","../../node_modules/immer/dist/types/types-internal.d.ts","../../node_modules/immer/dist/utils/common.d.ts","../../node_modules/immer/dist/utils/plugins.d.ts","../../node_modules/immer/dist/core/scope.d.ts","../../node_modules/immer/dist/core/finalize.d.ts","../../node_modules/immer/dist/core/proxy.d.ts","../../node_modules/immer/dist/core/immerclass.d.ts","../../node_modules/immer/dist/core/current.d.ts","../../node_modules/immer/dist/internal.d.ts","../../node_modules/immer/dist/plugins/es5.d.ts","../../node_modules/immer/dist/plugins/patches.d.ts","../../node_modules/immer/dist/plugins/mapset.d.ts","../../node_modules/immer/dist/plugins/all.d.ts","../../node_modules/immer/dist/immer.d.ts","../../node_modules/reselect/es/versionedtypes/ts47-mergeparameters.d.ts","../../node_modules/reselect/es/types.d.ts","../../node_modules/reselect/es/defaultmemoize.d.ts","../../node_modules/reselect/es/index.d.ts","../../node_modules/@reduxjs/toolkit/dist/createdraftsafeselector.d.ts","../../node_modules/redux-thunk/es/types.d.ts","../../node_modules/redux-thunk/es/index.d.ts","../../node_modules/@reduxjs/toolkit/dist/devtoolsextension.d.ts","../../node_modules/@reduxjs/toolkit/dist/actioncreatorinvariantmiddleware.d.ts","../../node_modules/@reduxjs/toolkit/dist/immutablestateinvariantmiddleware.d.ts","../../node_modules/@reduxjs/toolkit/dist/serializablestateinvariantmiddleware.d.ts","../../node_modules/@reduxjs/toolkit/dist/utils.d.ts","../../node_modules/@reduxjs/toolkit/dist/tshelpers.d.ts","../../node_modules/@reduxjs/toolkit/dist/getdefaultmiddleware.d.ts","../../node_modules/@reduxjs/toolkit/dist/configurestore.d.ts","../../node_modules/@reduxjs/toolkit/dist/createaction.d.ts","../../node_modules/@reduxjs/toolkit/dist/mapbuilders.d.ts","../../node_modules/@reduxjs/toolkit/dist/createreducer.d.ts","../../node_modules/@reduxjs/toolkit/dist/createslice.d.ts","../../node_modules/@reduxjs/toolkit/dist/entities/models.d.ts","../../node_modules/@reduxjs/toolkit/dist/entities/create_adapter.d.ts","../../node_modules/@reduxjs/toolkit/dist/createasyncthunk.d.ts","../../node_modules/@reduxjs/toolkit/dist/matchers.d.ts","../../node_modules/@reduxjs/toolkit/dist/nanoid.d.ts","../../node_modules/@reduxjs/toolkit/dist/isplainobject.d.ts","../../node_modules/@reduxjs/toolkit/dist/listenermiddleware/exceptions.d.ts","../../node_modules/@reduxjs/toolkit/dist/listenermiddleware/types.d.ts","../../node_modules/@reduxjs/toolkit/dist/listenermiddleware/index.d.ts","../../node_modules/@reduxjs/toolkit/dist/autobatchenhancer.d.ts","../../node_modules/@reduxjs/toolkit/dist/index.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/tshelpers.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/basequerytypes.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/defaultserializequeryargs.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/fakebasequery.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/endpointdefinitions.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/apistate.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/buildselectors.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/buildinitiate.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/buildthunks.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/setuplisteners.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/buildslice.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/buildmiddleware/types.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/buildmiddleware/cachelifecycle.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/buildmiddleware/querylifecycle.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/buildmiddleware/cachecollection.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/module.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/createapi.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/apitypes.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/fetchbasequery.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/retry.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/utils/copywithstructuralsharing.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/core/index.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/index.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/react/constants.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/react/buildhooks.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/react/namedhooks.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/react/module.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/react/apiprovider.d.ts","../../node_modules/@reduxjs/toolkit/dist/query/react/index.d.ts","./src/store/services/api.ts","./src/store/index.ts","./src/screens/auth/login/login.tsx","./src/screens/auth/login/login.test.tsx","./src/screens/auth/reset-password/reset-password.tsx","./src/screens/auth/signup/signup.tsx","./node_modules/@types/uuid/index.d.ts","../../node_modules/@babel/types/lib/index.d.ts","../../node_modules/@types/babel__generator/index.d.ts","../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../node_modules/@types/babel__template/index.d.ts","../../node_modules/@types/babel__traverse/index.d.ts","../../node_modules/@types/babel__core/index.d.ts","../../node_modules/@types/bcryptjs/index.d.ts","../../node_modules/@types/connect/index.d.ts","../../node_modules/@types/body-parser/index.d.ts","../../node_modules/@types/cookiejar/index.d.ts","../../node_modules/@types/estree/index.d.ts","../../node_modules/@types/json-schema/index.d.ts","../../node_modules/@types/eslint/use-at-your-own-risk.d.ts","../../node_modules/@types/eslint/index.d.ts","../../node_modules/@types/eslint-scope/index.d.ts","../../node_modules/@types/mime/index.d.ts","../../node_modules/@types/send/index.d.ts","../../node_modules/@types/qs/index.d.ts","../../node_modules/@types/range-parser/index.d.ts","../../node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/http-errors/index.d.ts","../../node_modules/@types/serve-static/index.d.ts","../../node_modules/@types/express/index.d.ts","../../node_modules/@types/graceful-fs/index.d.ts","../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../node_modules/@types/istanbul-lib-report/index.d.ts","../../node_modules/@types/istanbul-reports/index.d.ts","../../node_modules/@jest/expect-utils/build/index.d.ts","../../node_modules/chalk/index.d.ts","../../node_modules/@sinclair/typebox/typebox.d.ts","../../node_modules/@jest/schemas/build/index.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/expect/build/index.d.ts","../../node_modules/@types/jest/index.d.ts","../../node_modules/parse5/dist/common/html.d.ts","../../node_modules/parse5/dist/common/token.d.ts","../../node_modules/parse5/dist/common/error-codes.d.ts","../../node_modules/parse5/dist/tokenizer/preprocessor.d.ts","../../node_modules/parse5/dist/tokenizer/index.d.ts","../../node_modules/parse5/dist/tree-adapters/interface.d.ts","../../node_modules/parse5/dist/parser/open-element-stack.d.ts","../../node_modules/parse5/dist/parser/formatting-element-list.d.ts","../../node_modules/parse5/dist/parser/index.d.ts","../../node_modules/parse5/dist/tree-adapters/default.d.ts","../../node_modules/parse5/dist/serializer/index.d.ts","../../node_modules/parse5/dist/common/foreign-content.d.ts","../../node_modules/parse5/dist/index.d.ts","../../node_modules/@types/tough-cookie/index.d.ts","../../node_modules/@types/jsdom/base.d.ts","../../node_modules/@types/jsdom/index.d.ts","../../node_modules/@types/json5/index.d.ts","../../node_modules/@types/jsonwebtoken/index.d.ts","../../node_modules/@types/methods/index.d.ts","../../node_modules/@types/ms/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport/index.d.ts","../../node_modules/@types/passport-jwt/node_modules/@types/jsonwebtoken/index.d.ts","../../node_modules/@types/passport-strategy/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-strategy/index.d.ts","../../node_modules/@types/passport-jwt/index.d.ts","../../node_modules/@types/passport-local/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-local/index.d.ts","../../node_modules/@types/scheduler/index.d.ts","../../node_modules/@types/semver/classes/semver.d.ts","../../node_modules/@types/semver/functions/parse.d.ts","../../node_modules/@types/semver/functions/valid.d.ts","../../node_modules/@types/semver/functions/clean.d.ts","../../node_modules/@types/semver/functions/inc.d.ts","../../node_modules/@types/semver/functions/diff.d.ts","../../node_modules/@types/semver/functions/major.d.ts","../../node_modules/@types/semver/functions/minor.d.ts","../../node_modules/@types/semver/functions/patch.d.ts","../../node_modules/@types/semver/functions/prerelease.d.ts","../../node_modules/@types/semver/functions/compare.d.ts","../../node_modules/@types/semver/functions/rcompare.d.ts","../../node_modules/@types/semver/functions/compare-loose.d.ts","../../node_modules/@types/semver/functions/compare-build.d.ts","../../node_modules/@types/semver/functions/sort.d.ts","../../node_modules/@types/semver/functions/rsort.d.ts","../../node_modules/@types/semver/functions/gt.d.ts","../../node_modules/@types/semver/functions/lt.d.ts","../../node_modules/@types/semver/functions/eq.d.ts","../../node_modules/@types/semver/functions/neq.d.ts","../../node_modules/@types/semver/functions/gte.d.ts","../../node_modules/@types/semver/functions/lte.d.ts","../../node_modules/@types/semver/functions/cmp.d.ts","../../node_modules/@types/semver/functions/coerce.d.ts","../../node_modules/@types/semver/classes/comparator.d.ts","../../node_modules/@types/semver/classes/range.d.ts","../../node_modules/@types/semver/functions/satisfies.d.ts","../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../node_modules/@types/semver/ranges/min-version.d.ts","../../node_modules/@types/semver/ranges/valid.d.ts","../../node_modules/@types/semver/ranges/outside.d.ts","../../node_modules/@types/semver/ranges/gtr.d.ts","../../node_modules/@types/semver/ranges/ltr.d.ts","../../node_modules/@types/semver/ranges/intersects.d.ts","../../node_modules/@types/semver/ranges/simplify.d.ts","../../node_modules/@types/semver/ranges/subset.d.ts","../../node_modules/@types/semver/internals/identifiers.d.ts","../../node_modules/@types/semver/index.d.ts","../../node_modules/@types/stack-utils/index.d.ts","../../node_modules/@types/superagent/lib/agent-base.d.ts","../../node_modules/@types/superagent/lib/node/response.d.ts","../../node_modules/@types/superagent/types.d.ts","../../node_modules/@types/superagent/lib/node/agent.d.ts","../../node_modules/@types/superagent/lib/request-base.d.ts","../../node_modules/form-data/index.d.ts","../../node_modules/@types/superagent/lib/node/http2wrapper.d.ts","../../node_modules/@types/superagent/lib/node/index.d.ts","../../node_modules/@types/superagent/index.d.ts","../../node_modules/@types/supertest/index.d.ts","../../node_modules/@types/testing-library__jest-dom/matchers.d.ts","../../node_modules/@types/testing-library__jest-dom/index.d.ts","../../node_modules/@types/validator/lib/isboolean.d.ts","../../node_modules/@types/validator/lib/isemail.d.ts","../../node_modules/@types/validator/lib/isfqdn.d.ts","../../node_modules/@types/validator/lib/isiban.d.ts","../../node_modules/@types/validator/lib/isiso31661alpha2.d.ts","../../node_modules/@types/validator/lib/isiso4217.d.ts","../../node_modules/@types/validator/lib/isiso6391.d.ts","../../node_modules/@types/validator/lib/istaxid.d.ts","../../node_modules/@types/validator/lib/isurl.d.ts","../../node_modules/@types/validator/index.d.ts","../../node_modules/@types/yargs-parser/index.d.ts","../../node_modules/@types/yargs/index.d.ts"],"fileIdsList":[[97,140,342,343],[97,137,140],[97,139,140],[140],[97,140,145,174],[97,140,141,146,152,153,160,171,182],[97,140,141,142,152,160],[97,140],[92,93,94,97,140],[97,140,143,183],[97,140,144,145,153,161],[97,140,145,171,179],[97,140,146,148,152,160],[97,139,140,147],[97,140,148,149],[97,140,152],[97,140,150,152],[97,139,140,152],[97,140,152,153,154,171,182],[97,140,152,153,154,167,171,174],[97,135,140,187],[97,140,148,152,155,160,171,182],[97,140,152,153,155,156,160,171,179,182],[97,140,155,157,171,179,182],[95,96,97,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188],[97,140,152,158],[97,140,159,182,187],[97,140,148,152,160,171],[97,140,161],[97,140,162],[97,139,140,163],[97,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188],[97,140,165],[97,140,166],[97,140,152,167,168],[97,140,167,169,183,185],[97,140,152,171,172,174],[97,140,173,174],[97,140,171,172],[97,140,174],[97,140,175],[97,137,140,171],[97,140,152,177,178],[97,140,177,178],[97,140,145,160,171,179],[97,140,180],[97,140,160,181],[97,140,155,166,182],[97,140,145,183],[97,140,171,184],[97,140,159,185],[97,140,186],[97,140,145,152,154,163,171,182,185,187],[97,140,171,188],[97,107,111,140,182],[97,107,140,171,182],[97,102,140],[97,104,107,140,179,182],[97,140,160,179],[97,140,189],[97,102,140,189],[97,104,107,140,160,182],[97,99,100,103,106,140,152,171,182],[97,107,114,140],[97,99,105,140],[97,107,128,129,140],[97,103,107,140,174,182,189],[97,128,140,189],[97,101,102,140,189],[97,107,140],[97,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,140],[97,107,122,140],[97,107,114,115,140],[97,105,107,115,116,140],[97,106,140],[97,99,102,107,140],[97,107,111,115,116,140],[97,111,140],[97,105,107,110,140,182],[97,99,104,107,114,140],[97,140,171],[97,102,107,128,140,187,189],[85,97,140,330,345],[85,97,140,327,329,345,347],[85,97,140,348,349],[85,97,140,329,330],[85,97,140,351,352,353,354,355,356],[85,97,140,352],[85,97,140,351,352],[85,97,140,330],[85,97,140,351],[85,97,140],[97,140,345],[97,140,345,378,398,476,477],[85,97,140,345],[97,140,398,445,475],[97,140,351,474],[97,140,482],[97,140,511],[97,140,380],[97,140,380,423,427,428,429],[97,140,380,428],[97,140,380,422,428,431],[97,140,419],[97,140,380,415,428,432],[97,140,380,428,431,432,433],[97,140,435],[97,140,428,431],[97,140,380,422,424,425,426,427,428],[97,140,380,415,419,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,442,443,444],[97,140,445],[97,140,380,422,431,441,442],[97,140,380,422,431,441],[97,140,380,428,433],[97,140,428,437],[97,140,445,446,447,450,451,452,453,454,458,459,460,461,462],[97,140,445,446],[97,140,445,446,447,450,458,459,460],[97,140,380,445,447,448,450,451,452,454,458,459,460,461,463],[97,140,447,450,457,458,459],[97,140,380,422,447,450,451,452,454,457,459,460],[97,140,447,450,457,458,460],[97,140,445,450,451,454,458,459,460,461,463],[97,140,448,450,451,453,454,458,459,460,461],[97,140,380,415,445,450,451,454,458,459,460,461,463],[97,140,380,415,445,446,447,448,450,451,452,453,454,458,459,460,461,463],[97,140,452,453,454,461,462],[97,140,445,447,450,451,452,453,454,455,456,458,459,460,461,463],[97,140,445,446,447,448,450,451,458,459,460,461,463],[97,140,450,451,458,459,460],[97,140,445,446,447,448,449,451,468,472],[97,140,447],[97,140,446,447],[97,140,446,447,448,449,450,451,452,453,454,455,458,459,460,461,462,463,464,465,466,467],[85,97,140,398,468,472],[85,97,140,447,468,469,472],[97,140,468,470,472,473],[97,140,398,451,452,453,454,461,463,468,470,471,472],[97,140,468,470,472],[97,140,447,464],[97,140,380,427],[97,140,364],[97,140,361,362,363,364,365,368,369,370,371,372,373,374,375],[97,140,360],[97,140,367],[97,140,361,362,363],[97,140,361,362],[97,140,364,365,367],[97,140,362],[97,140,366],[97,140,376,377],[97,140,482,483,484,485,486],[97,140,482,484],[97,140,155,189,489],[97,140,155,189],[97,140,492,495],[97,140,492,493,494],[97,140,495],[97,140,152,155,189,498,499,500],[97,140,490,499,501,503],[97,140,153,189],[97,140,383],[83,97,140,382],[97,140,506],[97,140,507],[97,140,513,516,600],[97,140,152,185,189,530,531,533],[97,140,532],[97,140,145,189],[97,140,541,543],[97,140,145,189,537],[97,140,539,540,543],[97,140,490,503,538],[97,140,504,539,540],[97,140,155,539],[97,140,490,501,503,538],[85,97,140,193,194,195],[85,97,140,193,194],[85,97,140,377],[85,89,97,140,192,295,337],[85,89,97,140,191,295,337],[82,83,84,97,140],[97,140,548,587],[97,140,548,572,587],[97,140,587],[97,140,548],[97,140,548,573,587],[97,140,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],[97,140,573,587],[97,140,153,171,189,497],[97,140,155,189,498,502],[97,140,596],[97,140,491,536,589,591,597],[97,140,156,160,171,179,189],[97,140,153,155,156,157,160,171,536,590,591,592,593,594,595],[97,140,155,171,596],[97,140,153,590,591],[97,140,182,590],[97,140,597],[97,140,516,517,599],[97,140,601,602,603,604,605,606,607,608,609],[97,140,611],[97,140,509,515],[97,140,155,171,189],[97,140,410],[97,140,410,411,412,413,414],[97,140,399,400,401,402,403,404,405,406,407,408,409],[97,140,513],[97,140,510,514],[90,97,140],[97,140,308],[97,140,310,311,312],[97,140,314],[97,140,198,207,224,295],[97,140,209],[97,140,166,189,190,198,207,211,225,252,253,254,257,295],[97,140,196,223],[97,140,196],[97,140,196,223,224],[97,139,140,189],[97,140,263],[97,140,262,264,266],[97,139,140,189,229,262,263,264],[97,139,140,189,254,255],[85,97,140,199,324],[85,97,140,182,189],[85,97,140,223,301],[85,97,140,223],[97,140,299,304],[85,97,140,300,307],[85,97,140,171,189,337],[85,89,97,140,155,189,191,192,295,335,336],[97,140,197],[97,140,288,289,290,291,292,293],[97,140,290],[85,97,140,296,307],[85,97,140,307],[97,140,155,189,208,307],[97,140,155,189,208,209,229,230,262],[97,140,254,256,259],[97,140,155,189,207,209],[97,140,155,171,189,206,208,209,295],[97,140,155,166,182,189,197,198,199,206,207,208,209,217,220,221,222,223,226,235,236,238,239,240,242,243,244,247,249,254,272,274,295],[97,140,196,198,199,200,206,295,307],[97,140,207],[97,140,166,182,189,198,204,206,207,208,217,220,221,222,233,236,242,245,246,254,272,275,282,284,285],[97,140,207,211,254],[97,140,206,207],[97,140,220,273],[97,140,202,203],[97,140,202,276],[97,140,202],[97,140,208,250,270,271],[97,140,202,203,204,218,219,221],[97,140,202,203,204,218,221,283],[97,140,204,219,220],[97,140,218],[97,140,203,204],[97,140,204,251],[97,140,204,277],[97,140,166,189,203],[97,140,207,230,235,241,251,255,256,258,260,261,265,267,268,269],[97,140,203,230],[97,140,155,182,189,199,206,207,249],[97,140,235,249,307],[97,140,255,256],[97,140,211],[97,140,190,240,241,295,307],[97,140,155,166,182,189,198,204,206,208,211,217,222,225,226,233,235,236,238,239,244,245,246,249,254,275,278,280,281,307],[97,140,155,189,206,207,211,282,286],[85,97,140,155,166,189,197,199,206,209,226,239,240,242,243,295,307],[97,140,155,166,182,189,201,204,205,208],[97,140,248],[97,140,155,189,226],[97,140,166,189,197,198,206,208,217,220,221],[97,140,155,189,226,237],[97,140,155,189,208,238],[97,140,155,189,207,220],[97,140,155,189,208,229],[97,140,228],[97,140,230],[97,140,338],[97,140,207,227,229,233],[97,140,207,227,229],[97,140,155,189,201,207,230,231,232],[97,140,305],[85,97,140,199],[85,97,140,190,239,243,295,307],[97,140,199,324,325],[85,97,140,166,182,189,197,298,300,302,303,307],[97,140,208,217,223],[97,140,166,189],[97,140,216],[85,97,140,155,166,189,197,295,296,297,304,306],[81,85,86,87,88,97,140,191,192,295,337],[97,140,316],[97,140,318],[97,140,320],[97,140,322],[97,140,326],[89,91,97,140,295,309,313,315,317,319,321,323,327,329,330,332,340,341],[97,140,328],[97,140,300],[97,140,331],[97,139,140,230,231,232,233,333,334,337,339],[85,89,97,140,155,166,189,191,192,193,195,197,209,287,294,307,337],[97,140,519],[97,140,518,519],[97,140,518],[97,140,518,519,520,522,523,526,527,528,529],[97,140,519,523],[97,140,518,519,520,522,523,524,525],[97,140,518,523],[97,140,523,527],[97,140,519,520,521],[97,140,520],[97,140,518,519,523],[97,140,512],[97,140,380,385,388,390,392],[85,97,140,380,381,391],[85,97,140,380,391,392],[85,97,140,380,390],[97,140,381,385,389,390,391,392,393,394,395,396],[85,97,140,380,392],[85,97,140,380,388,390,392],[97,140,379,397],[85,97,140,380,384,389,391],[97,140,193,194,195],[97,140,386,387],[97,140,380,421],[97,140,417],[97,140,417,418],[97,140,416]],"fileInfos":[{"version":"69684132aeb9b5642cbcd9e22dff7818ff0ee1aa831728af0ecf97d3364d5546","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","impliedFormat":1},{"version":"ee7bad0c15b58988daa84371e0b89d313b762ab83cb5b31b8a2d1162e8eb41c2","impliedFormat":1},{"version":"27bdc30a0e32783366a5abeda841bc22757c1797de8681bbe81fbc735eeb1c10","impliedFormat":1},{"version":"8fd575e12870e9944c7e1d62e1f5a73fcf23dd8d3a321f2a2c74c20d022283fe","impliedFormat":1},{"version":"8bf8b5e44e3c9c36f98e1007e8b7018c0f38d8adc07aecef42f5200114547c70","impliedFormat":1},{"version":"092c2bfe125ce69dbb1223c85d68d4d2397d7d8411867b5cc03cec902c233763","affectsGlobalScope":true,"impliedFormat":1},{"version":"07f073f19d67f74d732b1adea08e1dc66b1b58d77cb5b43931dee3d798a2fd53","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true,"impliedFormat":1},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true,"impliedFormat":1},{"version":"959d36cddf5e7d572a65045b876f2956c973a586da58e5d26cde519184fd9b8a","affectsGlobalScope":true,"impliedFormat":1},{"version":"965f36eae237dd74e6cca203a43e9ca801ce38824ead814728a2807b1910117d","affectsGlobalScope":true,"impliedFormat":1},{"version":"3925a6c820dcb1a06506c90b1577db1fdbf7705d65b62b99dce4be75c637e26b","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a3d63ef2b853447ec4f749d3f368ce642264246e02911fcb1590d8c161b8005","affectsGlobalScope":true,"impliedFormat":1},{"version":"b5ce7a470bc3628408429040c4e3a53a27755022a32fd05e2cb694e7015386c7","affectsGlobalScope":true,"impliedFormat":1},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true,"impliedFormat":1},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true,"impliedFormat":1},{"version":"b4b67b1a91182421f5df999988c690f14d813b9850b40acd06ed44691f6727ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"df83c2a6c73228b625b0beb6669c7ee2a09c914637e2d35170723ad49c0f5cd4","affectsGlobalScope":true,"impliedFormat":1},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e3c06ea092138bf9fa5e874a1fdbc9d54805d074bee1de31b99a11e2fec239d","affectsGlobalScope":true,"impliedFormat":1},{"version":"87dc0f382502f5bbce5129bdc0aea21e19a3abbc19259e0b43ae038a9fc4e326","affectsGlobalScope":true,"impliedFormat":1},{"version":"b1cb28af0c891c8c96b2d6b7be76bd394fddcfdb4709a20ba05a7c1605eea0f9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2fef54945a13095fdb9b84f705f2b5994597640c46afeb2ce78352fab4cb3279","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac77cb3e8c6d3565793eb90a8373ee8033146315a3dbead3bde8db5eaf5e5ec6","affectsGlobalScope":true,"impliedFormat":1},{"version":"56e4ed5aab5f5920980066a9409bfaf53e6d21d3f8d020c17e4de584d29600ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ece9f17b3866cc077099c73f4983bddbcb1dc7ddb943227f1ec070f529dedd1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a6282c8827e4b9a95f4bf4f5c205673ada31b982f50572d27103df8ceb8013c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1c9319a09485199c1f7b0498f2988d6d2249793ef67edda49d1e584746be9032","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3a2a0cee0f03ffdde24d89660eba2685bfbdeae955a6c67e8c4c9fd28928eeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811c71eee4aa0ac5f7adf713323a5c41b0cf6c4e17367a34fbce379e12bbf0a4","affectsGlobalScope":true,"impliedFormat":1},{"version":"51ad4c928303041605b4d7ae32e0c1ee387d43a24cd6f1ebf4a2699e1076d4fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"60037901da1a425516449b9a20073aa03386cce92f7a1fd902d7602be3a7c2e9","affectsGlobalScope":true,"impliedFormat":1},{"version":"d4b1d2c51d058fc21ec2629fff7a76249dec2e36e12960ea056e3ef89174080f","affectsGlobalScope":true,"impliedFormat":1},{"version":"22adec94ef7047a6c9d1af3cb96be87a335908bf9ef386ae9fd50eeb37f44c47","affectsGlobalScope":true,"impliedFormat":1},{"version":"4245fee526a7d1754529d19227ecbf3be066ff79ebb6a380d78e41648f2f224d","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"0990a7576222f248f0a3b888adcb7389f957928ce2afb1cd5128169086ff4d29","impliedFormat":1},{"version":"549df62b64a71004aee17685b445a8289013daf96246ce4d9b087d13d7a27a61","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"65ff5a0aefd7817a03c1ad04fee85c9cdd3ec415cc3c9efec85d8008d4d5e4ee","impliedFormat":1},{"version":"40a1b33c67109be18a961127873e8ba198429eacf11a468b4a052cddc9a73f8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"cc69795d9954ee4ad57545b10c7bf1a7260d990231b1685c147ea71a6faa265c","impliedFormat":1},{"version":"8bc6c94ff4f2af1f4023b7bb2379b08d3d7dd80c698c9f0b07431ea16101f05f","impliedFormat":1},{"version":"1b61d259de5350f8b1e5db06290d31eaebebc6baafd5f79d314b5af9256d7153","impliedFormat":1},{"version":"57194e1f007f3f2cbef26fa299d4c6b21f4623a2eddc63dfeef79e38e187a36e","impliedFormat":1},{"version":"0f6666b58e9276ac3a38fdc80993d19208442d6027ab885580d93aec76b4ef00","impliedFormat":1},{"version":"05fd364b8ef02fb1e174fbac8b825bdb1e5a36a016997c8e421f5fab0a6da0a0","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"ab41ef1f2cdafb8df48be20cd969d875602483859dc194e9c97c8a576892c052","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"49a5a44f2e68241a1d2bd9ec894535797998841c09729e506a7cbfcaa40f2180","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"4d2b0eb911816f66abe4970898f97a2cfc902bcd743cbfa5017fad79f7ef90d8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"e53a3c2a9f624d90f24bf4588aacd223e7bec1b9d0d479b68d2f4a9e6011147f","impliedFormat":1},{"version":"24b8685c62562f5d98615c5a0c1d05f297cf5065f15246edfe99e81ec4c0e011","impliedFormat":1},{"version":"93507c745e8f29090efb99399c3f77bec07db17acd75634249dc92f961573387","impliedFormat":1},{"version":"339dc5265ee5ed92e536a93a04c4ebbc2128f45eeec6ed29f379e0085283542c","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"8d31155317e3cceb916d113be587617534034977bc364687235cdf4c7bd87e31","affectsGlobalScope":true,"impliedFormat":1},{"version":"6b042aa5d277ad6963e2837179fd2f8fbb01968ac67115b0833c0244e93d1d50","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"8c0bcd6c6b67b4b503c11e91a1fb91522ed585900eab2ab1f61bba7d7caa9d6f","impliedFormat":1},{"version":"9e025aa38cad40827cc30aca974fe33fe2c4652fe8c88f48dadbbbd6300c8b07","affectsGlobalScope":true,"impliedFormat":1},{"version":"f3e58c4c18a031cbb17abec7a4ad0bd5ae9fc70c1f4ba1e7fb921ad87c504aca","impliedFormat":1},{"version":"84c1930e33d1bb12ad01bcbe11d656f9646bd21b2fb2afd96e8e10615a021aef","impliedFormat":1},{"version":"35ec8b6760fd7138bbf5809b84551e31028fb2ba7b6dc91d95d098bf212ca8b4","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"4b87f767c7bc841511113c876a6b8bf1fd0cb0b718c888ad84478b372ec486b1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d04e3640dd9eb67f7f1e5bd3d0bf96c784666f7aefc8ac1537af6f2d38d4c29","impliedFormat":1},{"version":"008e4cac37da1a6831aa43f6726da0073957ae89da2235082311eaf479b2ffa5","impliedFormat":1},{"version":"5a369483ac4cfbdf0331c248deeb36140e6907db5e1daed241546b4a2055f82c","impliedFormat":1},{"version":"e8f5b5cc36615c17d330eaf8eebbc0d6bdd942c25991f96ef122f246f4ff722f","impliedFormat":1},{"version":"f0bd7e6d931657b59605c44112eaf8b980ba7f957a5051ed21cb93d978cf2f45","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"0ada07543808f3b967624645a8e1ccd446f8b01ade47842acf1328aec899fed0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4c21aaa8257d7950a5b75a251d9075b6a371208fc948c9c8402f6690ef3b5b55","impliedFormat":1},{"version":"b5895e6353a5d708f55d8685c38a235c3a6d8138e374dee8ceb8ffde5aa8002a","impliedFormat":1},{"version":"b9b859f6e245c3c39ec85e65ab1b1ffe43473b75eaae16fe64f44c2d6832173e","impliedFormat":1},{"version":"93bd413918fa921c8729cef45302b24d8b6c7855d72d5bf82d3972595ae8dcbf","impliedFormat":1},{"version":"4ff41188773cbf465807dd2f7059c7494cbee5115608efc297383832a1150c43","impliedFormat":1},{"version":"dccdf1677e531e33f8ac961a68bc537418c9a414797c1ea7e91307501cdc3f5e","impliedFormat":1},{"version":"e184c4b8918ef56c8c9e68bd79f3f3780e2d0d75bf2b8a41da1509a40c2deb46","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3114a0b8ab879b52767d1225cb8420ec99a827e5f744dbeb4900afc08c3e341","impliedFormat":1},{"version":"93f437e1398a4f06a984f441f7fa7a9f0535c04399619b5c22e0b87bdee182cb","impliedFormat":1},{"version":"afbe24ab0d74694372baa632ecb28bb375be53f3be53f9b07ecd7fc994907de5","impliedFormat":1},{"version":"70731d10d5311bd4cf710ef7f6539b62660f4b0bfdbb3f9fbe1d25fe6366a7fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"6b19db3600a17af69d4f33d08cc7076a7d19fb65bb36e442cac58929ec7c9482","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e043a1bc8fbf2a255bccf9bf27e0f1caf916c3b0518ea34aa72357c0afd42ec","impliedFormat":1},{"version":"b4f70ec656a11d570e1a9edce07d118cd58d9760239e2ece99306ee9dfe61d02","impliedFormat":1},{"version":"3bc2f1e2c95c04048212c569ed38e338873f6a8593930cf5a7ef24ffb38fc3b6","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"f9d9d753d430ed050dc1bf2667a1bab711ccbb1c1507183d794cc195a5b085cc","impliedFormat":1},{"version":"9eece5e586312581ccd106d4853e861aaaa1a39f8e3ea672b8c3847eedd12f6e","impliedFormat":1},{"version":"ba1f814c22fd970255ddd60d61fb7e00c28271c933ab5d5cc19cd3ca66b8f57c","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"0dbcebe2126d03936c70545e96a6e41007cf065be38a1ce4d32a39fcedefead4","affectsGlobalScope":true,"impliedFormat":1},{"version":"1851a3b4db78664f83901bb9cac9e45e03a37bb5933cc5bf37e10bb7e91ab4eb","impliedFormat":1},{"version":"09d479208911ac3ac6a7c2fe86217fc1abe6c4f04e2d52e4890e500699eeab32","affectsGlobalScope":true,"impliedFormat":1},{"version":"12ed4559eba17cd977aa0db658d25c4047067444b51acfdcbf38470630642b23","affectsGlobalScope":true,"impliedFormat":1},{"version":"f3ffabc95802521e1e4bcba4c88d8615176dc6e09111d920c7a213bdda6e1d65","impliedFormat":1},{"version":"c40b3d3cfbb1227c8935f681c2480a32b560e387dd771d329cdbd1641f2d6da5","impliedFormat":1},{"version":"ae56f65caf3be91108707bd8dfbccc2a57a91feb5daabf7165a06a945545ed26","impliedFormat":1},{"version":"a136d5de521da20f31631a0a96bf712370779d1c05b7015d7019a9b2a0446ca9","impliedFormat":1},{"version":"5b566927cad2ed2139655d55d690ffa87df378b956e7fe1c96024c4d9f75c4cf","affectsGlobalScope":true,"impliedFormat":1},{"version":"c4a3720550d1787c8d6284040853c0781ff1e2cd8d842f2cb44547525ee34c36","affectsGlobalScope":true,"impliedFormat":1},{"version":"d3dffd70e6375b872f0b4e152de4ae682d762c61a24881ecc5eb9f04c5caf76f","impliedFormat":1},{"version":"fe5748232eaa52bbfd7ce314e52b246871731c5f41318fdaf6633cb14fa20da0","impliedFormat":1},{"version":"d91a7d8b5655c42986f1bdfe2105c4408f472831c8f20cf11a8c3345b6b56c8c","impliedFormat":1},{"version":"616075a6ac578cf5a013ee12964188b4412823796ce0b202c6f1d2e4ca8480d7","affectsGlobalScope":true,"impliedFormat":1},{"version":"e8a979b8af001c9fc2e774e7809d233c8ca955a28756f52ee5dee88ccb0611d2","impliedFormat":1},{"version":"cac793cc47c29e26e4ac3601dcb00b4435ebed26203485790e44f2ad8b6ad847","impliedFormat":1},{"version":"8caa5c86be1b793cd5f599e27ecb34252c41e011980f7d61ae4989a149ff6ccc","impliedFormat":1},{"version":"72b9a5e3faa0569def625ec0e50cf91fe1aa8e527af85bbc7181113821684016","impliedFormat":1},{"version":"fd2355eaf50b2c1b9cd00eeacef19d8f098199d1b4facdc065e162780e4651f8","impliedFormat":1},{"version":"17ed71200119e86ccef2d96b73b02ce8854b76ad6bd21b5021d4269bec527b5f","impliedFormat":1},{"version":"1cfa8647d7d71cb03847d616bd79320abfc01ddea082a49569fda71ac5ece66b","impliedFormat":1},{"version":"bb7a61dd55dc4b9422d13da3a6bb9cc5e89be888ef23bbcf6558aa9726b89a1c","impliedFormat":1},{"version":"db6d2d9daad8a6d83f281af12ce4355a20b9a3e71b82b9f57cddcca0a8964a96","impliedFormat":1},{"version":"57c1c64e3fbca74c67e27dad808b51b8a968e604e947cb7f50d69b20b3659a11","impliedFormat":1},{"version":"cbea99888785d49bb630dcbb1613c73727f2b5a2cf02e1abcaab7bcf8d6bf3c5","impliedFormat":1},{"version":"a3f1220f5331589384d77ed650001719baac21fcbed91e36b9abc5485b06335a","impliedFormat":1},{"version":"a86f82d646a739041d6702101afa82dcb935c416dd93cbca7fd754fd0282ce1f","impliedFormat":1},{"version":"6ceac05c32f579adbed2f1a9c98cd297de3c00a3caaffc423385d00e82bce4ce","impliedFormat":1},{"version":"fa5bbc7ab4130dd8cdc55ea294ec39f76f2bc507a0f75f4f873e38631a836ca7","impliedFormat":1},{"version":"f7c024ce0f73f3a0e56f35826bed34dd9743ad7daa19068acca653dd7d45f010","impliedFormat":1},{"version":"cf5ba7f16612042fff04ee9af4e336a156afa07850dc9ad11d43abac38ae612e","impliedFormat":1},{"version":"596d057adf5da16026fde7dc76c88c6690ebf16e46c230492a926ea34a88513e","impliedFormat":1},{"version":"24687523374b3ee67cd2499475dde9f08dd9a254a020dd06b4251761ab30834c","impliedFormat":1},{"version":"1c396d6df21e242e079a88f0a186f81fad563b16b8864445a441ad2b0ba706dd","impliedFormat":1},{"version":"653060b69b4c62825fca79d91259a5f42736f56dba428322b36cfae593ee8359","impliedFormat":1},{"version":"d38c7510cee97b30fe3fee6f4729580d29fca94c7115cac0f1197da6af575bfc","impliedFormat":1},{"version":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","impliedFormat":1},{"version":"22d2beb5b22408cc993cc94671e4625652843f92b5fee4dd34e9092ff818d733","impliedFormat":1},{"version":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","impliedFormat":1},{"version":"8a8bf772f83e9546b61720cf3b9add9aa4c2058479ad0d8db0d7c9fd948c4eaf","impliedFormat":1},{"version":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","impliedFormat":1},{"version":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","impliedFormat":1},{"version":"973b59a17aaa817eb205baf6c132b83475a5c0a44e8294a472af7793b1817e89","impliedFormat":1},{"version":"ada39cbb2748ab2873b7835c90c8d4620723aedf323550e8489f08220e477c7f","impliedFormat":1},{"version":"1364f64d2fb03bbb514edc42224abd576c064f89be6a990136774ecdd881a1da","impliedFormat":1},{"version":"741c438ec079a077b08d37d9c0466924b68e98ed47224e83fcb125c5863eb355","impliedFormat":1},{"version":"e8da637cbd6ed1cf6c36e9424f6bcee4515ca2c677534d4006cbd9a05f930f0c","impliedFormat":1},{"version":"fa34a00e044e9a3a6044abdb52d38bc7877ff1d6348aa79be99774e413c2568a","impliedFormat":1},{"version":"424b42ca9bf3d0aa599795b3b7cdebdd40d27c876e77664ec9526f24304b3947","impliedFormat":1},{"version":"34634a3860f2cba928e6e5a27a18d4c4c5af6d979c8ad08aa6df624c2c431d70","impliedFormat":1},{"version":"e80167a892438edd3ac83c96c4fd011c59c2dfc82d8d8fffcf7888820ea74a59","impliedFormat":1},{"version":"4c91cc1ab59b55d880877ccf1999ded0bb2ebc8e3a597c622962d65bf0e76be8","impliedFormat":1},{"version":"d9b3871884da16c989d2ae3a7292ceeb2f4d85c288cecb7f4a2adf562d8d4fbe","impliedFormat":1},{"version":"ca1b882a105a1972f82cc58e3be491e7d750a1eb074ffd13b198269f57ed9e1b","impliedFormat":1},{"version":"b714a2744382be1f2c8bf6e5376b0e4cc5546c2a0ed7585c8da82a9a3d9675ee","impliedFormat":1},{"version":"3867ca0e9757cc41e04248574f4f07b8f9e3c0c2a796a5eb091c65bfd2fc8bdb","impliedFormat":1},{"version":"6c66f6f7d9ff019a644ff50dd013e6bf59be4bf389092948437efa6b77dc8f9a","impliedFormat":1},{"version":"58902668adae2e5eb67efbccb4048afa02308fa684f1a4e4c7d47668ecf58c1b","impliedFormat":1},{"version":"ef2d1bd01d144d426b72db3744e7a6b6bb518a639d5c9c8d86438fb75a3b1934","impliedFormat":1},{"version":"b50e6d569520af07eb7c9d95ce1325d10c19b9ea6d97f8edb0f0ef102a5fa900","impliedFormat":1},{"version":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","impliedFormat":1},{"version":"7ed37a3d7166e17213f7587a243a2d46189460b50156c177c3ad693045d21c8a","impliedFormat":1},{"version":"476c48dfa7aef1b279542a1d90018f67912b3c970e147b77c2d8063c40c06b24","impliedFormat":1},{"version":"17937316a2f7f362dd6375251a9ce9e4960cfdc0aa7ba6cbd00656f7ab92334b","impliedFormat":1},{"version":"be2d91ce0cef98ac6a467d0b48813d78ae0a54d5f1a994afb16018a6b45f711d","impliedFormat":1},{"version":"99ace27cc2c78ef0fe3f92f11164eca7494b9f98a49ee0a19ede0a4c82a6a800","impliedFormat":1},{"version":"c89845d0f0fe40e7f8c423645f1577b91b6d67790eb6f394eb66779035f3a52e","impliedFormat":1},{"version":"724784171425fcd7b6b93dba0620e65eceea72e0855ff5d23bd94dbd2f1ed929","impliedFormat":1},{"version":"41917d0734622090b8b1928926cfc6ff16a7d3d6e997ba0ef7d67ef100ed0181","impliedFormat":1},{"version":"c5426dbfc1cf90532f66965a7aa8c1136a78d4d0f96d8180ecbfc11d7722f1a5","impliedFormat":1},{"version":"028457d83dd9f4f8e7fcaa9acd229d2de6ebb677675895b8b3bd95e842b82907","impliedFormat":1},{"version":"a7a92f071d6891b2fa6542e343bdebc819492e6e14db37563bb71b8bd7e9b83f","impliedFormat":1},{"version":"6e5f5cee603d67ee1ba6120815497909b73399842254fc1e77a0d5cdc51d8c9c","impliedFormat":1},{"version":"f6404e7837b96da3ea4d38c4f1a3812c96c9dcdf264e93d5bdb199f983a3ef4b","impliedFormat":1},{"version":"e219008d55d30c04b6aa1b0a52d742788ef129ff1d0fc235953b9e44b0536866","impliedFormat":1},{"version":"3cd0346fc79e262233785d9fe2cbad08fc3fe6339af3419791687152ddfe5596","impliedFormat":1},{"version":"b1645ede06e14485c0cbcae199c5d9075f116fe34d9df7f55609511798e51878","impliedFormat":1},{"version":"2652448ac55a2010a1f71dd141f828b682298d39728f9871e1cdf8696ef443fd","impliedFormat":1},{"version":"361e2b13c6765d7f85bb7600b48fde782b90c7c41105b7dab1f6e7871071ba20","impliedFormat":1},{"version":"6459054aabb306821a043e02b89d54da508e3a6966601a41e71c166e4ea1474f","impliedFormat":1},{"version":"ba7f9c1882b80478c7fe2268f12e06bb02445212ae104c92b03e4f774e605ae5","impliedFormat":1},{"version":"d23518a5f155f1a3e07214baf0295687507122ae2e6e9bd5e772551ebd4b3157","impliedFormat":1},{"version":"0f6963f2095aadb707e22b71090ac352f41dbbc3189db4a3416f905f07a1358d","impliedFormat":1},{"version":"a966ea6e57d54a96fd90453fb40ef482b61cec8e0797e6b3074925226643c7c6","impliedFormat":1},{"version":"13a6e015b9e1f704c3217955d23372c0e60dd1c633619357ddbd66c5bd80a80c","impliedFormat":1},{"version":"88961917ec908f9fde57b86b8038b8b30766ba14cfdcc214c7c5498d7c9f7924","impliedFormat":1},{"version":"369db4c180c005815c807c5a2952d44c38db8572afa1c52565602f44dbdd77b1","impliedFormat":1},{"version":"120599fd965257b1f4d0ff794bc696162832d9d8467224f4665f713a3119078b","impliedFormat":1},{"version":"056903d58aab97535445ec11984be0533769b4a36a422ac6eba01c2e2571dbd7","impliedFormat":1},{"version":"b47bb50ee9d8ac4f69ff2f616b556905e7cb486c554fcc7e04f31c21dfd5e919","impliedFormat":1},{"version":"48e8af7fdb2677a44522fd185d8c87deff4d36ee701ea003c6c780b1407a1397","impliedFormat":1},{"version":"606e6f841ba9667de5d83ca458449f0ed8c511ba635f753eaa731e532dea98c7","impliedFormat":1},{"version":"3026abd48e5e312f2328629ede6e0f770d21c3cd32cee705c450e589d015ee09","impliedFormat":1},{"version":"4a8bae6576783c910147d19ec6bef24fd2a24e83acbbb2043a60eec7134738e6","impliedFormat":1},{"version":"c325e0ae43fb49d82042ad9d8740fb7ae5aa10900697bcc253286bb3b25b5442","impliedFormat":1},{"version":"ad444a874f011d3a797f1a41579dbfcc6b246623f49c20009f60e211dbd5315e","impliedFormat":1},{"version":"78bb3ce0146e6c4ba34eb2a9fc312bae7c8d5242027b921105b2449369a53775","impliedFormat":1},{"version":"1d07d33162aa6e67fadac57f94278f1993c2cf812235343f0497a052313eddf4","impliedFormat":1},{"version":"d1a8da005ce5b2974b6b4bca95327d6aa230df23a7446e609c7e25ea84d7cf13","impliedFormat":1},{"version":"e927c2c13c4eaf0a7f17e6022eee8519eb29ef42c4c13a31e81a611ab8c95577","impliedFormat":1},{"version":"1822b69406252b606dc1aec3231a7104ac1d456cfa2c0a9041e61061895ae348","impliedFormat":1},{"version":"1780690f7be480fc5802913af3bbcd09e000c6ce5362088f236e0ec033cce0eb","impliedFormat":1},{"version":"c1ac179620434b59c1569f2964a5c7354037ac91a212a1fb281673589965c893","impliedFormat":1},{"version":"9f891dc96f3e9343c4e823ba28195fd77e59c84199696a8bdfe7b67925732409","impliedFormat":1},{"version":"27efe8aa87d6699088ba2bb78a2101d51054f6273e0827f24e9caef82647ca5c","impliedFormat":1},{"version":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","impliedFormat":1},{"version":"22314b54ad811b6e5df03e2582fc77fe9f278b32e1ab0a7980a9952213fdf988","impliedFormat":1},{"version":"dd06fe69e7ab5b6f0d10014949cb1cad7cc08fb1b6232724189e566c494c0958","impliedFormat":1},{"version":"3ab053b24799a152637cca4f49533ec144c533740da075ee05254e6336ada26d","impliedFormat":1},{"version":"2c6f043430f24bde409ed1e70d197b3ef70607cd656817bfd6cf02e630bb7a39","impliedFormat":1},{"version":"495a5da35b04cd142d1301921ce8776c3bd8eab85bbf0ea694e631bc5cd35338","impliedFormat":1},{"version":"46ceb528c649c7c2c6d1c46e774c9f049f3e4f15766c5efaf6b510e0b5fd1434","impliedFormat":1},{"version":"50f960fccfe4851cd557fecd4c182e39a6f68dc624d83af6c5e04219a5c6fd67","impliedFormat":1},{"version":"6735fc38f15c72bdc9cdb426de2d1f46340f863066dc253a396c459768de040f","impliedFormat":1},{"version":"a1c8542ed1189091dd39e732e4390882a9bcd15c0ca093f6e9483eba4e37573f","impliedFormat":1},{"version":"a805c88b28da817123a9e4c45ceb642ef0154c8ea41ea3dde0e64a70dde7ac5f","impliedFormat":1},{"version":"ce2fabbd5f8ce94c8ad98dae3b5806b3e57c77e8be9e5d42769eb6dee3aa0488","impliedFormat":1},{"version":"32531dfbb0cdc4525296648f53b2b5c39b64282791e2a8c765712e49e6461046","impliedFormat":1},{"version":"0ce1b2237c1c3df49748d61568160d780d7b26693bd9feb3acb0744a152cd86d","impliedFormat":1},{"version":"e489985388e2c71d3542612685b4a7db326922b57ac880f299da7026a4e8a117","impliedFormat":1},{"version":"d7f7b8dbdbe51042f63f0d671fc60c22465cb48e18c5dcb4c36baa83d773f5e8","impliedFormat":1},{"version":"19dcdc086f0c02968d5d774a8199dca62e5817797828e8d228658b75dcc1f616","affectsGlobalScope":true,"impliedFormat":1},{"version":"fd1b9d883b9446f1e1da1e1033a6a98995c25fbf3c10818a78960e2f2917d10c","impliedFormat":1},{"version":"61c62ae9c475b526d47482b0b1f9bfcf8fdf889aae83b2e9590b5ddacd2e1245","impliedFormat":1},{"version":"de9d2df7663e64e3a91bf495f315a7577e23ba088f2949d5ce9ec96f44fba37d","impliedFormat":1},{"version":"c7af78a2ea7cb1cd009cfb5bdb48cd0b03dad3b54f6da7aab615c2e9e9d570c5","impliedFormat":1},{"version":"1dc574e42493e8bf9bb37be44d9e38c5bd7bbc04f884e5e58b4d69636cb192b3","impliedFormat":1},{"version":"6bf9cdef836ed04a0b23414d26a134dbee65d8fa50153bbe5bdadc9bd55dd2df","affectsGlobalScope":true,"impliedFormat":1},{"version":"db01d18853469bcb5601b9fc9826931cc84cc1a1944b33cad76fd6f1e3d8c544","affectsGlobalScope":true,"impliedFormat":1},{"version":"6b8e8c0331a0c2e9fb53b8b0d346e44a8db8c788dae727a2c52f4cf3bd857f0d","impliedFormat":1},{"version":"0aa0f0184c0f9635dd1b95c178223aa262bb01ec8ac7b39c911ef2bd32b8f65b","affectsGlobalScope":true,"impliedFormat":1},{"version":"ec29be0737d39268696edcec4f5e97ce26f449fa9b7afc2f0f99a86def34a418","impliedFormat":1},{"version":"64fec7993ec865407dfdd8adac3d3faf01dc72c46dc41f7d026bf7bee7d0e86a","impliedFormat":1},{"version":"a1001c631ef2add7e528f05d759f96a6c3f4a86ec29560440c73b2a7be7f2c64","impliedFormat":1},{"version":"edaa27d57d30467edc63e9da7e7196acd315b02071f2c7ecd8475085a5cab9a2","impliedFormat":1},{"version":"65c24a8baa2cca1de069a0ba9fba82a173690f52d7e2d0f1f7542d59d5eb4db0","impliedFormat":1},{"version":"ec9fd890d681789cb0aa9efbc50b1e0afe76fbf3c49c3ac50ff80e90e29c6bcb","impliedFormat":1},{"version":"167e0ad8d357a1c1a7d68be49914c7a446560c9c4a35d65c6970635c604e8602","impliedFormat":1},{"version":"9eac5a6beea91cfb119688bf44a5688b129b804ede186e5e2413572a534c21bb","impliedFormat":1},{"version":"6c292de17d4e8763406421cb91f545d1634c81486d8e14fceae65955c119584e","impliedFormat":1},{"version":"b7fff2d004c5879cae335db8f954eb1d61242d9f2d28515e67902032723caeab","impliedFormat":1},{"version":"8303df69e9d100e3df8f2d67ec77348cb6494dc406356fdd9b56e61aa7c3c758","impliedFormat":1},{"version":"3624d88a0d06336c3620f3a4e8c5a711378fb66969614979ee1f6d7f185f3186","impliedFormat":1},{"version":"4545c1a1ceca170d5d83452dd7c4994644c35cf676a671412601689d9a62da35","impliedFormat":1},{"version":"15959543f93f27e8e2b1a012fe28e14b682034757e2d7a6c1f02f87107fc731e","impliedFormat":1},{"version":"a2d648d333cf67b9aeac5d81a1a379d563a8ffa91ddd61c6179f68de724260ff","impliedFormat":1},{"version":"4e828bf688597c32905215785730cbdb603b54e284d472a23fc0195c6d4aeee8","impliedFormat":1},{"version":"a3f41ed1b4f2fc3049394b945a68ae4fdefd49fa1739c32f149d32c0545d67f5","impliedFormat":1},{"version":"4da80db9ed5a1a20fd5bfce863dd178b8928bcaf4a3d75e8657bcae32e572ede","impliedFormat":1},{"version":"47699512e6d8bebf7be488182427189f999affe3addc1c87c882d36b7f2d0b0e","impliedFormat":1},{"version":"5fa3f0316dcc2cce13c29a244144dc6c98981054a3047b6bcd5beb62e37ac529","impliedFormat":1},{"version":"898b714aad9cfd0e546d1ad2c031571de7622bd0f9606a499bee193cf5e7cf0c","impliedFormat":1},{"version":"09cb73020ab795df196977eee9f4531614109f07c943bdbe55a9cf858c83dc34","impliedFormat":1},{"version":"fedebeae32c5cdd1a85b4e0504a01996e4a8adf3dfa72876920d3dd6e42978e7","impliedFormat":1},{"version":"7531bb445f08a05e9a83c0a366c67cb5131c9816eb1f00c6362b31792639fc37","impliedFormat":1},{"version":"cdf21eee8007e339b1b9945abf4a7b44930b1d695cc528459e68a3adc39a622e","impliedFormat":1},{"version":"1d079c37fa53e3c21ed3fa214a27507bda9991f2a41458705b19ed8c2b61173d","impliedFormat":1},{"version":"922bea60daff1f927afcf650f440bc1939f87f8f6710627d3143a0f721479f12","impliedFormat":1},{"version":"5835a6e0d7cd2738e56b671af0e561e7c1b4fb77751383672f4b009f4e161d70","impliedFormat":1},{"version":"c0eeaaa67c85c3bb6c52b629ebbfd3b2292dc67e8c0ffda2fc6cd2f78dc471e6","impliedFormat":1},{"version":"4b7f74b772140395e7af67c4841be1ab867c11b3b82a51b1aeb692822b76c872","impliedFormat":1},{"version":"cb048c7e28bdc3fc12766cc0203cc1da6c19ecb6d9614c7fc05d9df0908598db","impliedFormat":99},{"version":"c2008605e78208cfa9cd70bd29856b72dda7ad89df5dc895920f8e10bcb9cd0a","impliedFormat":99},{"version":"ec61ebac4d71c4698318673efbb5c481a6c4d374da8d285f6557541a5bd318d0","impliedFormat":99},{"version":"10ec84e648ffc7654868ca02c21a851bc211c8e4d50fd68131c1afa9afd96a33","impliedFormat":99},{"version":"5ca737bb274df83fbc6994ada25fa0b9f89f86c48b35b9811f747a0d0b9a180b","impliedFormat":1},{"version":"16fd66ae997b2f01c972531239da90fbf8ab4022bb145b9587ef746f6cecde5a","affectsGlobalScope":true,"impliedFormat":1},{"version":"fc8fbee8f73bf5ffd6ba08ba1c554d6f714c49cae5b5e984afd545ab1b7abe06","affectsGlobalScope":true,"impliedFormat":1},{"version":"6d7a1155bc29ed4f608bad12f17d1eadccfc4a5ca55f0c483255089ab5c30855","impliedFormat":1},{"version":"b789bf89eb19c777ed1e956dbad0925ca795701552d22e68fd130a032008b9f9","impliedFormat":1},"9269d492817e359123ac64c8205e5d05dab63d71a3a7a229e68b5d9a0e8150bf",{"version":"3d47e9f1635e44ee3ae907309f93ac7dcd40e7596b5c47b13ef0804b7081b8c4","signature":"86f56e7da1308af6cda58ae9198c1ac4ddda6fa35f0a4da171b22c7f42909276"},"e80628ab873100735b046e0f4d8021824a121269d4c97d9218eadd19c8489128",{"version":"c4cf5db6e5b455583ca59cc2f17c0b2edd7c813cb99aa441b222e1f595e4327f","signature":"5827e4599270a895f7fff4036c77c0f25c041344ce50eb94cc46edfed00c4ebc"},{"version":"000fdb08c94fab3ae370fac05e80de8ebbb2c71c7d63f0302d37d2d3bf01198a","signature":"4f4ce6860737e466b42104e1015956360232357b65932e5d329d43ecac02d1ff"},{"version":"6f8b6ca0d9811d3b0e8860bd538cfc23769f3d42d351d9185303bd9e13c1457f","signature":"cc31d532e57a6ca41a12fc15622a0b9a8ade45bc01ca5cec6b27a99af934e637"},{"version":"bfd2c39b604b1f4dfd542ca55da5f36587876c32ee91812e97da078f7e01f347","signature":"b38b79e6665b0b7f33554a7992c506b15ca17de64067a7628ced474f85a07067"},"105a83531661110f00a992af79e6ff0695e09d47bcea7a75c4b4d054b7815822",{"version":"bc058a85087a47f843cd02e9064f1f2d1da9544f2bcd84130cb573e0fe422d85","signature":"bfe1927417e742bfd358ef24ad38361eb75857a29542901d47c8cb5a4bdd5104"},{"version":"ea05bedda5d62698b2107143e99effb9d8d85c1279a1d23b0d0fff4524ea10c9","signature":"fb39b898463c3bf8a77bc32be2e2fb54c0f878ff2dfad1696536402fcf702893"},"765db7bf5b4d5a177c73f5168722afcf5645f1d04ae9111dceab7cc9cf18bbd4","82b4ea7e6b17494ba81ae7bdc8c1f27de14fd84119a895fb85a12ac1419f84f3",{"version":"42e7f2c2e5fc8f717ecd568458deca6f33d0107be690140898edf813da3fd3a9","signature":"120d7e59433bb15760deca2152bee05de1290cdfcb3d94d472c30ed4e9c93f5b"},{"version":"531eda29fb787db9147c138eaeb38c20f582e764d95a4d751441b7df841664cf","signature":"0da91303f2b47659e8fe9f0f61492ee569990b7e3f2e198c47c991376cb677e8"},{"version":"831c6fcb905a2b4c056a3a4c41e4c4d724ba68997462846775a18159e332bd6d","signature":"571e3780ed59ed2271f8cb4dfc2cc12e69b6fa2f6c5b56a640d69f671d636bd6"},"c8718c10a700881f04469031df887b6b4c5103e40c7662a6e4916cbdf3a07662",{"version":"ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","impliedFormat":1},{"version":"3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","impliedFormat":1},{"version":"8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","impliedFormat":1},{"version":"d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","impliedFormat":1},{"version":"a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","impliedFormat":1},{"version":"e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","impliedFormat":1},{"version":"462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","impliedFormat":1},{"version":"5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","impliedFormat":1},{"version":"d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","impliedFormat":1},{"version":"3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","impliedFormat":1},{"version":"a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","impliedFormat":1},{"version":"1d2699a343a347a830be26eb17ab340d7875c6f549c8d7477efb1773060cc7e5","impliedFormat":1},{"version":"45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","impliedFormat":1},{"version":"bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","impliedFormat":1},{"version":"2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","impliedFormat":1},{"version":"82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","impliedFormat":1},{"version":"b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","impliedFormat":1},{"version":"b598deb1da203a2b58c76cf8d91cfc2ca172d785dacd8466c0a11e400ff6ab2d","impliedFormat":1},{"version":"f3ded47c50efa3fbc7105c933490fa0cf48df063248a5b27bca5849d5d126f9b","impliedFormat":1},{"version":"ca319b3b4e8c9c09d27bf3f3c4051bd56a4dc76977cc7a4daf5ad697ec9d605e","impliedFormat":1},{"version":"fd624f7d7b264922476685870f08c5e1c6d6a0f05dee2429a9747b41f6b699d4","affectsGlobalScope":true,"impliedFormat":1},{"version":"abc162795ad6bf4fc3cf77dd02839ecfb12db1e3d81f817802caa1ce2997b233","impliedFormat":1},{"version":"742d4b7b02ffc3ba3c4258a3d196457da2b3fec0125872fd0776c50302a11b9d","affectsGlobalScope":true,"impliedFormat":1},{"version":"03566a51ebc848dec449a4ed69518e9f20caa6ac123fa32676aaaabe64adae8e","impliedFormat":1},{"version":"b2d0630483bf337ef9dac326c3334a245aa4946e9f60f12baf7da5be44beafbb","impliedFormat":1},{"version":"5511d10f5955ddf1ba0df5be8a868c22c4c9b52ba6c23fef68cdbd25c8531ed5","impliedFormat":1},{"version":"61f41da9aaa809e5142b1d849d4e70f3e09913a5cb32c629bf6e61ef27967ff7","impliedFormat":1},{"version":"da0195f35a277ff34bb5577062514ce75b7a1b12f476d6be3d4489e26fcf00d8","impliedFormat":1},{"version":"0fdd32135a5a990ce5f3c4439249e4635e2d439161cfad2b00d1c88673948b5e","impliedFormat":1},{"version":"4bf386c871996a1b4da46fc597d3c16a1f3ddae19527c1551edd833239619219","impliedFormat":1},{"version":"c3ad993d4903afc006893e88e7ad2bae164e7137f7cd2a0ef1648ff4df4a2490","impliedFormat":1},{"version":"feaf45e9cfacd68dfdf466a0e0c2c6fa148cccf41e14a458c4d0424af7e94dfb","impliedFormat":1},{"version":"d33bf1137240c5d0b1949f121aed548bc05e644bb77fdc0070bf716d04491eb9","impliedFormat":1},{"version":"dbc614c36021e3813a771b426f2522a1dd3641d1fc137f99a145cb499da1b8c3","impliedFormat":1},{"version":"d2194a2e7680ad3c2d9a75391ba0b0179818ca1dc4abed6caac815a7513c7913","impliedFormat":1},{"version":"601bf048b074ce1238a426bccd1970330b30297b1a5e063b5910750c631994f1","impliedFormat":1},{"version":"0fc1fb55c2de7daac4f2378f0a5993ad9c369f6e449a9c87c604c2e78f00f12b","impliedFormat":1},{"version":"7082184f76e40fcf9562beb1c3d74f3441091501bd4bf4469fe6ced570664b09","impliedFormat":1},{"version":"6be1912935b6e4430e155de14077a6b443254a4e79a0b836484f6b2d510f6ff1","impliedFormat":1},{"version":"3f425f99f8dbc920370d86c5b7ebff7b2a710fd991b012559d35f9e4adee1661","impliedFormat":1},{"version":"1ad191863b99a80efa56eab1a724da76641fa0a31333dbdb1dca4e6bd182309a","impliedFormat":1},{"version":"2270cf0bacf7d694e3047c8fa13873b7025e6ddfa0f7b63acee44c1e9927bcc0","impliedFormat":1},{"version":"8ffc8385762a724b7eebfa8317152bfba4512168d6d906f1a9698a9a6038b47b","impliedFormat":1},{"version":"cfff1509be4fd735a305637de296711313d8660644b766c4e6b603baf7149b12","impliedFormat":1},{"version":"4535531d0b0bba5cfb0917f13f9d4a50cea4239895de55c02b0f6bc3f3eb646d","impliedFormat":1},{"version":"797ed7a333103aa45a7cebfaf9a04454b59a22a7faf2e9f5a743d9ee44cd8024","impliedFormat":1},{"version":"3cb7cceea4cf68d02e5eba1f412ef0706ba60fbefd8a9c5f3a839bfa35857967","impliedFormat":1},{"version":"3042247c61fa9d67ff654424d9864e2dc7b9ff080540b960cbcdba18002a375a","impliedFormat":1},{"version":"3e0b0c20c7c314d9278c0b6b08b8d84f4552fb4acbb641ddc33deb35dc54f723","impliedFormat":1},{"version":"2d3b3589a50def08e636031988f1344d7c26f1b6bbf3b0e0078922a6770d9bb1","impliedFormat":1},{"version":"92e8887e25fd27cacf0bd6b84d388536ff843d46e2eee88a1659369a19bf6453","impliedFormat":1},{"version":"08f2ee0e58420657f003cb53c801e3bbb08de2d0a3f4cb77ea8cf6f3675f3722","impliedFormat":1},{"version":"2ab874598ce7f5b3f693ce4e2de5647944845c50396b147f8a5f7c7d06dc0bc7","impliedFormat":1},{"version":"fc02a0675473c0fe3f528753abb9328a04122f4204856202b26c1ebaa35fb9e5","impliedFormat":1},{"version":"110afe66c4206c0a14e9777d421db05c1b77fbe1736c4bcde21cb98daa147116","impliedFormat":1},{"version":"a623ad0abc212091a2307c131f1c7711f5d38e3f8c1ddb1c3bc9c0eec212d213","impliedFormat":1},{"version":"09c17c97eea458ebbabe6829c89d2e39e14b0f552e2a0edccd8dfcfb073a9224","impliedFormat":1},{"version":"344f2a247086a9f0da967f57fb771f1a2bcc53ef198e6f1293ef9c6073eb93e8","impliedFormat":1},{"version":"86e96c0b147a9bc378c5e3522156e4ad1334443edb6196b6e2c72ec98e9f7802","impliedFormat":1},{"version":"5ec92337be24b714732dbb7f4fa72008e92c890b0096a876b8481999f58d7c79","impliedFormat":1},{"version":"97f3c7370f9a2e28c695893b0109df679932a1cde3c1424003d92581f1b8dda7","impliedFormat":1},{"version":"d50a158fc581be7b1c51253ad33cb29c0a8ce3c42ca38775ffadf104c36376d0","impliedFormat":1},{"version":"1f2cdbf59d0b7933678a64ac26ae2818c48ff9ebf93249dde775dc3e173e16bf","impliedFormat":1},{"version":"62d5bea6d7dd2e9753fb9e0e47a6f401a43a51a3a36fe5082a0a5c200588754c","impliedFormat":1},{"version":"8fcc8b86f321e4c54820f57ccd0dcbeb0290c14bc05192fea8a096b0fc2be220","impliedFormat":1},{"version":"a4e0582d077bc6d43c39b60ddb23445c90981540240146e78b41cef285ae26c4","impliedFormat":1},{"version":"d511b029eaee4f1ec172e75357e21295c9d99690e6d834326bccd16d1a7a8527","impliedFormat":1},{"version":"89d63fe39f7262f62364de0a99c6be23b9b99841d4d22dee3720e7fd9982bb3d","impliedFormat":1},{"version":"d37b3eade1a85e9f19a397f790c8a6184ae61efafa97371a1ddff09923727ae7","impliedFormat":1},{"version":"c876fb242f4dc701f441c984a2136bee5faf52f90244cdc83074104a8fa7d89a","impliedFormat":1},{"version":"7c4ac500234a10250dd2cfa59f4507f27d4dcc0b69551a4310184a165d75c15e","impliedFormat":1},{"version":"97c3a26c493f08edc5df878a8c6ca53379c320ff1198c2edbb48ab4102ad7559","impliedFormat":1},{"version":"cd6aac9f28db710970181cfe3031b602afeec8df62067c632306fc3abd967d0f","impliedFormat":1},{"version":"03fffbdf01b82805127603c17065f0e6cd79d81e055ec2ed44666072e5a39aae","impliedFormat":1},{"version":"04af3a1ba7fad31f2ba9b421414a37ece8390fd818cc1de7737ccd3ef80f8381","impliedFormat":1},{"version":"9a72a659fa7e62ce142c585e0cc814004948d103b969e1971c92c3dfaffda46c","impliedFormat":1},{"version":"5a776b3003be0c9a9787b16cec55ab073c508bbe6ffa8e7c06e5ba145c85d054","impliedFormat":1},{"version":"5868cb5a3c2ec960f1380e814345287c7237d3cc21f18c3951011505c7cb2a76","impliedFormat":1},{"version":"2e45f48aa48512f8cd8872cbf6d3bde5d08acb894411287b85f637ddceeac140","impliedFormat":1},{"version":"3aaaf6f2f5eaf5fd88054937eece8704c261fad2224e687cef68c25c01c2d83e","impliedFormat":1},{"version":"71ed61999a29f4614f62ce5660cd3e363ae88a7908c70de794363bfc4c1e50eb","impliedFormat":1},{"version":"23b2cffed3afc85358c44bb5b85e9d59b78a245732fd573633b3df15b6bdcbbb","impliedFormat":1},{"version":"f9ca07d4177705fc92b1322d756c4b976c00f6e745c198f13b9c5774a6288a9b","impliedFormat":1},{"version":"f0974cf5c7df952d128503f08d079678023d49efa1b16bc83ccfd5ae22bd402a","impliedFormat":1},{"version":"72695932ff1704ba58de83ad6e8fa78612d6537245a794d08043b71f338c3878","impliedFormat":1},{"version":"c7cfa655e06288327e6c5638ac940098cd6e48a6b07f2bd99a57f5f5958532b0","impliedFormat":1},{"version":"4e001b1fac558e8cf29b906e79c0f7825dce0e70a5f353c86737c9fd13ab9cbe","impliedFormat":1},{"version":"aa634ec6f13f1848b3bec2c2515ddcc2629b5b6c7354350434db468564b6e1e4","impliedFormat":1},{"version":"480048aef59df1afb2dce06d586b05263d65280c264e731e8681ea0aba0bc9b4","impliedFormat":1},{"version":"888db9b13cf5a2c87d5d09ab8d9ccd25774406497a2c25a5be74ba0ca6060e26","impliedFormat":1},{"version":"5c6f232642ad39d26132c64dd84e5244f8f576feed08e31bce6f065fe0dfad10","impliedFormat":1},{"version":"b6c2b0afad8d79ae13b9c04076936423b7ea8d5e5e93b7c5365b98dd1bc153b4","impliedFormat":1},{"version":"f754b2431441dff6158d3e95fb0032542cccce359878d915e973098678465a31","impliedFormat":1},{"version":"af8058bf88e4b857698fd9242c09155fc8052e20404ebb99d04e2e6124c1d9b8","impliedFormat":1},{"version":"aaa67d463fcf372a48cb00337d6c94553d4b4ccbeec1b6c6b4f97001031ef03f","impliedFormat":1},{"version":"4e98e4877be70a88bc578f6db43b4669713e27471fb4cc6a01cb912521b31d33","impliedFormat":1},{"version":"7cb2668c3c9d611d1b828abf723c910f1b22cd60bb7617c5a0abe623bac252d1","impliedFormat":1},{"version":"a570f70ce396e3ed3c34078658692f7e6dca24447745b9acba4495e58f67dd83","impliedFormat":1},{"version":"0dc49cc7b738d3f477cb9b08df5d94240931f403ae0113badb979c8c4caf6af2","impliedFormat":1},{"version":"1740fd89df6046ebde025a1d632fc5bc4745ca5753915dde62bdcc37fde8968a","impliedFormat":1},{"version":"f4f0ea1c680fddc9c4a3131745bb45b61599e218b68fdaf2f1ca50d5a0b26156","impliedFormat":1},{"version":"ec7cdca9484f5d3d110170bc5b831e0ac7dd3fafa75a882b25d403ed2c166be3","impliedFormat":1},{"version":"3f297bad7b8a3f5041830a2d51b7222a741f5085c005dc9b457c501b6524d281","impliedFormat":1},{"version":"afbe53d3401fc277cf18970b33686572bf82af2802945ca3a49fa40ad49d034e","impliedFormat":1},{"version":"47c6c5bea0c74764c31ff5b4b1c121361a4d530aa32849c6fc8f8f49df536b51","impliedFormat":1},{"version":"204ab2db5484c6ce0feeff05160671e2a0996f307281cff3f9213b3d78c62e5c","impliedFormat":1},{"version":"70fd161e2599865b01a80ac2a8e15923f4aef1dece0668725a983df46845326a","impliedFormat":1},{"version":"dbf77fc20cbf5a8b673c682b12b75fe7d3f8e20b6cc0e1576c2c9dbd709be1c3","impliedFormat":1},{"version":"41ef0c28c92362aaca8e5e27a5335ca7439350c480dab2bb0069abd82ecd3521","impliedFormat":1},{"version":"6c1c57404c3b4405e23b1f46d9745266898a8e5a1219c9e6f35eeccbb612de2d","impliedFormat":1},{"version":"7bc1e1f41e120e54f82b1b43796800b884bc3da9787a0b5686afab1e6ae186b8","impliedFormat":1},{"version":"933463696d029aae5236b915a7a388cef205f384f701f7a2c1344476ab322dce","impliedFormat":1},{"version":"7df313f4e0e99254afae519ec6decf65a592456e162c5a2e4dfe9422c0c36aac","impliedFormat":1},{"version":"30124f9e6e93af4652065f3c5e5da3458b98d197c54eb26dc8d6fb1e215aab64","impliedFormat":1},{"version":"f82e2b0dc492708527f7091e2ebf321b76ceb1bbea46ae7245b0f36bfa265504","impliedFormat":1},{"version":"ce4688cdcd99c64eed9bc5f21ffaecc08572e85fff08d265fb5940a51954a199","signature":"035495ba14f0967843742c1e3a46c242c1258eafcd65ff7806b95f31f89eeda6"},"67a33a22892da245ed2cb4050ca27f49dd36e8de99c993155347b1c3ad9fd7f0","7aeea6726a0383f338d123bfce133e2effac57d9d1eaffb3acb8bfca6ef8b46e","d513d4fb5043661f2d0b6bb5b034a33f8f2a1fcead5e89db159e66ebffff8f67",{"version":"2281f9f86b41870d6b42957c25ec0ee9c253c2057bffd3c73f2e6ac43ae887f6","signature":"ee67e49fb4565c97a222bd35801eb3f2fa178b723ce9b578fddc4c918ee2e330"},{"version":"f1d595585c005b94ebbe921b5e4d8e1c2dee9f64e67591e86252094235aa6f2f","signature":"5c9620744866a50e0f3f6ca838d7c27c27a59e3f16ae7380b25f76ad70c17e3d"},{"version":"f874ea4d0091b0a44362a5f74d26caab2e66dec306c2bf7e8965f5106e784c3b","impliedFormat":1},{"version":"d88b3dc8b7055665059ea06ffafce9467fc4bdfa7cb2d7a6f4262556bb482b0d","impliedFormat":1},{"version":"b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","impliedFormat":1},{"version":"32ddc6ad753ae79571bbf28cebff7a383bf7f562ac5ef5d25c94ef7f71609d49","impliedFormat":1},{"version":"670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","impliedFormat":1},{"version":"81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","impliedFormat":1},{"version":"069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","impliedFormat":1},{"version":"a3d3f704c5339a36da3ca8c62b29072f87e86c783b8452d235992142ec71aa2d","impliedFormat":1},{"version":"104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","impliedFormat":1},{"version":"cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","impliedFormat":1},{"version":"0dc6940ff35d845686a118ee7384713a84024d60ef26f25a2f87992ec7ddbd64","impliedFormat":1},{"version":"e2b48abff5a8adc6bb1cd13a702b9ef05e6045a98e7cfa95a8779b53b6d0e69d","impliedFormat":1},{"version":"f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","impliedFormat":1},{"version":"a4a39b5714adfcadd3bbea6698ca2e942606d833bde62ad5fb6ec55f5e438ff8","impliedFormat":1},{"version":"bbc1d029093135d7d9bfa4b38cbf8761db505026cc458b5e9c8b74f4000e5e75","impliedFormat":1},{"version":"1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","impliedFormat":1},{"version":"d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","impliedFormat":1},{"version":"b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","impliedFormat":1},{"version":"baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","impliedFormat":1},{"version":"2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed","impliedFormat":1},{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true,"impliedFormat":1},{"version":"b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","impliedFormat":1},{"version":"0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a","impliedFormat":1},{"version":"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","impliedFormat":1},{"version":"afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","impliedFormat":1},{"version":"035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","impliedFormat":1},{"version":"a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","impliedFormat":1},{"version":"5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","impliedFormat":1},{"version":"cdcc132f207d097d7d3aa75615ab9a2e71d6a478162dde8b67f88ea19f3e54de","impliedFormat":1},{"version":"0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","impliedFormat":1},{"version":"c085e9aa62d1ae1375794c1fb927a445fa105fed891a7e24edbb1c3300f7384a","impliedFormat":1},{"version":"f315e1e65a1f80992f0509e84e4ae2df15ecd9ef73df975f7c98813b71e4c8da","impliedFormat":1},{"version":"5b9586e9b0b6322e5bfbd2c29bd3b8e21ab9d871f82346cb71020e3d84bae73e","impliedFormat":1},{"version":"3e70a7e67c2cb16f8cd49097360c0309fe9d1e3210ff9222e9dac1f8df9d4fb6","impliedFormat":1},{"version":"ab68d2a3e3e8767c3fba8f80de099a1cfc18c0de79e42cb02ae66e22dfe14a66","impliedFormat":1},{"version":"d96cc6598148bf1a98fb2e8dcf01c63a4b3558bdaec6ef35e087fd0562eb40ec","impliedFormat":1},{"version":"f8db4fea512ab759b2223b90ecbbe7dae919c02f8ce95ec03f7fb1cf757cfbeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"19990350fca066265b2c190c9b6cde1229f35002ea2d4df8c9e397e9942f6c89","impliedFormat":99},{"version":"8fb8fdda477cd7382477ffda92c2bb7d9f7ef583b1aa531eb6b2dc2f0a206c10","impliedFormat":99},{"version":"66995b0c991b5c5d42eff1d950733f85482c7419f7296ab8952e03718169e379","impliedFormat":99},{"version":"9863f888da357e35e013ca3465b794a490a198226bd8232c2f81fb44e16ff323","impliedFormat":99},{"version":"b4c6184d78303b0816e779a48bef779b15aea4a66028eb819aac0abee8407dea","impliedFormat":99},{"version":"db085d2171d48938a99e851dafe0e486dce9859e5dfa73c21de5ed3d4d6fb0c5","impliedFormat":99},{"version":"62a3ad1ddd1f5974b3bf105680b3e09420f2230711d6520a521fab2be1a32838","impliedFormat":99},{"version":"a77be6fc44c876bc10c897107f84eaba10790913ebdcad40fcda7e47469b2160","impliedFormat":99},{"version":"06cf55b6da5cef54eaaf51cdc3d4e5ebf16adfdd9ebd20cec7fe719be9ced017","impliedFormat":99},{"version":"91f5dbcdb25d145a56cffe957ec665256827892d779ef108eb2f3864faff523b","impliedFormat":99},{"version":"052ba354bab8fb943e0bc05a0769f7b81d7c3b3c6cd0f5cfa53c7b2da2a525c5","impliedFormat":99},{"version":"927955a3de5857e0a1c575ced5a4245e74e6821d720ed213141347dd1870197f","impliedFormat":99},{"version":"fec804d54cd97dd77e956232fc37dc13f53e160d4bbeeb5489e86eeaa91f7ebd","impliedFormat":99},{"version":"03c258e060b7da220973f84b89615e4e9850e9b5d30b3a8e4840b3e3268ae8eb","impliedFormat":1},{"version":"fd0589ca571ad090b531d8c095e26caa53d4825c64d3ff2b2b1ab95d72294175","impliedFormat":1},{"version":"669843ecafb89ae1e944df06360e8966219e4c1c34c0d28aa2503272cdd444a7","affectsGlobalScope":true,"impliedFormat":1},{"version":"96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","impliedFormat":1},{"version":"abd6ccdaae9905ea2ec85488fdce744930862327633eebd40d429511f6a1d5da","impliedFormat":1},{"version":"b0f9ef6423d6b29dde29fd60d83d215796b2c1b76bfca28ac374ae18702cfb8e","impliedFormat":1},{"version":"fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","impliedFormat":1},{"version":"86ea91bfa7fef1eeb958056f30f1db4e0680bc9b5132e5e9d6e9cfd773c0c4fd","affectsGlobalScope":true,"impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"ff155930718467b27e379e4a195e4607ce277f805cad9d2fa5f4fd5dec224df6","affectsGlobalScope":true,"impliedFormat":1},{"version":"818e7c86776c67f49dbd781d445e13297b59aa7262e54b065b1332d7dcc6f59a","impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"03c92769f389dbd9e45232f7eb01c3e0f482b62555aaf2029dcbf380d5cee9e4","impliedFormat":1},{"version":"32d7f70fd3498bc76a46dab8b03af4215f445f490f8e213c80cf06b636a4e413","impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"17668c1aab598920796050ee5a00d961ede5e92595f6ac8908a975ed75a537e5","impliedFormat":1},{"version":"4ef960df4f672e93b479f88211ed8b5cfa8a598b97aafa3396cacdc3341e3504","impliedFormat":1},{"version":"cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","impliedFormat":1},{"version":"9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","impliedFormat":1},{"version":"c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","impliedFormat":1},{"version":"8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","impliedFormat":1},{"version":"86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","impliedFormat":1},{"version":"42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","impliedFormat":1},{"version":"ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","impliedFormat":1},{"version":"83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","impliedFormat":1},{"version":"1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","impliedFormat":1},{"version":"0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","impliedFormat":1},{"version":"cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","impliedFormat":1},{"version":"c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","impliedFormat":1},{"version":"f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","impliedFormat":1},{"version":"0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","impliedFormat":1},{"version":"7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","impliedFormat":1},{"version":"bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","impliedFormat":1},{"version":"52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","impliedFormat":1},{"version":"770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","impliedFormat":1},{"version":"d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","impliedFormat":1},{"version":"799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","impliedFormat":1},{"version":"2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","impliedFormat":1},{"version":"9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","impliedFormat":1},{"version":"397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","impliedFormat":1},{"version":"a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","impliedFormat":1},{"version":"a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","impliedFormat":1},{"version":"c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","impliedFormat":1},{"version":"4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","impliedFormat":1},{"version":"f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","impliedFormat":1},{"version":"cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","impliedFormat":1},{"version":"b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","impliedFormat":1},{"version":"c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","impliedFormat":1},{"version":"14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","impliedFormat":1},{"version":"a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","impliedFormat":1},{"version":"f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","impliedFormat":1},{"version":"3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","impliedFormat":1},{"version":"662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","impliedFormat":1},{"version":"c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","impliedFormat":1},{"version":"2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","impliedFormat":1},{"version":"34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","impliedFormat":1},{"version":"844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","impliedFormat":1},{"version":"ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","impliedFormat":1},{"version":"e7bb49fac2aa46a13011b5eb5e4a8648f70a28aea1853fab2444dd4fcb4d4ec7","impliedFormat":1},{"version":"464e45d1a56dae066d7e1a2f32e55b8de4bfb072610c3483a4091d73c9924908","impliedFormat":1},{"version":"da318e126ac39362c899829547cc8ee24fa3e8328b52cdd27e34173cf19c7941","impliedFormat":1},{"version":"24bd01a91f187b22456c7171c07dbf44f3ad57ebd50735aab5c13fa23d7114b4","impliedFormat":1},{"version":"4738eefeaaba4d4288a08c1c226a76086095a4d5bcc7826d2564e7c29da47671","impliedFormat":1},{"version":"736097ddbb2903bef918bb3b5811ef1c9c5656f2a73bd39b22a91b9cc2525e50","impliedFormat":1},{"version":"dbec715e9e82df297e49e3ed0029f6151aa40517ebfd6fcdba277a8a2e1d3a1b","impliedFormat":1},{"version":"097f1f8ca02e8940cfdcca553279e281f726485fa6fb214b3c9f7084476f6bcc","impliedFormat":1},{"version":"8f75e211a2e83ff216eb66330790fb6412dcda2feb60c4f165c903cf375633ee","impliedFormat":1},{"version":"dbe69644ab6e699ad2ef740056c637c34f3348af61d3764ff555d623703525db","impliedFormat":1},{"version":"3f36c0c7508302f3dca3dc5ab0a66d822b2222f70c24bb1796ddb5c9d1168a05","impliedFormat":1},{"version":"b23d5b89c465872587e130f427b39458b8e3ad16385f98446e9e86151ba6eb15","affectsGlobalScope":true,"impliedFormat":1},{"version":"c6cdcd12d577032b84eed1de4d2de2ae343463701a25961b202cff93989439fb","impliedFormat":1},{"version":"203d75f653988a418930fb16fda8e84dea1fac7e38abdaafd898f257247e0860","impliedFormat":1},{"version":"c5b3da7e2ecd5968f723282aba49d8d1a2e178d0afe48998dad93f81e2724091","impliedFormat":1},{"version":"efd2860dc74358ffa01d3de4c8fa2f966ae52c13c12b41ad931c078151b36601","impliedFormat":1},{"version":"09acacae732e3cc67a6415026cfae979ebe900905500147a629837b790a366b3","impliedFormat":1},{"version":"f7b622759e094a3c2e19640e0cb233b21810d2762b3e894ef7f415334125eb22","impliedFormat":1},{"version":"99236ea5c4c583082975823fd19bcce6a44963c5c894e20384bc72e7eccf9b03","impliedFormat":1},{"version":"f6688a02946a3f7490aa9e26d76d1c97a388e42e77388cbab010b69982c86e9e","impliedFormat":1},{"version":"9f642953aba68babd23de41de85d4e97f0c39ef074cb8ab8aa7d55237f62aff6","impliedFormat":1},{"version":"529ac413f6eada3a1780c4050f4d4853488fc00652f45101737863e9ac519bff","impliedFormat":1},{"version":"bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","impliedFormat":1},{"version":"26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","impliedFormat":1}],"root":[[344,350],[352,359],[475,480]],"options":{"allowJs":true,"composite":false,"declaration":true,"declarationMap":true,"esModuleInterop":true,"inlineSources":false,"jsx":1,"module":99,"noUnusedLocals":false,"noUnusedParameters":false,"rootDir":"./src","skipLibCheck":true,"strict":false,"target":1},"referencedMap":[[344,1],[137,2],[138,2],[139,3],[97,4],[140,5],[141,6],[142,7],[92,8],[95,9],[93,8],[94,8],[143,10],[144,11],[145,12],[146,13],[147,14],[148,15],[149,15],[151,16],[150,17],[152,18],[153,19],[154,20],[136,21],[96,8],[155,22],[156,23],[157,24],[189,25],[158,26],[159,27],[160,28],[161,29],[162,30],[163,31],[164,32],[165,33],[166,34],[167,35],[168,35],[169,36],[170,8],[171,37],[173,38],[172,39],[174,40],[175,41],[176,42],[177,43],[178,44],[179,45],[180,46],[181,47],[182,48],[183,49],[184,50],[185,51],[186,52],[187,53],[188,54],[481,8],[114,55],[124,56],[113,55],[134,57],[105,58],[104,59],[133,60],[127,61],[132,62],[107,63],[121,64],[106,65],[130,66],[102,67],[101,60],[131,68],[103,69],[108,70],[109,8],[112,70],[99,8],[135,71],[125,72],[116,73],[117,74],[119,75],[115,76],[118,77],[128,60],[110,78],[111,79],[120,80],[100,81],[123,72],[122,70],[126,8],[129,82],[346,83],[348,84],[350,85],[349,86],[357,87],[354,88],[355,88],[353,89],[356,89],[345,90],[352,91],[347,92],[358,93],[359,90],[478,94],[477,95],[479,83],[480,83],[476,96],[475,97],[484,98],[482,8],[509,8],[512,99],[297,8],[424,100],[444,100],[430,101],[431,102],[437,103],[420,104],[433,105],[434,106],[423,100],[436,107],[435,108],[429,109],[425,100],[445,110],[440,8],[441,111],[443,112],[442,113],[432,114],[438,115],[439,8],[463,116],[447,117],[451,118],[453,119],[460,120],[458,121],[459,122],[457,123],[452,124],[456,125],[454,126],[467,127],[461,128],[455,111],[462,129],[448,130],[450,131],[449,132],[464,133],[468,134],[473,135],[470,136],[469,8],[474,137],[472,138],[471,139],[465,140],[446,8],[466,8],[426,100],[428,141],[427,100],[511,8],[374,8],[371,8],[370,8],[365,142],[376,143],[361,144],[372,145],[364,146],[363,147],[373,8],[368,148],[375,8],[369,149],[362,8],[367,150],[366,8],[378,151],[360,8],[487,152],[483,98],[485,153],[486,98],[488,8],[490,154],[489,155],[491,8],[496,156],[495,157],[494,158],[492,8],[501,159],[504,160],[505,161],[384,162],[382,8],[383,163],[502,8],[506,8],[507,164],[508,165],[517,166],[532,167],[533,168],[493,8],[534,8],[535,169],[536,8],[497,8],[537,8],[544,170],[541,171],[546,172],[545,173],[543,174],[542,173],[540,175],[538,159],[539,176],[84,8],[499,8],[500,8],[194,177],[195,178],[193,92],[377,179],[191,180],[192,181],[82,8],[85,182],[547,8],[572,183],[573,184],[548,185],[551,185],[570,183],[571,183],[561,183],[560,186],[558,183],[553,183],[566,183],[564,183],[568,183],[552,183],[565,183],[569,183],[554,183],[555,183],[567,183],[549,183],[556,183],[557,183],[559,183],[563,183],[574,187],[562,183],[550,183],[587,188],[586,8],[581,187],[583,189],[582,187],[575,187],[576,187],[578,187],[580,187],[584,189],[585,189],[577,189],[579,189],[498,190],[503,191],[588,8],[597,192],[589,8],[592,193],[595,194],[596,195],[590,196],[593,197],[591,198],[598,199],[600,200],[599,8],[531,8],[386,8],[387,8],[610,201],[601,8],[602,8],[603,8],[604,8],[605,8],[606,8],[607,8],[608,8],[609,8],[611,8],[612,202],[98,8],[510,8],[83,8],[516,203],[594,204],[409,8],[406,205],[408,205],[407,205],[405,205],[415,206],[410,207],[414,8],[411,8],[413,8],[412,8],[401,205],[402,205],[403,205],[399,8],[400,8],[404,205],[514,208],[515,209],[91,210],[309,211],[313,212],[315,213],[223,214],[235,215],[258,216],[224,217],[252,8],[240,218],[225,219],[243,218],[236,218],[200,218],[269,220],[205,8],[266,221],[267,222],[255,8],[265,223],[256,224],[268,8],[325,225],[328,226],[302,227],[301,228],[300,229],[331,92],[299,230],[228,8],[334,8],[336,8],[338,231],[335,92],[337,232],[196,8],[253,8],[198,233],[288,8],[289,8],[291,8],[294,234],[290,8],[292,235],[293,235],[234,8],[308,230],[316,236],[320,237],[209,238],[259,220],[263,239],[260,240],[208,241],[245,242],[275,243],[201,204],[207,244],[197,245],[286,246],[285,247],[239,8],[220,248],[250,8],[274,249],[273,8],[251,250],[276,250],[277,251],[203,252],[272,253],[202,8],[283,254],[284,255],[221,256],[219,257],[218,258],[271,259],[278,260],[204,261],[270,262],[241,263],[190,8],[281,264],[279,8],[254,265],[257,266],[280,267],[242,268],[282,269],[287,270],[210,8],[215,8],[212,8],[213,8],[214,8],[226,8],[244,271],[206,272],[211,8],[249,273],[248,274],[222,275],[238,276],[237,277],[261,8],[227,278],[264,155],[262,279],[229,280],[231,281],[339,282],[230,283],[232,284],[311,8],[312,8],[310,8],[333,8],[233,285],[90,8],[303,8],[306,286],[318,92],[324,287],[322,92],[296,288],[199,8],[326,289],[298,8],[305,8],[304,290],[247,291],[246,292],[217,293],[216,8],[314,8],[307,294],[81,8],[89,295],[86,92],[87,8],[88,8],[317,296],[319,297],[321,298],[323,299],[343,300],[327,300],[342,301],[329,302],[330,303],[332,304],[340,305],[341,60],[295,306],[520,307],[529,308],[518,8],[519,309],[530,310],[525,311],[526,312],[524,313],[528,314],[522,315],[521,316],[527,317],[523,308],[513,318],[389,319],[392,320],[393,321],[385,322],[397,323],[394,324],[391,325],[395,324],[398,326],[390,327],[379,328],[396,8],[381,8],[388,329],[422,330],[421,100],[380,8],[418,331],[419,332],[417,333],[416,331],[79,8],[80,8],[13,8],[14,8],[16,8],[15,8],[2,8],[17,8],[18,8],[19,8],[20,8],[21,8],[22,8],[23,8],[24,8],[3,8],[25,8],[26,8],[4,8],[27,8],[31,8],[28,8],[29,8],[30,8],[32,8],[33,8],[34,8],[5,8],[35,8],[36,8],[37,8],[38,8],[6,8],[42,8],[39,8],[40,8],[41,8],[43,8],[7,8],[44,8],[49,8],[50,8],[45,8],[46,8],[47,8],[48,8],[8,8],[54,8],[51,8],[52,8],[53,8],[55,8],[9,8],[56,8],[57,8],[58,8],[60,8],[59,8],[61,8],[62,8],[10,8],[63,8],[64,8],[65,8],[11,8],[66,8],[67,8],[68,8],[69,8],[70,8],[1,8],[71,8],[72,8],[12,8],[76,8],[74,8],[78,8],[73,8],[77,8],[75,8],[351,8]],"affectedFilesPendingEmit":[[346,49],[348,49],[350,49],[349,49],[357,49],[354,49],[355,49],[353,49],[356,49],[345,49],[352,49],[347,49],[358,49],[359,49],[478,49],[477,49],[479,49],[480,49],[476,49],[475,49]],"version":"5.8.3"}
</file>

<file path="packages/config/tailwind.config.js">
module.exports = {
  content: [
    // Shared UI components - be more specific to avoid node_modules
    "../../packages/ui/src/**/*.{js,ts,jsx,tsx}",
    "../../packages/ui/components/**/*.{js,ts,jsx,tsx}",
    // App-specific files
    "./src/**/*.{js,ts,jsx,tsx}",
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
};
</file>

<file path="packages/core/src/index.ts">
// packages/core/src/index.ts

/**
 * Dette er hoved-eksportfilen for @repo/core pakken.
 * Alle delte typer, interfaces, enums, og potentielt funktioner eller konstanter
 * bør eksporteres herfra, så de nemt kan importeres i andre pakker (apps/web, apps/api, etc.).
 */

// User types
export * from './types/user.types';

// Pensum types
export * from './types/pensum.types';

// Quiz types
export * from './types/quiz.types';
</file>

<file path="Jira style.txt">
# Jira‑style Roadmap Board

---

## 🌐 Legend

| **Status**  | Meaning        |
| ----------- | -------------- |
| **TODO**    | Ikke startet   |
| **WIP**     | I gang         |
| **BLOCKED** | Afventer andet |
| **DONE**    | Færdig         |

Story Points følger en grov T‑shirt‑estimatskala (1, 2, 3, 5, 8, 13).

---

## 🧩 EPICS & Stories

### **E0 – Fundament** (Target: 3 dev‑dage)

| Key  | Summary                           | Type  | SP | Status | Acceptance Criteria                                                   |
| ---- | --------------------------------- | ----- | -- | ------ | --------------------------------------------------------------------- |
| E0‑1 | Monorepo opsat med yarn + Turbo   | Story | 3  | DONE   | `yarn dev` starter både **apps/frontend** og **apps/backend** med HMR |
| E0‑2 | CI/CD skeleton på GitHub Actions  | Story | 2  | DONE   | Workflow install → lint → test → build på push → badge grøn           |
| E0‑3 | Core shared packages (ui, config) | Story | 3  | DONE   | `import { Button } from '@repo/ui'` virker i frontend                 |

---

### **E1 – MVP‑UI** (Target: 5 dev‑dage)

| Key  | Summary                      | Type  | SP | Status | Acceptance Criteria                                                     |
| ---- | ---------------------------- | ----- | -- | ------ | ----------------------------------------------------------------------- |
| E1‑1 | Layout & App‑shell           | Story | 5  | DONE   | Header m. logo, user‑menu; sidebar collapsible; dark‑mode toggle        |
| E1‑2 | AuthContext + ProtectedRoute | Story | 3  | DONE   | Uautoriseret redirect → `/login`; efter login redirect → lastRoute      |
| E1‑3 | Dashboard page               | Story | 5  | DONE   | Grid af kurser (`/courses` API) + placeholder statistik                 |
| E1‑4 | Kursusflow V1                | Story | 8  | DONE   | `courses/[slug]` → modul‑liste; `lessons/[id]` viser TEXT‑contentBlocks |

---

### **E2 – Quiz Core** (Target: 5 dev‑dage)

| Key  | Summary                      | Type  | SP | Status | Acceptance Criteria                              |
| ---- | ---------------------------- | ----- | -- | ------ | ------------------------------------------------ |
| E2‑1 | Quiz UI V1                   | Story | 8  | WIP    | En‑ad‑gangen spørgsmål; Submit giver score‑toast |
| E2‑2 | Resultatside & fremdrift     | Story | 5  | TODO   | Radial progress + liste over forkerte svar       |
| E2‑3 | UserProgress API‑integration | Story | 3  | TODO   | PATCH `/user-progress` efter quiz                |

---

### **E3 – Admin + CLI** (Target: 5 dev‑dage)

| Key  | Summary                     | Type  | SP | Status | Acceptance Criteria                                          |
| ---- | --------------------------- | ----- | -- | ------ | ------------------------------------------------------------ |
| E3‑1 | Seed‑script med demo‑pensum | Story | 3  | TODO   | `yarn seed` opretter 2 fagområder, 3 kurser, 10 quizzer      |
| E3‑2 | Admin Panel V0 (CRUD)       | Story | 8  | TODO   | Create/edit/delete course, module, lesson, quiz              |
| E3‑3 | create‑solid‑wow CLI        | Story | 5  | TODO   | `npx create-solid-wow` kloner repo, kører install, seed, dev |

---

### **E4 – UX Polish & Gamification** (Target: 10 dev‑dage)

| Key  | Summary                 | Type  | SP | Status | Acceptance Criteria                              |
| ---- | ----------------------- | ----- | -- | ------ | ------------------------------------------------ |
| E4‑1 | Theming & Dark‑mode     | Story | 3  | TODO   | Skift tema uden refresh, gemmes i localStorage   |
| E4‑2 | Skeleton loading states | Story | 2  | TODO   | `<Skeleton />` vises >300 ms API‑latency         |
| E4‑3 | XP‑system & badges      | Story | 8  | TODO   | XP points pr. quiz; websocket push; badge dialog |
| E4‑4 | Command Palette         | Story | 3  | TODO   | `⌘K` åbner søge‑palette (kbar)                   |

---

### **E5 – AI & Adaptiv læring** (Target: 10 dev‑dage)

| Key  | Summary                        | Type  | SP | Status | Acceptance Criteria                             |
| ---- | ------------------------------ | ----- | -- | ------ | ----------------------------------------------- |
| E5‑1 | AI‑genereret spørgsmål fra PDF | Story | 8  | TODO   | Upload PDF → 5 MC‑spørgsmål i DB efter <60 s    |
| E5‑2 | Adaptiv quiz efter fejlrate    | Story | 5  | TODO   | Hvis score <70 % → ny quiz med svære spørgsmål  |
| E5‑3 | Chat‑kompagnon (LLM)           | Story | 8  | TODO   | `/chat` endpoint; UI chat‑widget på lesson‑side |

---

### **E6 – "Wow"‑pakke** (Kan drysses løbende)

| Key  | Summary           | Type  | SP | Status | Acceptance Criteria                        |
| ---- | ----------------- | ----- | -- | ------ | ------------------------------------------ |
| E6‑1 | SCORM/xAPI player | Story | 13 | TODO   | Indlæs SCORM zip; track completion         |
| E6‑2 | Offline‑first PWA | Story | 8  | TODO   | Quiz kan tages offline; sync ved reconnect |
| E6‑3 | Voice commands    | Story | 5  | TODO   | "Next question" via Web Speech API         |

---

## 📅 Sprint‑proposal

| Sprint       | Scope                                           | SP‑sum |
| ------------ | ----------------------------------------------- | ------ |
| 🔭 Sprint 0  | E0‑1, E0‑2, E0‑3                                | 8      |
| 🚀 Sprint 1  | E1‑1 → E1‑3                                     | 13     |
| ✨ Sprint 2   | E1‑4, E2‑1                                      | 16     |
| 📊 Sprint 3  | E2‑2, E2‑3, E3‑1                                | 11     |
| 🛠️ Sprint 4 | E3‑2, E3‑3                                      | 13     |
| 🎨 Sprint 5  | E4‑1 → E4‑4                                     | 16     |
| 🤖 Sprint 6  | E5‑1 → E5‑3                                     | 21     |
| 🏆 Sprint 7  | E6‑1 → E6‑3 (strøges/omprioriteres efter behov) | 26     |

---

*Opdater status og story points efter hver daily / QA‑cyklus.*
</file>

<file path=".github/workflows/ci.yml">
# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    env: # Definer miljøvariabler her, så de er tilgængelige for alle steps i jobbet
      NEXT_PUBLIC_API_URL: http://localhost:5002/api # Bruges af web tests/build
      DATABASE_URL: ${{ secrets.DATABASE_URL_CI }} # Bruges af api tests/prisma (bør være en test-database)
      JWT_SECRET: ${{ secrets.JWT_SECRET_CI }}         # Bruges af api tests
      JWT_EXPIRES_IN: "15m"                           # Bruges af api tests
      SALT_ROUNDS: "10"                               # Bruges af api tests
      # Tilføj andre nødvendige miljøvariabler for dine tests her

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22 # Matcher .node-version
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build all packages and apps
        # Kør build for alle workspaces. Dette sikrer, at alle 'dist' mapper er oprettet.
        run: yarn turbo run build

      # Valgfrit: List indholdet af dist-mapper for debugging, hvis problemer fortsætter
      # - name: List @repo/core build output
      #   run: ls -la packages/core/dist || echo "packages/core/dist not found or empty"
      # - name: List @repo/config build output
      #   run: ls -la packages/config/dist || echo "packages/config/dist not found or empty"

      - name: Run all tests
        # Kør test:ci for alle workspaces.
        # Miljøvariabler defineret på job-niveau vil være tilgængelige her.
        run: yarn turbo run test:ci

  deploy-render-api:
    name: Deploy API to Render
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL_API }} # Sørg for at navnet på secret er korrekt

  deploy-vercel-web:
    name: Deploy Web to Vercel
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_WEB }} # Sørg for at navnet på secret er korrekt
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      # Vercel build vil selv bruge NEXT_PUBLIC_API_URL fra Vercel's egne environment settings.
      # Hvis du har brug for at overskrive dem specifikt for Vercel build-steppet her, kan du gøre det.
      # NEXT_PUBLIC_API_URL: ${{ secrets.PROD_NEXT_PUBLIC_API_URL }} # Eksempel
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Deploy to Vercel Production
        # For Vercel, er det ofte bedst at lade Vercel håndtere build-processen.
        # Vercel CLI vil typisk bygge appen baseret på dens konfiguration.
        # Sørg for at din `apps/web` er konfigureret som root directory i Vercel projekt-settings.
        run: npx vercel --prod --cwd ./apps/web # Tilføj --cwd for at specificere working directory for Vercel
</file>

<file path="apps/api/src/auth/guards/jwt-auth.guard.ts">
// apps/api/src/auth/guards/jwt-auth.guard.ts
import {
  Injectable,
  ExecutionContext,
  UnauthorizedException,
} from '@nestjs/common';
import { AuthGuard } from '@nestjs/passport';
import { Observable } from 'rxjs';

/**
 * A guard that invokes the jwt Passport strategy.
 * It automatically handles the logic of verifying the JWT, calling the JwtStrategy's validate() method,
 * and setting up req.user upon successful authentication.
 * If authentication fails (e.g., invalid token, expired token), it automatically sends a 401 Unauthorized response.
 */
@Injectable()
export class JwtAuthGuard extends AuthGuard('jwt') {
  // Du kan overskrive handleRequest for at tilpasse fejlhåndtering eller logik efter validering.
  // For de fleste standardtilfælde er det dog ikke nødvendigt.
  canActivate(
    context: ExecutionContext,
  ): boolean | Promise<boolean> | Observable<boolean> {
    // Add your custom authentication logic here
    // for example, call super.logIn(request) to establish a session.
    return super.canActivate(context);
  }

  handleRequest<TUser = any>(
    err: any,
    user: any,
    _info: any, // Prefix with underscore to indicate it's intentionally unused
    _context: ExecutionContext, // Prefix with underscore to indicate it's intentionally unused
    _status?: any, // Prefix with underscore to indicate it's intentionally unused
  ): TUser {
    // Du kan smide en exception her baseret på 'info' eller 'err' argumenterne
    if (err || !user) {
      // Log eventuelle fejl eller information for debugging
      // console.error('JWT Auth Guard Error:', err);
      // console.error('JWT Auth Guard Info:', info);
      throw (
        err ||
        new UnauthorizedException(
          'Du har ikke adgang eller dit token er ugyldigt.',
        )
      );
    }
    return user;
  }
}
</file>

<file path="apps/api/src/auth/strategies/local/local.ts">
// apps/api/src/auth/strategies/local/local.ts
import { Strategy } from 'passport-local';
import { PassportStrategy } from '@nestjs/passport';
import { Injectable, UnauthorizedException } from '@nestjs/common';
import { AuthService } from '../../auth.service';
// Importer CoreUser for at specificere returtypen korrekt
import { User as CoreUser } from '@repo/core';

@Injectable()
export class LocalStrategy extends PassportStrategy(Strategy) {
  constructor(private authService: AuthService) {
    super({ usernameField: 'email' }); // Fortæller Passport at 'email' feltet skal bruges som brugernavn
  }

  // Denne metode kaldes automatisk af Passport, når LocalAuthGuard bruges
  // Returtypen er nu Omit<CoreUser, 'passwordHash'> for at matche AuthService.validateUser
  async validate(
    email: string,
    pass: string,
  ): Promise<Omit<CoreUser, 'passwordHash'>> {
    // authService.validateUser returnerer Omit<CoreUser, 'passwordHash'> | null
    const user = await this.authService.validateUser(email, pass);

    if (!user) {
      // Hvis brugeren ikke findes eller password er forkert, kast en UnauthorizedException
      throw new UnauthorizedException('Ugyldig email eller password.');
    }

    // Brugerobjektet 'user' er allerede i det korrekte CoreUser format (uden passwordHash)
    return user;
  }
}
</file>

<file path="apps/api/src/persistence/prisma/prisma.service.ts">
import { Injectable, OnModuleInit, Logger } from '@nestjs/common';
import { PrismaClient } from '@prisma/client';

@Injectable()
export class PrismaService extends PrismaClient implements OnModuleInit {
  private readonly logger = new Logger(PrismaService.name);

  async onModuleInit() {
    try {
      await this.$connect();
      this.logger.log('Successfully connected to the database');
    } catch (error: unknown) {
      // During build process, we don't need to connect to the database
      if (process.env.NODE_ENV === 'production' || process.env.CI) {
        this.logger.warn(
          'Skipping database connection in production/CI environment',
        );
        return;
      }

      const errorMessage =
        error instanceof Error ? error.message : 'Unknown error occurred';

      this.logger.error(`Failed to connect to the database: ${errorMessage}`);
      // Don't throw error to allow the application to start without database in build environments
    }
  }
}
</file>

<file path="apps/api/src/users/users.controller.spec.ts">
// apps/api/src/users/users.controller.spec.ts
import { Test, TestingModule } from '@nestjs/testing';
import { UsersController } from './users.controller';
import { UsersService } from './users.service';
import { CreateUserDto } from './dto/create-user.dto';
import { Role as CoreRole, User as CoreUser } from '@repo/core';
import { ConflictException } from '@nestjs/common';
// HttpStatus and ValidationPipe are imported but not used in this file

// Mock UsersService for at isolere controlleren
const mockUsersService = {
  create: jest.fn(),
  // Tilføj andre metoder fra UsersService, hvis controlleren kommer til at bruge dem
};

describe('UsersController', () => {
  let controller: UsersController;
  let service: typeof mockUsersService;

  beforeEach(async () => {
    mockUsersService.create.mockReset(); // Nulstil mock før hver test

    const module: TestingModule = await Test.createTestingModule({
      controllers: [UsersController],
      providers: [
        {
          provide: UsersService,
          useValue: mockUsersService,
        },
      ],
    })
      // Det er ikke nødvendigt at tilføje ValidationPipe globalt her for unit tests,
      // medmindre du specifikt vil teste dens integration på controller-niveau.
      // For at teste DTO validering, sker det typisk i E2E tests eller ved at kalde pipen manuelt.
      .compile();

    controller = module.get<UsersController>(UsersController);
    service = module.get(UsersService);
  });

  it('should be defined', () => {
    expect(controller).toBeDefined();
  });

  describe('signUp', () => {
    const createUserDto: CreateUserDto = {
      email: 'newuser@example.com',
      password: 'password123',
      name: 'New User',
      role: CoreRole.USER,
    };

    const expectedUserResult: Omit<CoreUser, 'passwordHash'> = {
      id: 2,
      email: 'newuser@example.com',
      name: 'New User',
      role: CoreRole.USER,
      createdAt: new Date(),
      updatedAt: new Date(),
    };

    it('should call UsersService.create with the DTO and return the created user', async () => {
      service.create.mockResolvedValue(expectedUserResult);

      // Da ValidationPipe anvendes via @UsePipes decorator, vil den køre.
      // For en unit test af controlleren stoler vi på, at pipen virker,
      // eller tester den separat/i E2E.
      const result = await controller.signUp(createUserDto);

      expect(service.create).toHaveBeenCalledWith(createUserDto);
      expect(result).toEqual(expectedUserResult);
      // HttpStatus.CREATED (201) checkes typisk i E2E tests, da HttpCode decorator styrer NestJS's respons.
    });

    it('should propagate ConflictException if UsersService.create throws it', async () => {
      service.create.mockRejectedValue(
        new ConflictException('Email already exists'),
      );

      await expect(controller.signUp(createUserDto)).rejects.toThrow(
        ConflictException,
      );
      expect(service.create).toHaveBeenCalledWith(createUserDto);
    });

    // Du kan tilføje flere tests her for andre fejltyper eller scenarier
  });
});
</file>

<file path="apps/api/src/users/users.controller.ts">
// apps/api/src/users/users.controller.ts
import {
  Controller,
  Post,
  Body,
  ValidationPipe,
  UsePipes,
  HttpCode,
  HttpStatus,
} from '@nestjs/common';
import { UsersService } from './users.service';
import { CreateUserDto } from './dto/create-user.dto';
// Importer CoreUser fra @repo/core for returtypen
import { User as CoreUser } from '@repo/core';

@Controller('users')
export class UsersController {
  constructor(private readonly usersService: UsersService) {}

  @Post('signup')
  @UsePipes(
    new ValidationPipe({
      transform: true,
      whitelist: true,
      forbidNonWhitelisted: true,
    }),
  )
  @HttpCode(HttpStatus.CREATED)
  // Returtypen er nu Omit<CoreUser, 'passwordHash'> for at matche UsersService.create
  async signUp(
    @Body() createUserDto: CreateUserDto,
  ): Promise<Omit<CoreUser, 'passwordHash'>> {
    return this.usersService.create(createUserDto);
  }
}
</file>

<file path="apps/api/src/app.controller.spec.ts">
// apps/api/src/app.controller.spec.ts
import { Test, TestingModule } from '@nestjs/testing';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { PrismaService } from './persistence/prisma/prisma.service';
import { ConfigService } from '@nestjs/config';

const mockPrismaService = {};
const mockConfigService = { get: jest.fn() };

describe('AppController', () => {
  let appController: AppController;
  let appService: AppService;

  beforeEach(async () => {
    const moduleRef: TestingModule = await Test.createTestingModule({
      controllers: [AppController],
      providers: [
        AppService,
        { provide: PrismaService, useValue: mockPrismaService },
        { provide: ConfigService, useValue: mockConfigService },
      ],
    }).compile();

    appController = moduleRef.get<AppController>(AppController);
    appService = moduleRef.get<AppService>(AppService);
  });

  describe('root', () => {
    it('should return "Hello World!"', async () => {
      const expectedResult = { message: 'Hello World' };
      jest.spyOn(appService, 'getHello').mockResolvedValue(expectedResult);
      expect(await appController.getHello()).toBe(expectedResult);
    });
  });
});
</file>

<file path="apps/web/pages/courses/[slug].tsx">
// apps/web/pages/courses/[slug].tsx
import React from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import Link from 'next/link';

const CourseDetail: React.FC = () => {
  const router = useRouter();
  const { slug } = router.query;

  // Mock course data - in a real app, you would fetch this based on the slug
  const course = {
    id: 1,
    slug: 'react-fundamentals',
    title: 'React Fundamentals',
    description: 'Lær grundlæggende React-koncepter og byg din første app',
    longDescription: 'Dette kursus giver dig en solid introduktion til React, et af de mest populære JavaScript-biblioteker til at bygge brugergrænseflader. Du vil lære om komponenter, props, state, hooks og meget mere. Ved slutningen af kurset vil du være i stand til at bygge dine egne React-applikationer fra bunden.',
    level: 'Begynder',
    duration: '4 uger',
    modules: [
      {
        id: 1,
        title: 'Introduktion til React',
        lessons: [
          { id: 101, title: 'Hvad er React?', duration: '10 min' },
          { id: 102, title: 'Opsætning af udviklingsmiljø', duration: '15 min' },
          { id: 103, title: 'Din første React-komponent', duration: '20 min' },
        ],
        quizzes: [
          { id: 1, title: 'React Grundbegreber Quiz', duration: '15 min' }
        ]
      },
      {
        id: 2,
        title: 'React Komponenter og Props',
        lessons: [
          { id: 201, title: 'Komponentstruktur', duration: '15 min' },
          { id: 202, title: 'Funktionelle komponenter vs. klassekomponenter', duration: '20 min' },
          { id: 203, title: 'Props og PropTypes', duration: '25 min' },
        ],
        quizzes: [
          { id: 2, title: 'Komponenter og Props Quiz', duration: '15 min' }
        ]
      },
      {
        id: 3,
        title: 'State og Lifecycle',
        lessons: [
          { id: 301, title: 'Introduktion til state', duration: '15 min' },
          { id: 302, title: 'useState hook', duration: '20 min' },
          { id: 303, title: 'useEffect hook', duration: '25 min' },
        ],
        quizzes: [
          { id: 3, title: 'State og Lifecycle Quiz', duration: '15 min' }
        ]
      },
      {
        id: 4,
        title: 'Håndtering af Events',
        lessons: [
          { id: 401, title: 'Event handling i React', duration: '15 min' },
          { id: 402, title: 'Forms og controlled components', duration: '20 min' },
          { id: 403, title: 'Lifting state up', duration: '25 min' },
        ],
        quizzes: [
          { id: 4, title: 'Events og Forms Quiz', duration: '15 min' }
        ]
      },
    ],
  };

  if (router.isFallback) {
    return <div className="text-center py-10">Indlæser kursus...</div>;
  }

  return (
    <>
      <Head>
        <title>{course.title} | LearningLab</title>
      </Head>
      <div>
        {/* Breadcrumb */}
        <nav className="flex mb-4 text-sm text-gray-500 dark:text-gray-400">
          <Link href="/courses" className="hover:text-gray-700 dark:hover:text-gray-200">
            Kurser
          </Link>
          <span className="mx-2">/</span>
          <span className="text-gray-700 dark:text-gray-200">{course.title}</span>
        </nav>
        
        {/* Course header */}
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden mb-6">
          <div className="h-48 bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
            <h1 className="text-3xl font-bold text-white">{course.title}</h1>
          </div>
          <div className="p-6">
            <div className="flex flex-wrap items-center justify-between">
              <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">{course.title}</h1>
              <Link href={`/lessons/${course.modules[0].lessons[0].id}`} className="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md shadow inline-block">
                Start Kursus
              </Link>
            </div>
            
            <div className="flex flex-wrap items-center text-sm text-gray-500 dark:text-gray-400 mb-4">
              <div className="flex items-center mr-4">
                <svg className="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                </svg>
                <span>{course.level}</span>
              </div>
              
              <div className="flex items-center mr-4">
                <svg className="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <span>{course.duration}</span>
              </div>
              
              <div className="flex items-center">
                <svg className="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                </svg>
                <span>{course.modules.length} moduler</span>
              </div>
            </div>
            
            <p className="text-gray-600 dark:text-gray-300">{course.longDescription}</p>
          </div>
        </div>
        
        {/* Course modules */}
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow">
          <div className="p-6">
            <h2 className="text-xl font-semibold text-gray-800 dark:text-white mb-4">Kursusindhold</h2>
            
            <div className="space-y-4">
              {course.modules.map((module) => (
                <div key={module.id} className="border border-gray-200 dark:border-gray-700 rounded-md overflow-hidden">
                  <div className="bg-gray-50 dark:bg-gray-750 px-4 py-3 flex justify-between items-center">
                    <h3 className="font-medium text-gray-800 dark:text-white">{module.title}</h3>
                    <div className="flex items-center space-x-4">
                      <span className="text-sm text-gray-500 dark:text-gray-400">{module.lessons.length} lektioner</span>
                      {module.quizzes && module.quizzes.length > 0 && (
                        <span className="text-sm text-gray-500 dark:text-gray-400">{module.quizzes.length} quiz(zer)</span>
                      )}
                    </div>
                  </div>
                  
                  <div className="divide-y divide-gray-200 dark:divide-gray-700">
                    {/* Lessons */}
                    {module.lessons.map((lesson) => (
                      <Link 
                        href={`/lessons/${lesson.id}`} 
                        key={lesson.id}
                        className="flex justify-between items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-750"
                      >
                        <div className="flex items-center">
                          <svg className="h-5 w-5 mr-3 text-gray-400 dark:text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                          </svg>
                          <span className="text-gray-700 dark:text-gray-200">{lesson.title}</span>
                        </div>
                        <span className="text-sm text-gray-500 dark:text-gray-400">{lesson.duration}</span>
                      </Link>
                    ))}
                    
                    {/* Quizzes */}
                    {module.quizzes && module.quizzes.map((quiz) => (
                      <Link 
                        href={`/courses/${slug}/quizzes/${quiz.id}`} 
                        key={`quiz-${quiz.id}`}
                        className="flex justify-between items-center px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-750 bg-blue-50 dark:bg-blue-900/10"
                      >
                        <div className="flex items-center">
                          <svg className="h-5 w-5 mr-3 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                          </svg>
                          <span className="text-gray-700 dark:text-gray-200 font-medium">{quiz.title}</span>
                        </div>
                        <div className="flex items-center">
                          <span className="text-sm text-gray-500 dark:text-gray-400 mr-2">{quiz.duration}</span>
                          <svg className="h-4 w-4 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </Link>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default CourseDetail;
</file>

<file path="apps/web/pages/profile.tsx">
// apps/web/pages/profile.tsx
import React from 'react'; // useEffect er fjernet, da ProtectedRoute håndterer det
import { useAuth } from '../src/context/AuthContext';
import ProtectedRoute from '../src/components/auth/ProtectedRoute'; // Importer ProtectedRoute

// Den faktiske indholdskomponent for profilsiden
function ProfilePageContent() {
  const { user, logout } = useAuth();

  // På dette tidspunkt, hvis ProfilePageContent renderes,
  // har ProtectedRoute allerede sikret, at brugeren er logget ind,
  // og at authIsLoading er false.
  // Vi kan derfor trygt antage, at 'user' ikke er null.
  if (!user) {
    // Denne fallback burde sjældent rammes, hvis ProtectedRoute fungerer korrekt.
    // Det er en ekstra sikkerhedsforanstaltning.
    return (
      <div className="flex items-center justify-center min-h-screen bg-gray-100 font-inter">
        <p className="text-lg text-gray-700">Fejl: Brugerdata ikke tilgængelige, selvom ruten er beskyttet.</p>
      </div>
    );
  }

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 font-inter p-4">
      <div className="w-full max-w-lg p-8 space-y-6 bg-white rounded-xl shadow-xl">
        <h1 className="text-3xl font-bold text-center text-gray-900">
          Velkommen til din Profil!
        </h1>
        <div className="mt-6 border-t border-gray-200">
          <dl className="divide-y divide-gray-200">
            <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4">
              <dt className="text-sm font-medium text-gray-500">ID</dt>
              <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{user.id}</dd>
            </div>
            <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4">
              <dt className="text-sm font-medium text-gray-500">Fulde Navn</dt>
              <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{user.name || 'Ikke angivet'}</dd>
            </div>
            <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4">
              <dt className="text-sm font-medium text-gray-500">Emailadresse</dt>
              <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{user.email}</dd>
            </div>
            <div className="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4">
              <dt className="text-sm font-medium text-gray-500">Rolle</dt>
              <dd className="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{user.role}</dd>
            </div>
            {/* Tilføj flere felter her efter behov */}
          </dl>
        </div>
        <div className="mt-6 text-center">
            <button
                onClick={logout} // Brug logout funktionen fra AuthContext
                className="px-6 py-2 font-medium tracking-wide text-white capitalize transition-colors duration-300 transform bg-red-600 rounded-lg hover:bg-red-500 focus:outline-none focus:ring focus:ring-red-300 focus:ring-opacity-80"
            >
                Log ud
            </button>
        </div>
      </div>
    </div>
  );
}

// Default export er nu en wrapper-komponent, der anvender ProtectedRoute
export default function WrappedProfilePage() {
  return (
    <ProtectedRoute>
      <ProfilePageContent />
    </ProtectedRoute>
  );
}
</file>

<file path="apps/web/src/components/quiz/QuizContainer.tsx">
import React, { useEffect } from 'react';
import { useRouter } from 'next/router';
import { Quiz, Question, AnswerOption } from '@repo/core/src/types/quiz.types';
import { useQuiz } from '../../context/QuizContext';
import QuizQuestion from './QuizQuestion';
import QuizNavigation from './QuizNavigation';
import QuizProgress from './QuizProgress';
import ScoreToast from './ScoreToast';

interface QuizContainerProps {
  quiz: Quiz;
  questions: Question[];
  answerOptions: Record<number, AnswerOption[]>;
  onComplete?: (score: number) => void;
}

const QuizContainer: React.FC<QuizContainerProps> = ({
  quiz,
  questions,
  answerOptions,
  onComplete
}) => {
  const router = useRouter();
  const { 
    setQuiz, 
    currentQuestion, 
    currentQuestionIndex,
    userAnswers, 
    isSubmitted,
    score,
    selectAnswer
  } = useQuiz();
  
  // Initialize quiz when component mounts
  useEffect(() => {
    console.log('Initializing quiz data', { quizId: quiz.id, questionsCount: questions.length });
    // Only initialize if we have questions
    if (questions.length > 0) {
      setQuiz({
        ...quiz,
        questions,
        answerOptions
      });
    }
  }, [quiz, questions, answerOptions, setQuiz]);
  
  useEffect(() => {
    // For debugging: Log current state
    console.log('Current state:', { 
      currentQuestion,
      userAnswers,
      isSubmitted,
      score
    });
  }, [currentQuestion, userAnswers, isSubmitted, score]);
  
  // Call onComplete when quiz is submitted and navigate to results page
  useEffect(() => {
    if (isSubmitted && score !== null) {
      if (onComplete) {
        onComplete(score);
      }
      
      // Navigate to results page after a short delay to allow the score toast to be seen
      const timer = setTimeout(() => {
        const { slug, id } = router.query;
        router.push(`/courses/${slug}/quizzes/${id}/results`);
      }, 2000);
      
      return () => clearTimeout(timer);
    }
  }, [isSubmitted, score, onComplete, router]);
  
  // Force re-initialization if we have questions but no current question
  useEffect(() => {
    if (!currentQuestion && questions.length > 0) {
      console.log('Forcing re-initialization of quiz data');
      setQuiz({
        ...quiz,
        questions,
        answerOptions
      });
    }
  }, [currentQuestion, questions, quiz, answerOptions, setQuiz]);

  // Show loading state if no current question
  if (!currentQuestion) {
    console.log('Current question is null, showing loading state', {
      quizLoaded: !!quiz,
      questionsCount: questions.length
    });
    
    // If we have questions but no current question, try to show the first question
    if (questions.length > 0) {
      const firstQuestion = questions[0];
      const firstQuestionOptions = answerOptions[firstQuestion.id] || [];
      
      return (
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
          <h3 className="text-xl font-semibold text-gray-800 dark:text-white mb-4">
            {firstQuestion.text}
          </h3>
          
          <div className="space-y-3">
            {firstQuestionOptions.map((option) => (
              <div
                key={option.id}
                className="flex items-center p-4 border rounded-md cursor-pointer transition-colors border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-750 hover:shadow-md"
                onClick={() => selectAnswer(firstQuestion.id, option.id)}
              >
                <div className="flex-1">
                  <p className="text-gray-700 dark:text-gray-200">{option.text}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      );
    }
    
    // If we have no questions, show loading state
    return (
      <div className="bg-gray-50 dark:bg-gray-900 rounded-lg p-6">
        <div className="text-center py-8">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <h3 className="text-lg font-medium text-gray-900 dark:text-white">Indlæser quiz...</h3>
          <p className="mt-2 text-sm text-gray-600 dark:text-gray-400">
            Hvis quizzen ikke indlæses, prøv at genindlæse siden.
          </p>
          <button 
            onClick={() => window.location.reload()}
            className="mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
          >
            Genindlæs siden
          </button>
        </div>
      </div>
    );
  }
  
  const currentOptions = answerOptions[currentQuestion.id] || [];
  const selectedOptionId = userAnswers[currentQuestion.id];
  
  return (
    <div className="bg-gray-50 dark:bg-gray-900 rounded-lg p-6">
      <div className="mb-6">
        <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
          {quiz.title}
        </h2>
        <p className="text-gray-600 dark:text-gray-300">
          {quiz.description}
        </p>
      </div>
      
      <QuizProgress />
      
      <QuizQuestion
        question={currentQuestion}
        options={currentOptions}
        selectedOptionId={selectedOptionId}
        isSubmitted={isSubmitted}
      />
      
      <QuizNavigation />
      
      {isSubmitted && <ScoreToast />}
    </div>
  );
};

export default QuizContainer;
</file>

<file path="apps/web/src/screens/auth/login/login.tsx">
// apps/web/src/screens/auth/login/login.tsx
import React, { useState, FormEvent } from 'react';
import { useAuth } from '../../../context/AuthContext'; // Importer useAuth hook'en
// useRouter er ikke længere nødvendig her, da AuthContext håndterer omdirigering efter login

export function LoginScreen() {
  // const router = useRouter(); // Fjernet, da AuthContext håndterer omdirigering
  const { login, isLoading: authIsLoading, user } = useAuth(); // Hent login funktion og auth loading state fra context

  // Lokal state for inputfelter og specifikke fejl for denne formular
  const [email, setEmail] = useState<string>('');
  const [password, setPassword] = useState<string>('');
  const [formError, setFormError] = useState<string | null>(null); // Lokal fejl state for denne formular

  // Omdiriger hvis brugeren allerede er logget ind
  // Dette er en simpel måde at forhindre adgang til login-siden, hvis man allerede er logget ind.
  // En mere robust løsning ville være en "public only" route.
  // useEffect(() => {
  //   if (user) {
  //     router.push('/profile'); // Eller en anden default side efter login
  //   }
  // }, [user, router]);


  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    setFormError(null); // Nulstil formularfejl

    try {
      console.log('LoginScreen: Forsøger login via AuthContext med:', { email, password });
      await login(email, password); // Kald login funktionen fra AuthContext
      // AuthContext's login funktion håndterer nu token lagring, bruger state opdatering, og omdirigering.
      console.log('LoginScreen: Login succesfuld (håndteret af AuthContext).');
    } catch (err: any) {
      console.error('LoginScreen: Login fejl fanget:', err);
      setFormError(err.message || 'Login fejlede. Tjek din email og adgangskode.');
    }
    // authIsLoading fra context vil styre knappens disabled state
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100 font-inter">
      <div className="w-full max-w-md p-8 space-y-6 bg-white rounded-xl shadow-xl">
        <h2 className="text-3xl font-bold text-center text-gray-900">
          Log ind på Læringsplatformen
        </h2>
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Email felt */}
          <div>
            <label
              htmlFor="email"
              className="block text-sm font-medium text-gray-700"
            >
              Emailadresse
            </label>
            <input
              id="email"
              name="email"
              type="email"
              autoComplete="email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              disabled={authIsLoading} // Deaktiver input hvis auth operation er i gang
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50 disabled:text-gray-500"
              placeholder="din@email.com"
            />
          </div>

          {/* Password felt */}
          <div>
            <label
              htmlFor="password"
              className="block text-sm font-medium text-gray-700"
            >
              Adgangskode
            </label>
            <input
              id="password"
              name="password"
              type="password"
              autoComplete="current-password"
              required
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              disabled={authIsLoading} // Deaktiver input hvis auth operation er i gang
              className="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:bg-gray-50 disabled:text-gray-500"
              placeholder="Din adgangskode"
            />
          </div>

          {/* Fejlmeddelelse for formularen */}
          {formError && (
            <div className="p-3 text-sm text-red-700 bg-red-100 border border-red-400 rounded-md">
              {formError}
            </div>
          )}

          {/* Submit knap */}
          <div>
            <button
              type="submit"
              disabled={authIsLoading} // Brug authIsLoading fra context
              className="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400 disabled:cursor-not-allowed transition-colors duration-150"
            >
              {authIsLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : (
                'Log ind'
              )}
            </button>
          </div>
        </form>
        <p className="text-sm text-center text-gray-600">
          Har du ikke en konto?{' '}
          <a href="/signup" className="font-medium text-indigo-600 hover:text-indigo-500">
            Opret dig her
          </a>
        </p>
        <p className="text-sm text-center text-gray-600">
          <a href="/forgot-password" className="font-medium text-indigo-600 hover:text-indigo-500">
            Glemt adgangskode?
          </a>
        </p>
      </div>
    </div>
  );
}
</file>

<file path="apps/web/src/store/services/api.ts">
// Filsti: apps/web/src/store/services/api.ts
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { 
  Quiz, 
  Question, 
  AnswerOption, 
  QuizAttempt,
  StartQuizAttemptInput,
  SubmitAnswerInput,
  CompleteQuizAttemptInput
} from "@repo/core/src/types/quiz.types";

// Hent API URL fra miljøvariabler.
// NEXT_PUBLIC_ foran navnet gør den tilgængelig i browseren for Next.js.
const baseUrl = process.env.NEXT_PUBLIC_API_URL;

if (!baseUrl) {
  console.error("FEJL: NEXT_PUBLIC_API_URL er ikke sat. API-kald vil fejle.");
  // Du kan vælge at kaste en fejl her eller have en fallback,
  // men det er bedst at sikre, at den altid er sat.
}

export const api = createApi({
  reducerPath: "baseApi",
  baseQuery: fetchBaseQuery({
    // Brug den hentede baseUrl.
    // Hvis baseUrl er undefined (ikke sat), vil kald relativt til nuværende host:port (f.eks. localhost:3003/hello)
    // hvilket er forkert, da API'et kører på localhost:5002.
    baseUrl: baseUrl || "/api", // Fallback til /api hvis den ikke er sat, men det bør den være.
    prepareHeaders: (headers, { getState }) => {
      // Tilføj authorization header med JWT token hvis brugeren er logget ind
      const token = localStorage.getItem('token');
      if (token) {
        headers.set('authorization', `Bearer ${token}`);
      }
      return headers;
    },
  }),
  tagTypes: ['Quiz', 'QuizAttempt', 'UserProgress'],
  endpoints: (builder) => ({
    // Endpoint for at hente "Hello World" fra API'ets rod (/)
    hello: builder.query<{ message: string }, void>({
      query: () => ({
        url: "/", // Dette vil blive tilføjet til baseUrl, f.eks. http://localhost:5002/api/
      }),
    }),

    // Quiz endpoints
    getQuizzes: builder.query<Quiz[], void>({
      query: () => ({
        url: "/quizzes",
      }),
      providesTags: ['Quiz'],
    }),

    getQuizById: builder.query<
      { quiz: Quiz; questions: Question[]; answerOptions: Record<number, AnswerOption[]> },
      number
    >({
      query: (id) => ({
        url: `/quizzes/${id}`,
      }),
      providesTags: (result, error, id) => [{ type: 'Quiz', id }],
    }),

    // Quiz attempt endpoints
    startQuizAttempt: builder.mutation<QuizAttempt, StartQuizAttemptInput>({
      query: (data) => ({
        url: "/quiz-attempts/start",
        method: "POST",
        body: data,
      }),
      invalidatesTags: ['QuizAttempt'],
    }),

    submitAnswer: builder.mutation<void, SubmitAnswerInput>({
      query: (data) => ({
        url: "/quiz-attempts/submit-answer",
        method: "POST",
        body: data,
      }),
    }),

    completeQuizAttempt: builder.mutation<
      { score: number; passed: boolean },
      CompleteQuizAttemptInput
    >({
      query: (data) => ({
        url: "/quiz-attempts/complete",
        method: "POST",
        body: data,
      }),
      invalidatesTags: ['QuizAttempt', 'UserProgress'],
    }),

    // User progress endpoints
    getUserProgress: builder.query<
      { courseProgress: number; completedLessons: number[]; quizResults: any[] },
      number
    >({
      query: (courseId) => ({
        url: `/user-progress/${courseId}`,
      }),
      providesTags: ['UserProgress'],
    }),
  }),
});

export const { 
  useHelloQuery,
  useGetQuizzesQuery,
  useGetQuizByIdQuery,
  useStartQuizAttemptMutation,
  useSubmitAnswerMutation,
  useCompleteQuizAttemptMutation,
  useGetUserProgressQuery
} = api;
</file>

<file path="apps/web/src/styles/global.css">
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom styles for prose content */
.prose {
  @apply text-gray-800 dark:text-gray-200;
}

.prose h2 {
  @apply text-xl font-semibold mt-6 mb-4 text-gray-900 dark:text-white;
}

.prose h3 {
  @apply text-lg font-medium mt-5 mb-3 text-gray-800 dark:text-gray-100;
}

.prose p {
  @apply my-4 text-gray-700 dark:text-gray-300;
}

.prose ul {
  @apply my-4 pl-6 list-disc text-gray-700 dark:text-gray-300;
}

.prose li {
  @apply mb-2;
}

.prose pre {
  @apply my-4 p-4 bg-gray-100 dark:bg-gray-750 rounded-md overflow-x-auto;
}

.prose code {
  @apply font-mono text-sm text-gray-800 dark:text-gray-200;
}

/* Transitions for theme switching */
.transition-colors {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
</file>

<file path="apps/web/jest.setup.js">
// apps/web/jest.setup.js
import "@testing-library/jest-dom/extend-expect";

// Mock next/router globalt for dine tests i web-appen
jest.mock('next/router', () => require('next-router-mock'));

// Valgfrit: Initialiser routeren til en bestemt sti, hvis mange tests har brug for det
// require('next-router-mock').default.push('/');
</file>

<file path="packages/core/src/types/quiz.types.ts">
/**
 * Core quiz types for the LearningLab platform
 */

/**
 * Question types
 */
export enum QuestionType {
  MULTIPLE_CHOICE = "MULTIPLE_CHOICE",
  FILL_IN_BLANK = "FILL_IN_BLANK",
  MATCHING = "MATCHING"
}

/**
 * User progress status
 */
export enum ProgressStatus {
  NOT_STARTED = "NOT_STARTED",
  IN_PROGRESS = "IN_PROGRESS",
  COMPLETED = "COMPLETED"
}

/**
 * Represents a quiz
 */
export interface Quiz {
  id: number;
  title: string;
  description: string;
  lessonId?: number | null;
  moduleId?: number | null;
  passingScore?: number;
  questions?: Question[];
  answerOptions?: Record<number, AnswerOption[]>;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Represents a question within a quiz
 */
export interface Question {
  id: number;
  text: string;
  type: QuestionType;
  quizId: number;
  quiz?: Quiz;
  explanation?: string;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Represents an answer option for a question
 */
export interface AnswerOption {
  id: number;
  text: string;
  isCorrect: boolean;
  questionId: number;
  question?: Question;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Represents a quiz attempt by a user
 */
export interface QuizAttempt {
  id: number;
  userId: number;
  quizId: number;
  score: number;
  startedAt: Date;
  completedAt?: Date | null;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Represents a user's answer to a question
 */
export interface UserAnswer {
  id: number;
  quizAttemptId: number;
  questionId: number;
  selectedAnswerOptionId?: number | null;
  inputText?: string | null;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Represents a user's progress in lessons and quizzes
 */
export interface UserProgress {
  id: number;
  userId: number;
  lessonId?: number | null;
  quizId?: number | null;
  status: ProgressStatus;
  score?: number | null;
  quizAttemptId?: number | null;
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Input for creating a new quiz
 */
export interface CreateQuizInput {
  title: string;
  description: string;
  lessonId?: number;
  moduleId?: number;
}

/**
 * Input for creating a new question
 */
export interface CreateQuestionInput {
  text: string;
  type: QuestionType;
  quizId: number;
  answerOptions?: CreateAnswerOptionInput[];
}

/**
 * Input for creating a new answer option
 */
export interface CreateAnswerOptionInput {
  text: string;
  isCorrect: boolean;
  questionId?: number;
}

/**
 * Input for starting a quiz attempt
 */
export interface StartQuizAttemptInput {
  quizId: number;
}

/**
 * Input for submitting an answer
 */
export interface SubmitAnswerInput {
  quizAttemptId: number;
  questionId: number;
  selectedAnswerOptionId?: number;
  inputText?: string;
}

/**
 * Input for completing a quiz attempt
 */
export interface CompleteQuizAttemptInput {
  quizAttemptId: number;
}

/**
 * Represents a quiz result with detailed information
 */
export interface QuizResult {
  id: number;
  userId: number;
  quizId: number;
  quiz?: Quiz;
  score: number;
  passed: boolean;
  answers: Array<{
    questionId: number;
    question?: Question;
    selectedOptionId: number;
    selectedOption?: AnswerOption;
    isCorrect: boolean;
  }>;
  startedAt: Date;
  completedAt: Date;
  createdAt: Date;
  updatedAt: Date;
}
</file>

<file path="packages/core/tsconfig.tsbuildinfo">
{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../node_modules/typescript/lib/lib.scripthost.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.decorators.d.ts","../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../node_modules/typescript/lib/lib.es2017.full.d.ts","./src/types/user.types.ts","./src/types/pensum.types.ts","./src/types/quiz.types.ts","./src/index.ts","../../node_modules/@types/aria-query/index.d.ts","../../node_modules/axios/index.d.ts","../../node_modules/@babel/types/lib/index.d.ts","../../node_modules/@types/babel__generator/index.d.ts","../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../node_modules/@types/babel__template/index.d.ts","../../node_modules/@types/babel__traverse/index.d.ts","../../node_modules/@types/babel__core/index.d.ts","../../node_modules/@types/bcryptjs/index.d.ts","../../node_modules/@types/node/compatibility/disposable.d.ts","../../node_modules/@types/node/compatibility/indexable.d.ts","../../node_modules/@types/node/compatibility/iterators.d.ts","../../node_modules/@types/node/compatibility/index.d.ts","../../node_modules/@types/node/globals.typedarray.d.ts","../../node_modules/@types/node/buffer.buffer.d.ts","../../node_modules/buffer/index.d.ts","../../node_modules/undici-types/header.d.ts","../../node_modules/undici-types/readable.d.ts","../../node_modules/undici-types/file.d.ts","../../node_modules/undici-types/fetch.d.ts","../../node_modules/undici-types/formdata.d.ts","../../node_modules/undici-types/connector.d.ts","../../node_modules/undici-types/client.d.ts","../../node_modules/undici-types/errors.d.ts","../../node_modules/undici-types/dispatcher.d.ts","../../node_modules/undici-types/global-dispatcher.d.ts","../../node_modules/undici-types/global-origin.d.ts","../../node_modules/undici-types/pool-stats.d.ts","../../node_modules/undici-types/pool.d.ts","../../node_modules/undici-types/handlers.d.ts","../../node_modules/undici-types/balanced-pool.d.ts","../../node_modules/undici-types/agent.d.ts","../../node_modules/undici-types/mock-interceptor.d.ts","../../node_modules/undici-types/mock-agent.d.ts","../../node_modules/undici-types/mock-client.d.ts","../../node_modules/undici-types/mock-pool.d.ts","../../node_modules/undici-types/mock-errors.d.ts","../../node_modules/undici-types/proxy-agent.d.ts","../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../node_modules/undici-types/retry-handler.d.ts","../../node_modules/undici-types/retry-agent.d.ts","../../node_modules/undici-types/api.d.ts","../../node_modules/undici-types/interceptors.d.ts","../../node_modules/undici-types/util.d.ts","../../node_modules/undici-types/cookies.d.ts","../../node_modules/undici-types/patch.d.ts","../../node_modules/undici-types/websocket.d.ts","../../node_modules/undici-types/eventsource.d.ts","../../node_modules/undici-types/filereader.d.ts","../../node_modules/undici-types/diagnostics-channel.d.ts","../../node_modules/undici-types/content-type.d.ts","../../node_modules/undici-types/cache.d.ts","../../node_modules/undici-types/index.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostics_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/dom-events.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/readline/promises.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/sea.d.ts","../../node_modules/@types/node/sqlite.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/stream/consumers.d.ts","../../node_modules/@types/node/stream/web.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/test.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/@types/connect/index.d.ts","../../node_modules/@types/body-parser/index.d.ts","../../node_modules/@types/cookiejar/index.d.ts","../../node_modules/@types/estree/index.d.ts","../../node_modules/@types/json-schema/index.d.ts","../../node_modules/@types/eslint/use-at-your-own-risk.d.ts","../../node_modules/@types/eslint/index.d.ts","../../node_modules/@types/eslint-scope/index.d.ts","../../node_modules/@types/mime/index.d.ts","../../node_modules/@types/send/index.d.ts","../../node_modules/@types/qs/index.d.ts","../../node_modules/@types/range-parser/index.d.ts","../../node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/http-errors/index.d.ts","../../node_modules/@types/serve-static/index.d.ts","../../node_modules/@types/express/index.d.ts","../../node_modules/@types/graceful-fs/index.d.ts","../../node_modules/@types/hoist-non-react-statics/node_modules/@types/react/global.d.ts","../../node_modules/csstype/index.d.ts","../../node_modules/@types/hoist-non-react-statics/node_modules/@types/react/index.d.ts","../../node_modules/@types/hoist-non-react-statics/index.d.ts","../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../node_modules/@types/istanbul-lib-report/index.d.ts","../../node_modules/@types/istanbul-reports/index.d.ts","../../node_modules/@jest/expect-utils/build/index.d.ts","../../node_modules/chalk/index.d.ts","../../node_modules/@sinclair/typebox/typebox.d.ts","../../node_modules/@jest/schemas/build/index.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/expect/build/index.d.ts","../../node_modules/@types/jest/index.d.ts","../../node_modules/parse5/dist/common/html.d.ts","../../node_modules/parse5/dist/common/token.d.ts","../../node_modules/parse5/dist/common/error-codes.d.ts","../../node_modules/parse5/dist/tokenizer/preprocessor.d.ts","../../node_modules/parse5/dist/tokenizer/index.d.ts","../../node_modules/parse5/dist/tree-adapters/interface.d.ts","../../node_modules/parse5/dist/parser/open-element-stack.d.ts","../../node_modules/parse5/dist/parser/formatting-element-list.d.ts","../../node_modules/parse5/dist/parser/index.d.ts","../../node_modules/parse5/dist/tree-adapters/default.d.ts","../../node_modules/parse5/dist/serializer/index.d.ts","../../node_modules/parse5/dist/common/foreign-content.d.ts","../../node_modules/parse5/dist/index.d.ts","../../node_modules/@types/tough-cookie/index.d.ts","../../node_modules/@types/jsdom/base.d.ts","../../node_modules/@types/jsdom/index.d.ts","../../node_modules/@types/json5/index.d.ts","../../node_modules/@types/jsonwebtoken/index.d.ts","../../node_modules/@types/methods/index.d.ts","../../node_modules/@types/ms/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport/index.d.ts","../../node_modules/@types/passport-jwt/node_modules/@types/jsonwebtoken/index.d.ts","../../node_modules/@types/passport-strategy/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-strategy/index.d.ts","../../node_modules/@types/passport-jwt/index.d.ts","../../node_modules/@types/passport-local/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-local/index.d.ts","../../node_modules/@types/prop-types/index.d.ts","../../node_modules/@types/react/global.d.ts","../../node_modules/@types/react/index.d.ts","../../node_modules/@types/react-dom/index.d.ts","../../node_modules/@types/scheduler/index.d.ts","../../node_modules/@types/semver/classes/semver.d.ts","../../node_modules/@types/semver/functions/parse.d.ts","../../node_modules/@types/semver/functions/valid.d.ts","../../node_modules/@types/semver/functions/clean.d.ts","../../node_modules/@types/semver/functions/inc.d.ts","../../node_modules/@types/semver/functions/diff.d.ts","../../node_modules/@types/semver/functions/major.d.ts","../../node_modules/@types/semver/functions/minor.d.ts","../../node_modules/@types/semver/functions/patch.d.ts","../../node_modules/@types/semver/functions/prerelease.d.ts","../../node_modules/@types/semver/functions/compare.d.ts","../../node_modules/@types/semver/functions/rcompare.d.ts","../../node_modules/@types/semver/functions/compare-loose.d.ts","../../node_modules/@types/semver/functions/compare-build.d.ts","../../node_modules/@types/semver/functions/sort.d.ts","../../node_modules/@types/semver/functions/rsort.d.ts","../../node_modules/@types/semver/functions/gt.d.ts","../../node_modules/@types/semver/functions/lt.d.ts","../../node_modules/@types/semver/functions/eq.d.ts","../../node_modules/@types/semver/functions/neq.d.ts","../../node_modules/@types/semver/functions/gte.d.ts","../../node_modules/@types/semver/functions/lte.d.ts","../../node_modules/@types/semver/functions/cmp.d.ts","../../node_modules/@types/semver/functions/coerce.d.ts","../../node_modules/@types/semver/classes/comparator.d.ts","../../node_modules/@types/semver/classes/range.d.ts","../../node_modules/@types/semver/functions/satisfies.d.ts","../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../node_modules/@types/semver/ranges/min-version.d.ts","../../node_modules/@types/semver/ranges/valid.d.ts","../../node_modules/@types/semver/ranges/outside.d.ts","../../node_modules/@types/semver/ranges/gtr.d.ts","../../node_modules/@types/semver/ranges/ltr.d.ts","../../node_modules/@types/semver/ranges/intersects.d.ts","../../node_modules/@types/semver/ranges/simplify.d.ts","../../node_modules/@types/semver/ranges/subset.d.ts","../../node_modules/@types/semver/internals/identifiers.d.ts","../../node_modules/@types/semver/index.d.ts","../../node_modules/@types/stack-utils/index.d.ts","../../node_modules/@types/superagent/lib/agent-base.d.ts","../../node_modules/@types/superagent/lib/node/response.d.ts","../../node_modules/@types/superagent/types.d.ts","../../node_modules/@types/superagent/lib/node/agent.d.ts","../../node_modules/@types/superagent/lib/request-base.d.ts","../../node_modules/form-data/index.d.ts","../../node_modules/@types/superagent/lib/node/http2wrapper.d.ts","../../node_modules/@types/superagent/lib/node/index.d.ts","../../node_modules/@types/superagent/index.d.ts","../../node_modules/@types/supertest/index.d.ts","../../node_modules/@types/testing-library__jest-dom/matchers.d.ts","../../node_modules/@types/testing-library__jest-dom/index.d.ts","../../node_modules/@types/use-sync-external-store/index.d.ts","../../node_modules/@types/uuid/index.d.ts","../../node_modules/@types/validator/lib/isboolean.d.ts","../../node_modules/@types/validator/lib/isemail.d.ts","../../node_modules/@types/validator/lib/isfqdn.d.ts","../../node_modules/@types/validator/lib/isiban.d.ts","../../node_modules/@types/validator/lib/isiso31661alpha2.d.ts","../../node_modules/@types/validator/lib/isiso4217.d.ts","../../node_modules/@types/validator/lib/isiso6391.d.ts","../../node_modules/@types/validator/lib/istaxid.d.ts","../../node_modules/@types/validator/lib/isurl.d.ts","../../node_modules/@types/validator/index.d.ts","../../node_modules/@types/yargs-parser/index.d.ts","../../node_modules/@types/yargs/index.d.ts"],"fileIdsList":[[57,69,112],[69,112],[69,112,189],[57,58,59,60,61,69,112],[57,59,69,112],[69,112,127,162,163],[69,112,127,162],[69,112,166,169],[69,112,166,167,168],[69,112,169],[69,112,124,127,162,172,173,174],[69,112,164,173,175,177],[69,112,125,162],[69,112,182],[69,112,180,181],[69,112,184],[69,112,185],[69,112,191,194,282],[69,112,124,158,162,208,209,211],[69,112,210],[69,112,117,162],[69,109,112],[69,111,112],[112],[69,112,117,147],[69,112,113,118,124,125,132,144,155],[69,112,113,114,124,132],[64,65,66,69,112],[69,112,115,156],[69,112,116,117,125,133],[69,112,117,144,152],[69,112,118,120,124,132],[69,111,112,119],[69,112,120,121],[69,112,124],[69,112,122,124],[69,111,112,124],[69,112,124,125,126,144,155],[69,112,124,125,126,139,144,147],[69,107,112,160],[69,107,112,120,124,127,132,144,155],[69,112,124,125,127,128,132,144,152,155],[69,112,127,129,144,152,155],[67,68,69,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],[69,112,124,130],[69,112,131,155],[69,112,120,124,132,144],[69,112,133],[69,112,134],[69,111,112,135],[69,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],[69,112,137],[69,112,138],[69,112,124,139,140],[69,112,139,141,156,158],[69,112,124,144,145,147],[69,112,146,147],[69,112,144,145],[69,112,147],[69,112,148],[69,109,112,144],[69,112,124,150,151],[69,112,150,151],[69,112,117,132,144,152],[69,112,153],[69,112,132,154],[69,112,127,138,155],[69,112,117,156],[69,112,144,157],[69,112,131,158],[69,112,159],[69,112,117,124,126,135,144,155,158,160],[69,112,144,161],[69,112,219,221],[69,112,117,162,215],[69,112,217,218,221],[69,112,164,177,216],[69,112,178,217,218],[69,112,127,217],[69,112,164,175,177,216],[69,112,227],[69,112,181,225,226],[69,112,230,269],[69,112,230,254,269],[69,112,269],[69,112,230],[69,112,230,255,269],[69,112,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268],[69,112,255,269],[69,112,125,144,162,171],[69,112,127,162,172,176],[69,112,278],[69,112,165,214,271,273,279],[69,112,128,132,144,152,162],[69,112,125,127,128,129,132,144,214,272,273,274,275,276,277],[69,112,127,144,278],[69,112,125,272,273],[69,112,155,272],[69,112,279],[69,112,194,195,281],[69,112,285,286,287,288,289,290,291,292,293],[69,112,295],[69,112,187,193],[69,112,127,144,162],[69,112,191],[69,112,188,192],[69,112,197],[69,112,196,197],[69,112,196],[69,112,196,197,198,200,201,204,205,206,207],[69,112,197,201],[69,112,196,197,198,200,201,202,203],[69,112,196,201],[69,112,201,205],[69,112,197,198,199],[69,112,198],[69,112,196,197,201],[69,112,190],[69,79,83,112,155],[69,79,112,144,155],[69,74,112],[69,76,79,112,152,155],[69,112,132,152],[69,112,162],[69,74,112,162],[69,76,79,112,132,155],[69,71,72,75,78,112,124,144,155],[69,79,86,112],[69,71,77,112],[69,79,100,101,112],[69,75,79,112,147,155,162],[69,100,112,162],[69,73,74,112,162],[69,79,112],[69,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,112],[69,79,94,112],[69,79,86,87,112],[69,77,79,87,88,112],[69,78,112],[69,71,74,79,112],[69,79,83,87,88,112],[69,83,112],[69,77,79,82,112,155],[69,71,76,79,86,112],[69,112,144],[69,74,79,100,112,160,162],[51,52,53,69,112]],"fileInfos":[{"version":"69684132aeb9b5642cbcd9e22dff7818ff0ee1aa831728af0ecf97d3364d5546","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"092c2bfe125ce69dbb1223c85d68d4d2397d7d8411867b5cc03cec902c233763","affectsGlobalScope":true,"impliedFormat":1},{"version":"07f073f19d67f74d732b1adea08e1dc66b1b58d77cb5b43931dee3d798a2fd53","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1d242d5c24cf285c88bc4fb93c5ff903de8319064e282986edeb6247ba028d5e","impliedFormat":1},{"version":"d270c4e567f5339afb4deea840667532b6889ff7bb24102242bc2493c28ab2f5","signature":"a24e353dbf5a93fb13ef96433697faf1b795415ce065634f2d41dba5093fba4b"},{"version":"78e336dd87ab5cfef538fafd85de5659ac4a5e160070e785920c1588724fdff4","signature":"0b266da97aefa7f01a372538abda22420a88792f98b3de61407db05814a49c0d"},{"version":"13410b8424cd5790aea7af7ffc15dc4c7bf0734b55435a13e712c53ac061c8ec","signature":"f148160c4177a7a4e2f3effd581248de80c2c9ef477234bbca8443cefd4c3b65"},{"version":"3b2b2cc4b3324ed0528e8fe4b7b03614a76929f996a0614d17db13adadc68907","signature":"00d4bafa170004ca2271f5338a8f64dadb946370a01c09a592ba086dc27fc1a0"},{"version":"ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","impliedFormat":1},{"version":"c1a44418b7e3f9381e55dea86cc32b26ec3d5ccf6510102716aaa55023919f38","impliedFormat":99},{"version":"d88b3dc8b7055665059ea06ffafce9467fc4bdfa7cb2d7a6f4262556bb482b0d","impliedFormat":1},{"version":"b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","impliedFormat":1},{"version":"32ddc6ad753ae79571bbf28cebff7a383bf7f562ac5ef5d25c94ef7f71609d49","impliedFormat":1},{"version":"670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","impliedFormat":1},{"version":"81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","impliedFormat":1},{"version":"069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","impliedFormat":1},{"version":"a3d3f704c5339a36da3ca8c62b29072f87e86c783b8452d235992142ec71aa2d","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"763fe0f42b3d79b440a9b6e51e9ba3f3f91352469c1e4b3b67bfa4ff6352f3f4","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"7f182617db458e98fc18dfb272d40aa2fff3a353c44a89b2c0ccb3937709bfb5","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"88d9a77d2abc23a7d26625dd6dae5b57199a8693b85c9819355651c9d9bab90f","affectsGlobalScope":true,"impliedFormat":1},{"version":"a38efe83ff77c34e0f418a806a01ca3910c02ee7d64212a59d59bca6c2c38fa1","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"3fe4022ba1e738034e38ad9afacbf0f1f16b458ed516326f5bf9e4a31e9be1dc","impliedFormat":1},{"version":"a957197054b074bcdf5555d26286e8461680c7c878040d0f4e2d5509a7524944","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"e9b97d69510658d2f4199b7d384326b7c4053b9e6645f5c19e1c2a54ede427fc","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"f478f6f5902dc144c0d6d7bdc919c5177cac4d17a8ca8653c2daf6d7dc94317f","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"b200675fd112ffef97c166d0341fb33f6e29e9f27660adde7868e95c5bc98beb","impliedFormat":1},{"version":"a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","impliedFormat":1},{"version":"e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true,"impliedFormat":1},{"version":"a0a1dda070290b92da5a50113b73ecc4dd6bcbffad66e3c86503d483eafbadcf","impliedFormat":1},{"version":"59dcad36c4549175a25998f6a8b33c1df8e18df9c12ebad1dfb25af13fd4b1ce","impliedFormat":1},{"version":"9ba5b6a30cb7961b68ad4fb18dca148db151c2c23b8d0a260fc18b83399d19d3","impliedFormat":1},{"version":"3f3edb8e44e3b9df3b7ca3219ab539710b6a7f4fe16bd884d441af207e03cd57","impliedFormat":1},{"version":"528b62e4272e3ddfb50e8eed9e359dedea0a4d171c3eb8f337f4892aac37b24b","impliedFormat":1},{"version":"d71535813e39c23baa113bc4a29a0e187b87d1105ccc8c5a6ebaca38d9a9bff2","impliedFormat":1},{"version":"8cf7e92bdb2862c2d28ba4535c43dc599cfbc0025db5ed9973d9b708dcbe3d98","affectsGlobalScope":true,"impliedFormat":1},{"version":"278e70975bd456bba5874eaee17692355432e8d379b809a97f6af0eee2b702d8","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true,"impliedFormat":1},{"version":"636302a00dfd1f9fe6e8e91e4e9350c6518dcc8d51a474e4fc3a9ba07135100b","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"933921f0bb0ec12ef45d1062a1fc0f27635318f4d294e4d99de9a5493e618ca2","impliedFormat":1},{"version":"71a0f3ad612c123b57239a7749770017ecfe6b66411488000aba83e4546fde25","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"e1ce1d622f1e561f6cdf246372ead3bbc07ce0342024d0e9c7caf3136f712698","impliedFormat":1},{"version":"c878f74b6d10b267f6075c51ac1d8becd15b4aa6a58f79c0cfe3b24908357f60","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"27e4532aaaa1665d0dd19023321e4dc12a35a741d6b8e1ca3517fcc2544e0efe","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"8c2ad42d5d1a2e8e6112625767f8794d9537f1247907378543106f7ba6c7df90","affectsGlobalScope":true,"impliedFormat":1},{"version":"f0be1b8078cd549d91f37c30c222c2a187ac1cf981d994fb476a1adc61387b14","affectsGlobalScope":true,"impliedFormat":1},{"version":"0aaed1d72199b01234152f7a60046bc947f1f37d78d182e9ae09c4289e06a592","impliedFormat":1},{"version":"98ffdf93dfdd206516971d28e3e473f417a5cfd41172e46b4ce45008f640588e","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"12e8ce658dd17662d82fb0509d2057afc5e6ee30369a2e9e0957eff725b1f11d","affectsGlobalScope":true,"impliedFormat":1},{"version":"74736930d108365d7bbe740c7154706ccfb1b2a3855a897963ab3e5c07ecbf19","impliedFormat":1},{"version":"858f999b3e4a45a4e74766d43030941466460bf8768361d254234d5870480a53","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"63b05afa6121657f25e99e1519596b0826cda026f09372c9100dfe21417f4bd6","affectsGlobalScope":true,"impliedFormat":1},{"version":"3797dd6f4ea3dc15f356f8cdd3128bfa18122213b38a80d6c1f05d8e13cbdad8","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1},{"version":"104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","impliedFormat":1},{"version":"cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","impliedFormat":1},{"version":"0dc6940ff35d845686a118ee7384713a84024d60ef26f25a2f87992ec7ddbd64","impliedFormat":1},{"version":"e2b48abff5a8adc6bb1cd13a702b9ef05e6045a98e7cfa95a8779b53b6d0e69d","impliedFormat":1},{"version":"f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","impliedFormat":1},{"version":"a4a39b5714adfcadd3bbea6698ca2e942606d833bde62ad5fb6ec55f5e438ff8","impliedFormat":1},{"version":"bbc1d029093135d7d9bfa4b38cbf8761db505026cc458b5e9c8b74f4000e5e75","impliedFormat":1},{"version":"1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","impliedFormat":1},{"version":"d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","impliedFormat":1},{"version":"b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","impliedFormat":1},{"version":"baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","impliedFormat":1},{"version":"2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed","impliedFormat":1},{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true,"impliedFormat":1},{"version":"b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","impliedFormat":1},{"version":"0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a","impliedFormat":1},{"version":"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","impliedFormat":1},{"version":"afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","impliedFormat":1},{"version":"742d4b7b02ffc3ba3c4258a3d196457da2b3fec0125872fd0776c50302a11b9d","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"03566a51ebc848dec449a4ed69518e9f20caa6ac123fa32676aaaabe64adae8e","impliedFormat":1},{"version":"b2d0630483bf337ef9dac326c3334a245aa4946e9f60f12baf7da5be44beafbb","impliedFormat":1},{"version":"035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","impliedFormat":1},{"version":"a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","impliedFormat":1},{"version":"5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","impliedFormat":1},{"version":"cdcc132f207d097d7d3aa75615ab9a2e71d6a478162dde8b67f88ea19f3e54de","impliedFormat":1},{"version":"0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","impliedFormat":1},{"version":"c085e9aa62d1ae1375794c1fb927a445fa105fed891a7e24edbb1c3300f7384a","impliedFormat":1},{"version":"f315e1e65a1f80992f0509e84e4ae2df15ecd9ef73df975f7c98813b71e4c8da","impliedFormat":1},{"version":"5b9586e9b0b6322e5bfbd2c29bd3b8e21ab9d871f82346cb71020e3d84bae73e","impliedFormat":1},{"version":"3e70a7e67c2cb16f8cd49097360c0309fe9d1e3210ff9222e9dac1f8df9d4fb6","impliedFormat":1},{"version":"ab68d2a3e3e8767c3fba8f80de099a1cfc18c0de79e42cb02ae66e22dfe14a66","impliedFormat":1},{"version":"d96cc6598148bf1a98fb2e8dcf01c63a4b3558bdaec6ef35e087fd0562eb40ec","impliedFormat":1},{"version":"f8db4fea512ab759b2223b90ecbbe7dae919c02f8ce95ec03f7fb1cf757cfbeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"19990350fca066265b2c190c9b6cde1229f35002ea2d4df8c9e397e9942f6c89","impliedFormat":99},{"version":"8fb8fdda477cd7382477ffda92c2bb7d9f7ef583b1aa531eb6b2dc2f0a206c10","impliedFormat":99},{"version":"66995b0c991b5c5d42eff1d950733f85482c7419f7296ab8952e03718169e379","impliedFormat":99},{"version":"9863f888da357e35e013ca3465b794a490a198226bd8232c2f81fb44e16ff323","impliedFormat":99},{"version":"b4c6184d78303b0816e779a48bef779b15aea4a66028eb819aac0abee8407dea","impliedFormat":99},{"version":"db085d2171d48938a99e851dafe0e486dce9859e5dfa73c21de5ed3d4d6fb0c5","impliedFormat":99},{"version":"62a3ad1ddd1f5974b3bf105680b3e09420f2230711d6520a521fab2be1a32838","impliedFormat":99},{"version":"a77be6fc44c876bc10c897107f84eaba10790913ebdcad40fcda7e47469b2160","impliedFormat":99},{"version":"06cf55b6da5cef54eaaf51cdc3d4e5ebf16adfdd9ebd20cec7fe719be9ced017","impliedFormat":99},{"version":"91f5dbcdb25d145a56cffe957ec665256827892d779ef108eb2f3864faff523b","impliedFormat":99},{"version":"052ba354bab8fb943e0bc05a0769f7b81d7c3b3c6cd0f5cfa53c7b2da2a525c5","impliedFormat":99},{"version":"927955a3de5857e0a1c575ced5a4245e74e6821d720ed213141347dd1870197f","impliedFormat":99},{"version":"fec804d54cd97dd77e956232fc37dc13f53e160d4bbeeb5489e86eeaa91f7ebd","impliedFormat":99},{"version":"03c258e060b7da220973f84b89615e4e9850e9b5d30b3a8e4840b3e3268ae8eb","impliedFormat":1},{"version":"fd0589ca571ad090b531d8c095e26caa53d4825c64d3ff2b2b1ab95d72294175","impliedFormat":1},{"version":"669843ecafb89ae1e944df06360e8966219e4c1c34c0d28aa2503272cdd444a7","affectsGlobalScope":true,"impliedFormat":1},{"version":"96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","impliedFormat":1},{"version":"abd6ccdaae9905ea2ec85488fdce744930862327633eebd40d429511f6a1d5da","impliedFormat":1},{"version":"b0f9ef6423d6b29dde29fd60d83d215796b2c1b76bfca28ac374ae18702cfb8e","impliedFormat":1},{"version":"fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","impliedFormat":1},{"version":"86ea91bfa7fef1eeb958056f30f1db4e0680bc9b5132e5e9d6e9cfd773c0c4fd","affectsGlobalScope":true,"impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"ff155930718467b27e379e4a195e4607ce277f805cad9d2fa5f4fd5dec224df6","affectsGlobalScope":true,"impliedFormat":1},{"version":"818e7c86776c67f49dbd781d445e13297b59aa7262e54b065b1332d7dcc6f59a","impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"03c92769f389dbd9e45232f7eb01c3e0f482b62555aaf2029dcbf380d5cee9e4","impliedFormat":1},{"version":"32d7f70fd3498bc76a46dab8b03af4215f445f490f8e213c80cf06b636a4e413","impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"17668c1aab598920796050ee5a00d961ede5e92595f6ac8908a975ed75a537e5","impliedFormat":1},{"version":"65ff5a0aefd7817a03c1ad04fee85c9cdd3ec415cc3c9efec85d8008d4d5e4ee","impliedFormat":1},{"version":"549df62b64a71004aee17685b445a8289013daf96246ce4d9b087d13d7a27a61","affectsGlobalScope":true,"impliedFormat":1},{"version":"40a1b33c67109be18a961127873e8ba198429eacf11a468b4a052cddc9a73f8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"17ed71200119e86ccef2d96b73b02ce8854b76ad6bd21b5021d4269bec527b5f","impliedFormat":1},{"version":"4ef960df4f672e93b479f88211ed8b5cfa8a598b97aafa3396cacdc3341e3504","impliedFormat":1},{"version":"cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","impliedFormat":1},{"version":"9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","impliedFormat":1},{"version":"c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","impliedFormat":1},{"version":"8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","impliedFormat":1},{"version":"86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","impliedFormat":1},{"version":"42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","impliedFormat":1},{"version":"ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","impliedFormat":1},{"version":"83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","impliedFormat":1},{"version":"1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","impliedFormat":1},{"version":"0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","impliedFormat":1},{"version":"cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","impliedFormat":1},{"version":"c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","impliedFormat":1},{"version":"f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","impliedFormat":1},{"version":"0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","impliedFormat":1},{"version":"7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","impliedFormat":1},{"version":"bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","impliedFormat":1},{"version":"52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","impliedFormat":1},{"version":"770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","impliedFormat":1},{"version":"d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","impliedFormat":1},{"version":"799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","impliedFormat":1},{"version":"2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","impliedFormat":1},{"version":"9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","impliedFormat":1},{"version":"397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","impliedFormat":1},{"version":"a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","impliedFormat":1},{"version":"a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","impliedFormat":1},{"version":"c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","impliedFormat":1},{"version":"4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","impliedFormat":1},{"version":"f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","impliedFormat":1},{"version":"cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","impliedFormat":1},{"version":"b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","impliedFormat":1},{"version":"c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","impliedFormat":1},{"version":"14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","impliedFormat":1},{"version":"a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","impliedFormat":1},{"version":"f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","impliedFormat":1},{"version":"3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","impliedFormat":1},{"version":"662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","impliedFormat":1},{"version":"c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","impliedFormat":1},{"version":"2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","impliedFormat":1},{"version":"34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","impliedFormat":1},{"version":"844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","impliedFormat":1},{"version":"ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","impliedFormat":1},{"version":"e7bb49fac2aa46a13011b5eb5e4a8648f70a28aea1853fab2444dd4fcb4d4ec7","impliedFormat":1},{"version":"464e45d1a56dae066d7e1a2f32e55b8de4bfb072610c3483a4091d73c9924908","impliedFormat":1},{"version":"da318e126ac39362c899829547cc8ee24fa3e8328b52cdd27e34173cf19c7941","impliedFormat":1},{"version":"24bd01a91f187b22456c7171c07dbf44f3ad57ebd50735aab5c13fa23d7114b4","impliedFormat":1},{"version":"4738eefeaaba4d4288a08c1c226a76086095a4d5bcc7826d2564e7c29da47671","impliedFormat":1},{"version":"736097ddbb2903bef918bb3b5811ef1c9c5656f2a73bd39b22a91b9cc2525e50","impliedFormat":1},{"version":"dbec715e9e82df297e49e3ed0029f6151aa40517ebfd6fcdba277a8a2e1d3a1b","impliedFormat":1},{"version":"097f1f8ca02e8940cfdcca553279e281f726485fa6fb214b3c9f7084476f6bcc","impliedFormat":1},{"version":"8f75e211a2e83ff216eb66330790fb6412dcda2feb60c4f165c903cf375633ee","impliedFormat":1},{"version":"dbe69644ab6e699ad2ef740056c637c34f3348af61d3764ff555d623703525db","impliedFormat":1},{"version":"3f36c0c7508302f3dca3dc5ab0a66d822b2222f70c24bb1796ddb5c9d1168a05","impliedFormat":1},{"version":"b23d5b89c465872587e130f427b39458b8e3ad16385f98446e9e86151ba6eb15","affectsGlobalScope":true,"impliedFormat":1},{"version":"61f41da9aaa809e5142b1d849d4e70f3e09913a5cb32c629bf6e61ef27967ff7","impliedFormat":1},{"version":"7d2b7fe4adb76d8253f20e4dbdce044f1cdfab4902ec33c3604585f553883f7d","impliedFormat":1},{"version":"c6cdcd12d577032b84eed1de4d2de2ae343463701a25961b202cff93989439fb","impliedFormat":1},{"version":"203d75f653988a418930fb16fda8e84dea1fac7e38abdaafd898f257247e0860","impliedFormat":1},{"version":"c5b3da7e2ecd5968f723282aba49d8d1a2e178d0afe48998dad93f81e2724091","impliedFormat":1},{"version":"efd2860dc74358ffa01d3de4c8fa2f966ae52c13c12b41ad931c078151b36601","impliedFormat":1},{"version":"09acacae732e3cc67a6415026cfae979ebe900905500147a629837b790a366b3","impliedFormat":1},{"version":"f7b622759e094a3c2e19640e0cb233b21810d2762b3e894ef7f415334125eb22","impliedFormat":1},{"version":"99236ea5c4c583082975823fd19bcce6a44963c5c894e20384bc72e7eccf9b03","impliedFormat":1},{"version":"f6688a02946a3f7490aa9e26d76d1c97a388e42e77388cbab010b69982c86e9e","impliedFormat":1},{"version":"9f642953aba68babd23de41de85d4e97f0c39ef074cb8ab8aa7d55237f62aff6","impliedFormat":1},{"version":"529ac413f6eada3a1780c4050f4d4853488fc00652f45101737863e9ac519bff","impliedFormat":1},{"version":"bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","impliedFormat":1},{"version":"26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","impliedFormat":1}],"root":[[51,54]],"options":{"composite":true,"declaration":true,"declarationMap":true,"esModuleInterop":true,"inlineSources":false,"module":1,"noUnusedLocals":false,"noUnusedParameters":false,"outDir":"./dist","rootDir":"./src","skipLibCheck":true,"sourceMap":true,"strict":true,"target":4},"referencedMap":[[59,1],[57,2],[187,2],[190,3],[189,2],[55,2],[62,4],[58,1],[60,5],[61,1],[63,2],[164,6],[163,7],[165,2],[170,8],[169,9],[168,10],[166,2],[175,11],[178,12],[179,13],[183,14],[180,2],[182,15],[176,2],[184,2],[185,16],[186,17],[195,18],[210,19],[211,20],[167,2],[212,2],[213,21],[214,2],[171,2],[215,2],[109,22],[110,22],[111,23],[69,24],[112,25],[113,26],[114,27],[64,2],[67,28],[65,2],[66,2],[115,29],[116,30],[117,31],[118,32],[119,33],[120,34],[121,34],[123,35],[122,36],[124,37],[125,38],[126,39],[108,40],[68,2],[127,41],[128,42],[129,43],[162,44],[130,45],[131,46],[132,47],[133,48],[134,49],[135,50],[136,51],[137,52],[138,53],[139,54],[140,54],[141,55],[142,2],[143,2],[144,56],[146,57],[145,58],[147,59],[148,60],[149,61],[150,62],[151,63],[152,64],[153,65],[154,66],[155,67],[156,68],[157,69],[158,70],[159,71],[160,72],[161,73],[222,74],[219,75],[224,76],[223,77],[221,78],[220,77],[218,79],[216,11],[217,80],[225,2],[173,2],[174,2],[228,81],[226,2],[227,82],[229,2],[254,83],[255,84],[230,85],[233,85],[252,83],[253,83],[243,83],[242,86],[240,83],[235,83],[248,83],[246,83],[250,83],[234,83],[247,83],[251,83],[236,83],[237,83],[249,83],[231,83],[238,83],[239,83],[241,83],[245,83],[256,87],[244,83],[232,83],[269,88],[268,2],[263,87],[265,89],[264,87],[257,87],[258,87],[260,87],[262,87],[266,89],[267,89],[259,89],[261,89],[172,90],[177,91],[270,2],[279,92],[271,2],[274,93],[277,94],[278,95],[272,96],[275,97],[273,98],[280,99],[282,100],[281,2],[209,2],[283,2],[284,2],[294,101],[285,2],[286,2],[287,2],[288,2],[289,2],[290,2],[291,2],[292,2],[293,2],[295,2],[296,102],[56,2],[70,2],[188,2],[181,2],[194,103],[276,104],[192,105],[193,106],[198,107],[207,108],[196,2],[197,109],[208,110],[203,111],[204,112],[202,113],[206,114],[200,115],[199,116],[205,117],[201,108],[191,118],[48,2],[49,2],[8,2],[9,2],[13,2],[12,2],[2,2],[14,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[3,2],[22,2],[23,2],[4,2],[24,2],[50,2],[28,2],[25,2],[26,2],[27,2],[29,2],[30,2],[31,2],[5,2],[32,2],[33,2],[34,2],[35,2],[6,2],[39,2],[36,2],[37,2],[38,2],[40,2],[7,2],[41,2],[46,2],[47,2],[42,2],[43,2],[44,2],[45,2],[1,2],[11,2],[10,2],[86,119],[96,120],[85,119],[106,121],[77,122],[76,123],[105,124],[99,125],[104,126],[79,127],[93,128],[78,129],[102,130],[74,131],[73,124],[103,132],[75,133],[80,134],[81,2],[84,134],[71,2],[107,135],[97,136],[88,137],[89,138],[91,139],[87,140],[90,141],[100,124],[82,142],[83,143],[92,144],[72,145],[95,136],[94,134],[98,2],[101,146],[54,147],[52,2],[53,2],[51,2]],"latestChangedDtsFile":"./dist/types/quiz.types.d.ts","version":"5.8.3"}
</file>

<file path="packages/tsconfig/package.json">
{
  "name": "tsconfig",
  "version": "0.0.0",
  "private": true,
  "packageManager": "yarn@4.9.1",
  "main": "index.js",
  "files": [
    "base.json",
    "nestjs.json",
    "nextjs.json",
    "react-library.json"
  ]
}
</file>

<file path="packages/ui/tsconfig.json">
{
  "extends": "../tsconfig/react-library.json",
  "compilerOptions": {
    "outDir": "dist",
    "rootDir": ".", // Changed to use the current directory as root
    "lib": ["dom", "dom.iterable", "ESNext"], // Overskriver lib fra react-library.json for at inkludere DOM
    "composite": true, // God praksis for pakker der refereres til
    "declaration": true, // God praksis for pakker der refereres til
    "declarationMap": true // God praksis for pakker der refereres til
  },
  "include": ["index.tsx", "components/**/*.tsx", "components/**/*.ts"], // Updated to include actual source files with proper extensions
  "exclude": ["dist", "build", "node_modules"]
}
</file>

<file path="gitlog.txt">
2025-05-20T19:53:56.1932367Z Current runner version: '2.324.0'
2025-05-20T19:53:56.1969878Z ##[group]Runner Image Provisioner
2025-05-20T19:53:56.1971483Z Hosted Compute Agent
2025-05-20T19:53:56.1972382Z Version: 20250508.323
2025-05-20T19:53:56.1973340Z Commit: 81b259f29879f73b4213d199e42d8c3465dae986
2025-05-20T19:53:56.1974451Z Build Date: 2025-05-08T19:40:08Z
2025-05-20T19:53:56.1975450Z ##[endgroup]
2025-05-20T19:53:56.1976278Z ##[group]Operating System
2025-05-20T19:53:56.1977378Z Ubuntu
2025-05-20T19:53:56.1978124Z 24.04.2
2025-05-20T19:53:56.1978904Z LTS
2025-05-20T19:53:56.1979780Z ##[endgroup]
2025-05-20T19:53:56.1980655Z ##[group]Runner Image
2025-05-20T19:53:56.1981865Z Image: ubuntu-24.04
2025-05-20T19:53:56.1982819Z Version: 20250511.1.0
2025-05-20T19:53:56.1984666Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250511.1/images/ubuntu/Ubuntu2404-Readme.md
2025-05-20T19:53:56.1987450Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250511.1
2025-05-20T19:53:56.1989152Z ##[endgroup]
2025-05-20T19:53:56.1991317Z ##[group]GITHUB_TOKEN Permissions
2025-05-20T19:53:56.1994091Z Contents: read
2025-05-20T19:53:56.1995029Z Metadata: read
2025-05-20T19:53:56.1995785Z Packages: read
2025-05-20T19:53:56.1996622Z ##[endgroup]
2025-05-20T19:53:56.1999394Z Secret source: Actions
2025-05-20T19:53:56.2000473Z Prepare workflow directory
2025-05-20T19:53:56.2762561Z Prepare all required actions
2025-05-20T19:53:56.2819867Z Getting action download info
2025-05-20T19:53:56.4862453Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-05-20T19:53:56.4863456Z Version: 4.2.2
2025-05-20T19:53:56.4864370Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-05-20T19:53:56.4865633Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-05-20T19:53:56.4866331Z ##[endgroup]
2025-05-20T19:53:56.5565224Z ##[group]Download immutable action package 'actions/setup-node@v4'
2025-05-20T19:53:56.5566093Z Version: 4.4.0
2025-05-20T19:53:56.5566835Z Digest: sha256:9427cefe82346e992fb5b949e3569b39d537ae41aa3086483b14eceebfc16bc1
2025-05-20T19:53:56.5567769Z Source commit SHA: 49933ea5288caeca8642d1e84afbd3f7d6820020
2025-05-20T19:53:56.5568507Z ##[endgroup]
2025-05-20T19:53:56.7170669Z Complete job name: Build and Test
2025-05-20T19:53:56.7770089Z ##[group]Run actions/checkout@v4
2025-05-20T19:53:56.7771144Z with:
2025-05-20T19:53:56.7771518Z   fetch-depth: 0
2025-05-20T19:53:56.7771927Z   repository: Baragji/LearningLab
2025-05-20T19:53:56.7772539Z   token: ***
2025-05-20T19:53:56.7772904Z   ssh-strict: true
2025-05-20T19:53:56.7773286Z   ssh-user: git
2025-05-20T19:53:56.7773668Z   persist-credentials: true
2025-05-20T19:53:56.7774099Z   clean: true
2025-05-20T19:53:56.7774486Z   sparse-checkout-cone-mode: true
2025-05-20T19:53:56.7774951Z   fetch-tags: false
2025-05-20T19:53:56.7775349Z   show-progress: true
2025-05-20T19:53:56.7775739Z   lfs: false
2025-05-20T19:53:56.7776098Z   submodules: false
2025-05-20T19:53:56.7776487Z   set-safe-directory: true
2025-05-20T19:53:56.7777173Z env:
2025-05-20T19:53:56.7777597Z   NEXT_PUBLIC_API_URL: http://localhost:5002/api
2025-05-20T19:53:56.7778133Z   DATABASE_URL: 
2025-05-20T19:53:56.7778490Z   JWT_SECRET: 
2025-05-20T19:53:56.7778861Z   JWT_EXPIRES_IN: 15m
2025-05-20T19:53:56.7779271Z   SALT_ROUNDS: 10
2025-05-20T19:53:56.7779629Z ##[endgroup]
2025-05-20T19:53:56.8826146Z Syncing repository: Baragji/LearningLab
2025-05-20T19:53:56.8827766Z ##[group]Getting Git version info
2025-05-20T19:53:56.8828456Z Working directory is '/home/runner/work/LearningLab/LearningLab'
2025-05-20T19:53:56.8829407Z [command]/usr/bin/git version
2025-05-20T19:53:56.8861529Z git version 2.49.0
2025-05-20T19:53:56.8886384Z ##[endgroup]
2025-05-20T19:53:56.8900341Z Temporarily overriding HOME='/home/runner/work/_temp/832afd6d-7a2d-48a7-95cd-6d251c9be1af' before making global git config changes
2025-05-20T19:53:56.8901847Z Adding repository directory to the temporary git global config as a safe directory
2025-05-20T19:53:56.8911819Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/LearningLab/LearningLab
2025-05-20T19:53:56.8944255Z Deleting the contents of '/home/runner/work/LearningLab/LearningLab'
2025-05-20T19:53:56.8947604Z ##[group]Initializing the repository
2025-05-20T19:53:56.8951659Z [command]/usr/bin/git init /home/runner/work/LearningLab/LearningLab
2025-05-20T19:53:56.9005110Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-05-20T19:53:56.9006647Z hint: is subject to change. To configure the initial branch name to use in all
2025-05-20T19:53:56.9008065Z hint: of your new repositories, which will suppress this warning, call:
2025-05-20T19:53:56.9009080Z hint:
2025-05-20T19:53:56.9009547Z hint: 	git config --global init.defaultBranch <name>
2025-05-20T19:53:56.9010084Z hint:
2025-05-20T19:53:56.9010604Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-05-20T19:53:56.9011676Z hint: 'development'. The just-created branch can be renamed via this command:
2025-05-20T19:53:56.9012352Z hint:
2025-05-20T19:53:56.9012719Z hint: 	git branch -m <name>
2025-05-20T19:53:56.9013722Z Initialized empty Git repository in /home/runner/work/LearningLab/LearningLab/.git/
2025-05-20T19:53:56.9018975Z [command]/usr/bin/git remote add origin https://github.com/Baragji/LearningLab
2025-05-20T19:53:56.9052248Z ##[endgroup]
2025-05-20T19:53:56.9052937Z ##[group]Disabling automatic garbage collection
2025-05-20T19:53:56.9055815Z [command]/usr/bin/git config --local gc.auto 0
2025-05-20T19:53:56.9083126Z ##[endgroup]
2025-05-20T19:53:56.9083852Z ##[group]Setting up auth
2025-05-20T19:53:56.9089484Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-05-20T19:53:56.9118047Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-05-20T19:53:56.9367375Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-05-20T19:53:56.9398128Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-05-20T19:53:56.9615303Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-05-20T19:53:56.9657051Z ##[endgroup]
2025-05-20T19:53:56.9658265Z ##[group]Fetching the repository
2025-05-20T19:53:56.9666754Z [command]/usr/bin/git -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
2025-05-20T19:53:58.3204867Z From https://github.com/Baragji/LearningLab
2025-05-20T19:53:58.3206966Z  * [new branch]      MainOld2               -> origin/MainOld2
2025-05-20T19:53:58.3208823Z  * [new branch]      UltBlue0.1             -> origin/UltBlue0.1
2025-05-20T19:53:58.3210579Z  * [new branch]      main                   -> origin/main
2025-05-20T19:53:58.3212260Z  * [new tag]         v1.0.0-initial-working -> v1.0.0-initial-working
2025-05-20T19:53:58.3244605Z [command]/usr/bin/git branch --list --remote origin/main
2025-05-20T19:53:58.3267843Z   origin/main
2025-05-20T19:53:58.3276297Z [command]/usr/bin/git rev-parse refs/remotes/origin/main
2025-05-20T19:53:58.3296491Z b31e0e759f549115dbb824d622a70299b1338a2c
2025-05-20T19:53:58.3302606Z ##[endgroup]
2025-05-20T19:53:58.3304364Z ##[group]Determining the checkout info
2025-05-20T19:53:58.3306290Z ##[endgroup]
2025-05-20T19:53:58.3307465Z [command]/usr/bin/git sparse-checkout disable
2025-05-20T19:53:58.3343146Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-05-20T19:53:58.3368719Z ##[group]Checking out the ref
2025-05-20T19:53:58.3371204Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-05-20T19:53:58.3683605Z Switched to a new branch 'main'
2025-05-20T19:53:58.3685271Z branch 'main' set up to track 'origin/main'.
2025-05-20T19:53:58.3696930Z ##[endgroup]
2025-05-20T19:53:58.3732011Z [command]/usr/bin/git log -1 --format=%H
2025-05-20T19:53:58.3753631Z b31e0e759f549115dbb824d622a70299b1338a2c
2025-05-20T19:53:58.4049543Z ##[group]Run actions/setup-node@v4
2025-05-20T19:53:58.4050680Z with:
2025-05-20T19:53:58.4051633Z   node-version: 22
2025-05-20T19:53:58.4052513Z   cache: yarn
2025-05-20T19:53:58.4053471Z   always-auth: false
2025-05-20T19:53:58.4054501Z   check-latest: false
2025-05-20T19:53:58.4055658Z   token: ***
2025-05-20T19:53:58.4056463Z env:
2025-05-20T19:53:58.4057409Z   NEXT_PUBLIC_API_URL: http://localhost:5002/api
2025-05-20T19:53:58.4058708Z   DATABASE_URL: 
2025-05-20T19:53:58.4059565Z   JWT_SECRET: 
2025-05-20T19:53:58.4060415Z   JWT_EXPIRES_IN: 15m
2025-05-20T19:53:58.4061498Z   SALT_ROUNDS: 10
2025-05-20T19:53:58.4062356Z ##[endgroup]
2025-05-20T19:53:58.5778904Z Found in cache @ /opt/hostedtoolcache/node/22.15.0/x64
2025-05-20T19:53:58.5785469Z ##[group]Environment details
2025-05-20T19:54:01.1463545Z node: v22.15.0
2025-05-20T19:54:01.1466244Z npm: 10.9.2
2025-05-20T19:54:01.1466599Z yarn: 4.9.1
2025-05-20T19:54:01.1467765Z ##[endgroup]
2025-05-20T19:54:01.1489712Z [command]/usr/local/bin/yarn --version
2025-05-20T19:54:01.4725908Z 4.9.1
2025-05-20T19:54:01.4963412Z [command]/usr/local/bin/yarn config get cacheFolder
2025-05-20T19:54:01.8233494Z /home/runner/.yarn/berry/cache
2025-05-20T19:54:01.8541903Z [command]/usr/local/bin/yarn config get enableGlobalCache
2025-05-20T19:54:02.1798390Z [33mtrue[39m
2025-05-20T19:54:02.2656292Z yarn cache is not found
2025-05-20T19:54:02.2769327Z ##[group]Run corepack enable
2025-05-20T19:54:02.2769648Z [36;1mcorepack enable[0m
2025-05-20T19:54:02.2926573Z shell: /usr/bin/bash -e {0}
2025-05-20T19:54:02.2926857Z env:
2025-05-20T19:54:02.2927134Z   NEXT_PUBLIC_API_URL: http://localhost:5002/api
2025-05-20T19:54:02.2927439Z   DATABASE_URL: 
2025-05-20T19:54:02.2927613Z   JWT_SECRET: 
2025-05-20T19:54:02.2927781Z   JWT_EXPIRES_IN: 15m
2025-05-20T19:54:02.2927997Z   SALT_ROUNDS: 10
2025-05-20T19:54:02.2928171Z ##[endgroup]
2025-05-20T19:54:02.4046359Z ##[group]Run yarn install --immutable
2025-05-20T19:54:02.4046688Z [36;1myarn install --immutable[0m
2025-05-20T19:54:02.4101639Z shell: /usr/bin/bash -e {0}
2025-05-20T19:54:02.4101910Z env:
2025-05-20T19:54:02.4102143Z   NEXT_PUBLIC_API_URL: http://localhost:5002/api
2025-05-20T19:54:02.4102442Z   DATABASE_URL: 
2025-05-20T19:54:02.4102620Z   JWT_SECRET: 
2025-05-20T19:54:02.4102791Z   JWT_EXPIRES_IN: 15m
2025-05-20T19:54:02.4103033Z   SALT_ROUNDS: 10
2025-05-20T19:54:02.4103261Z ##[endgroup]
2025-05-20T19:54:02.5169162Z ! Corepack is about to download https://repo.yarnpkg.com/4.9.1/packages/yarnpkg-cli/bin/yarn.js
2025-05-20T19:54:03.3725488Z [94mâž¤[39m YN0000: Â· Yarn 4.9.1
2025-05-20T19:54:03.3883833Z [94mâž¤[39m [90mYN0000[39m: â”Œ Resolution step
2025-05-20T19:54:03.3885145Z ##[group]Resolution step
2025-05-20T19:54:03.6799479Z ##[endgroup]
2025-05-20T19:54:03.6801945Z [94mâž¤[39m [90mYN0000[39m: â”” Completed in 0s 291ms
2025-05-20T19:54:03.7200262Z [94mâž¤[39m [90mYN0000[39m: â”Œ Fetch step
2025-05-20T19:54:03.7201637Z ##[group]Fetch step
2025-05-20T19:54:11.1156804Z [94mâž¤[39m YN0013: â”‚ [38;5;220m1088[39m packages were added to the project ([38;5;160m+ 594.72 MiB[39m).
2025-05-20T19:54:11.1158119Z ##[endgroup]
2025-05-20T19:54:11.1159107Z [94mâž¤[39m [90mYN0000[39m: â”” Completed in 7s 396ms
2025-05-20T19:54:11.1551894Z [94mâž¤[39m [90mYN0000[39m: â”Œ Link step
2025-05-20T19:54:11.1552503Z ##[group]Link step
2025-05-20T19:54:17.2871638Z [94mâž¤[39m YN0007: â”‚ [38;5;173mturbo[39m[38;5;111m@[39m[38;5;111mnpm:1.10.12[39m must be built because it never has been before or the last one failed
2025-05-20T19:54:17.2879145Z [94mâž¤[39m YN0007: â”‚ [38;5;166m@nestjs/[39m[38;5;173mcore[39m[38;5;111m@[39m[38;5;111mnpm:10.4.17 [62573][39m must be built because it never has been before or the last one failed
2025-05-20T19:54:17.2881765Z [94mâž¤[39m YN0007: â”‚ [38;5;166m@prisma/[39m[38;5;173mengines[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0[39m must be built because it never has been before or the last one failed
2025-05-20T19:54:17.2884440Z [94mâž¤[39m YN0007: â”‚ [38;5;166m@swc/[39m[38;5;173mcore[39m[38;5;111m@[39m[38;5;111mnpm:1.11.24 [62573][39m must be built because it never has been before or the last one failed
2025-05-20T19:54:17.2886748Z [94mâž¤[39m YN0007: â”‚ [38;5;166m@scarf/[39m[38;5;173mscarf[39m[38;5;111m@[39m[38;5;111mnpm:1.4.0[39m must be built because it never has been before or the last one failed
2025-05-20T19:54:17.2888833Z [94mâž¤[39m YN0007: â”‚ [38;5;173munrs-resolver[39m[38;5;111m@[39m[38;5;111mnpm:1.7.2[39m must be built because it never has been before or the last one failed
2025-05-20T19:54:20.2761973Z [94mâž¤[39m YN0007: â”‚ [38;5;173mprisma[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0[39m must be built because it never has been before or the last one failed
2025-05-20T19:54:20.3487257Z [94mâž¤[39m YN0007: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m must be built because it never has been before or the last one failed
2025-05-20T19:54:20.7833172Z [94mâž¤[39m [90mYN0000[39m: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m [32mSTDOUT[39m Prisma schema loaded from prisma/schema.prisma
2025-05-20T19:54:21.0285630Z [94mâž¤[39m [90mYN0000[39m: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m [32mSTDOUT[39m 
2025-05-20T19:54:21.0287992Z [94mâž¤[39m [90mYN0000[39m: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m [32mSTDOUT[39m âœ” Generated Prisma Client (v5.22.0) to ./node_modules/@prisma/client in 43ms
2025-05-20T19:54:21.0289820Z [94mâž¤[39m [90mYN0000[39m: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m [32mSTDOUT[39m 
2025-05-20T19:54:21.0292827Z [94mâž¤[39m [90mYN0000[39m: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m [32mSTDOUT[39m Start by importing your Prisma Client (See: https://pris.ly/d/importing-client)
2025-05-20T19:54:21.0295329Z [94mâž¤[39m [90mYN0000[39m: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m [32mSTDOUT[39m 
2025-05-20T19:54:21.0297005Z [94mâž¤[39m [90mYN0000[39m: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m [32mSTDOUT[39m Tip: Want real-time updates to your database without manual polling? Discover how with Pulse: https://pris.ly/tip-0-pulse
2025-05-20T19:54:21.0298272Z [94mâž¤[39m [90mYN0000[39m: â”‚ [38;5;166m@prisma/[39m[38;5;173mclient[39m[38;5;111m@[39m[38;5;111mnpm:5.22.0 [62573][39m [32mSTDOUT[39m 
2025-05-20T19:54:21.2285831Z ##[endgroup]
2025-05-20T19:54:21.2288219Z [94mâž¤[39m [90mYN0000[39m: â”” Completed in 10s 73ms
2025-05-20T19:54:21.3103164Z [94mâž¤[39m YN0000: Â· Done in 17s 939ms
2025-05-20T19:54:21.5252378Z ##[group]Run yarn turbo run build
2025-05-20T19:54:21.5252679Z [36;1myarn turbo run build[0m
2025-05-20T19:54:21.5305974Z shell: /usr/bin/bash -e {0}
2025-05-20T19:54:21.5306204Z env:
2025-05-20T19:54:21.5306424Z   NEXT_PUBLIC_API_URL: http://localhost:5002/api
2025-05-20T19:54:21.5306707Z   DATABASE_URL: 
2025-05-20T19:54:21.5306876Z   JWT_SECRET: 
2025-05-20T19:54:21.5307047Z   JWT_EXPIRES_IN: 15m
2025-05-20T19:54:21.5307225Z   SALT_ROUNDS: 10
2025-05-20T19:54:21.5307399Z ##[endgroup]
2025-05-20T19:54:22.5964919Z â€¢ Packages in scope: @repo/config, @repo/core, api, tsconfig, ui, web
2025-05-20T19:54:22.5965745Z â€¢ Running build in 6 packages
2025-05-20T19:54:22.5966309Z â€¢ Remote caching disabled
2025-05-20T19:54:25.1815767Z ##[group]@repo/core:build
2025-05-20T19:54:25.1816488Z cache miss, executing 743459ae7f55abc9
2025-05-20T19:54:25.1817188Z ##[endgroup]
2025-05-20T19:54:25.5044930Z ##[group]@repo/config:build
2025-05-20T19:54:25.5047188Z cache miss, executing cc4f82b213692e6b
2025-05-20T19:54:25.5048231Z ##[endgroup]
2025-05-20T19:54:30.5172587Z ##[group]api:build
2025-05-20T19:54:30.5197755Z ##[error]api#build: command (/home/runner/work/LearningLab/LearningLab/apps/api) yarn run build exited (1)
2025-05-20T19:54:30.5207623Z cache miss, executing f3d511ba0f813380
2025-05-20T19:54:30.5208251Z  ERROR  run failed: command  exited (1)
2025-05-20T19:54:30.5209792Z [96msrc/app.module.ts[0m:[93m13[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/config' or its corresponding type declarations.
2025-05-20T19:54:30.5210530Z 
2025-05-20T19:54:30.5211582Z [7m13[0m } from '@repo/config';
2025-05-20T19:54:30.5212152Z [7m  [0m [91m       ~~~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5213530Z [96msrc/auth/auth.controller.ts[0m:[93m16[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/core' or its corresponding type declarations.
2025-05-20T19:54:30.5214379Z 
2025-05-20T19:54:30.5215105Z [7m16[0m import { User as CoreUser } from '@repo/core'; // Importer CoreUser fra @repo/core
2025-05-20T19:54:30.5216035Z [7m  [0m [91m                                 ~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5217544Z [96msrc/auth/auth.service.ts[0m:[93m16[0m:[93m52[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/core' or its corresponding type declarations.
2025-05-20T19:54:30.5218361Z 
2025-05-20T19:54:30.5218900Z [7m16[0m import { User as CoreUser, Role as CoreRole } from '@repo/core';
2025-05-20T19:54:30.5219788Z [7m  [0m [91m                                                   ~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5221554Z [96msrc/auth/strategies/jwt/jwt.ts[0m:[93m8[0m:[93m52[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/core' or its corresponding type declarations.
2025-05-20T19:54:30.5222432Z 
2025-05-20T19:54:30.5222952Z [7m8[0m import { User as CoreUser, Role as CoreRole } from '@repo/core';
2025-05-20T19:54:30.5223794Z [7m [0m [91m                                                   ~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5225420Z [96msrc/auth/strategies/local/local.ts[0m:[93m7[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/core' or its corresponding type declarations.
2025-05-20T19:54:30.5226318Z 
2025-05-20T19:54:30.5226734Z [7m7[0m import { User as CoreUser } from '@repo/core';
2025-05-20T19:54:30.5227464Z [7m [0m [91m                                 ~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5229053Z [96msrc/users/dto/create-user.dto.ts[0m:[93m10[0m:[93m22[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/core' or its corresponding type declarations.
2025-05-20T19:54:30.5229940Z 
2025-05-20T19:54:30.5230518Z [7m10[0m import { Role } from '@repo/core'; // Importer Role enum fra @repo/core
2025-05-20T19:54:30.5231456Z [7m  [0m [91m                     ~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5233288Z [96msrc/users/users.controller.ts[0m:[93m14[0m:[93m34[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/core' or its corresponding type declarations.
2025-05-20T19:54:30.5234056Z 
2025-05-20T19:54:30.5234346Z [7m14[0m import { User as CoreUser } from '@repo/core';
2025-05-20T19:54:30.5234782Z [7m  [0m [91m                                 ~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5235648Z [96msrc/users/users.service.ts[0m:[93m16[0m:[93m52[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/core' or its corresponding type declarations.
2025-05-20T19:54:30.5236138Z 
2025-05-20T19:54:30.5236453Z [7m16[0m import { User as CoreUser, Role as CoreRole } from '@repo/core';
2025-05-20T19:54:30.5236956Z [7m  [0m [91m                                                   ~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5237816Z [96msrc/users/users.service.ts[0m:[93m17[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module '@repo/config' or its corresponding type declarations.
2025-05-20T19:54:30.5238305Z 
2025-05-20T19:54:30.5238526Z [7m17[0m import { ServerEnv } from '@repo/config';
2025-05-20T19:54:30.5239135Z [7m  [0m [91m                          ~~~~~~~~~~~~~~[0m
2025-05-20T19:54:30.5239320Z 
2025-05-20T19:54:30.5239484Z Found 9 error(s).
2025-05-20T19:54:30.5239604Z 
2025-05-20T19:54:30.5240261Z [ERROR] command finished with error: command (/home/runner/work/LearningLab/LearningLab/apps/api) yarn run build exited (1)
2025-05-20T19:54:30.5241273Z ##[endgroup]
2025-05-20T19:54:30.5241686Z ##[group]web:build
2025-05-20T19:54:30.5242097Z cache miss, executing f04696cab63e23ea
2025-05-20T19:54:30.5242949Z - warn No build cache found. Please configure build caching for faster rebuilds. Read more: https://nextjs.org/docs/messages/no-cache
2025-05-20T19:54:30.5244150Z Attention: Next.js now collects completely anonymous telemetry regarding usage.
2025-05-20T19:54:30.5244920Z This information is used to shape Next.js' roadmap and prioritize features.
2025-05-20T19:54:30.5245751Z You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:
2025-05-20T19:54:30.5246510Z https://nextjs.org/telemetry
2025-05-20T19:54:30.5246779Z 
2025-05-20T19:54:30.5247078Z - info Linting and checking validity of types...
2025-05-20T19:54:30.5247492Z ##[endgroup]
2025-05-20T19:54:30.5247599Z 
2025-05-20T19:54:30.5247710Z  Tasks:    2 successful, 4 total
2025-05-20T19:54:30.5247948Z Cached:    0 cached, 4 total
2025-05-20T19:54:30.5248163Z   Time:    8.012s 
2025-05-20T19:54:30.5248360Z Failed:    api#build
2025-05-20T19:54:30.5248496Z 
2025-05-20T19:54:30.5403986Z ##[error]Process completed with exit code 1.
2025-05-20T19:54:30.5496992Z Post job cleanup.
2025-05-20T19:54:30.6429717Z [command]/usr/bin/git version
2025-05-20T19:54:30.6465839Z git version 2.49.0
2025-05-20T19:54:30.6509215Z Temporarily overriding HOME='/home/runner/work/_temp/e3313180-ab40-4dea-aa73-67768d27ced6' before making global git config changes
2025-05-20T19:54:30.6510676Z Adding repository directory to the temporary git global config as a safe directory
2025-05-20T19:54:30.6515835Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/LearningLab/LearningLab
2025-05-20T19:54:30.6551812Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-05-20T19:54:30.6584502Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-05-20T19:54:30.6806265Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-05-20T19:54:30.6827522Z http.https://github.com/.extraheader
2025-05-20T19:54:30.6839614Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-05-20T19:54:30.6870174Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-05-20T19:54:30.7192510Z Cleaning up orphan processes
</file>

<file path="milesten.txt">
Codebase
Milesten 3: Etablering af Kerne-Pakker & Generisk Datamodel Fundament

Mål: Oprette og strukturere de delte packages og definere de centrale, generiske datamodeller for platformens indhold.

Status: Ikke påbegyndt.

Opgaver:

Oprettelse/Strukturering af packages/core:

Opgave: Initialiser pakken. Flyt/definer fælles TypeScript interfaces/typer/enums (f.eks. User, Role). Prisma-specifikke decorators hører til i Prisma schema, ikke her.

Filer: packages/core/package.json, packages/core/tsconfig.json, packages/core/src/types/user.types.ts, packages/core/src/index.ts.

Oprettelse/Strukturering af packages/config:

Opgave: Initialiser pakken. Færdiggør centraliseret håndtering af miljøvariabler med Zod-validering.

Filer: packages/config/package.json, packages/config/tsconfig.json, packages/config/src/env.ts, packages/config/src/index.ts.

Refaktorering af apps/api og apps/web til at bruge packages/core og packages/config.

Definition af Generiske Pensum Datamodeller (apps/api/prisma/schema.prisma og packages/core/src/types):

Opgave: Design og implementer Prisma-modeller for:

Course (title, description, slug, subjectAreaId (til at linke til et "fagligt script"/kontekst)).

SubjectArea (eller ContentContext) (name, slug - f.eks. "template-arabic", "lab-tech").

Module (title, description, order, courseId).

Lesson (title, description, order, moduleId).

ContentBlock (type: TEXT, IMAGE_URL, VIDEO_URL, QUIZ_REF; content: string; order; lessonId).

Opgave: Definer tilsvarende TypeScript-typer i packages/core/src/types/pensum.types.ts (eller lignende).

Opgave: Kør Prisma migration.

Definition af Generiske Quiz Datamodeller (apps/api/prisma/schema.prisma og packages/core/src/types):

Opgave: Design og implementer Prisma-modeller for:

Quiz (title, description, lessonId? eller moduleId?).

Question (text, type: MULTIPLE_CHOICE, FILL_IN_BLANK, MATCHING; quizId).

AnswerOption (text, isCorrect, questionId).

UserProgress (userId, lessonId (status: COMPLETED), quizId (score, quizAttemptId)).

QuizAttempt (userId, quizId, score, startedAt, completedAt).

UserAnswer (quizAttemptId, questionId, selectedAnswerOptionId?, inputText?).

Opgave: Definer tilsvarende TypeScript-typer i packages/core/src/types/quiz.types.ts (eller lignende).

Opgave: Kør Prisma migration.




/code kan du leverer en komplet implementering af milesten 3? 1 fil ad gangen, så tester vi om den virker, så næste fil
Coding Agent
Jeg vil hjælpe dig med at implementere milesten 3 en fil ad gangen. Lad os først få et overblik over projektets struktur for at forstå, hvordan vi bedst kan implementere de nødvendige filer.

zsh
ls -la /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab
Lad os undersøge strukturen af apps og packages for at forstå, hvad vi har at arbejde med:

zsh
ls -la /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/apps
zsh
ls -la /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/packages
Lad os også tjekke Prisma-skemaet for at forstå den nuværende datamodel:

zsh
ls -la /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/apps/api/prisma
Lad os også tjekke de eksisterende pakker for at forstå, hvad vi skal bygge videre på:

Nu har jeg et godt overblik over projektet. Lad os starte med at implementere milesten 3 en fil ad gangen. Vi begynder med at oprette de nødvendige filer i packages/core.

Først skal vi oprette/opdatere packages/core/tsconfig.json:

Lad os nu oprette user.types.ts i packages/core:

Lad os tjekke om mappen eksisterer og hvad den indeholder:

zsh
mkdir -p /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/packages/core/src/types
zsh
ls -la /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/packages/core/src/types
Lad os se indholdet af den eksisterende user.types.ts fil:

Lad os nu oprette pensum.types.ts i packages/core:

+/**
+ * Core pensum types for the LearningLab platform
+ */
+
+/**
+ * Represents a subject area or content context
+ */
+export interface SubjectArea {
+  id: number;
+  name: string;
+  slug: string; // f.eks. "template-arabic", "lab-tech"
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Represents a course within a subject area
+ */
+export interface Course {
+  id: number;
+  title: string;
+  description: string;
+  slug: string;
+  subjectAreaId: number;
+  subjectArea?: SubjectArea;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Represents a module within a course
+ */
+export interface Module {
+  id: number;
+  title: string;
+  description: string;
+  order: number;
+  courseId: number;
+  course?: Course;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Represents a lesson within a module
+ */
+export interface Lesson {
+  id: number;
+  title: string;
+  description: string;
+  order: number;
+  moduleId: number;
+  module?: Module;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Content block types
+ */
+export enum ContentBlockType {
+  TEXT = "TEXT",
+  IMAGE_URL = "IMAGE_URL",
+  VIDEO_URL = "VIDEO_URL",
+  QUIZ_REF = "QUIZ_REF"
+}
+
+/**
+ * Represents a content block within a lesson
+ */
+export interface ContentBlock {
+  id: number;
+  type: ContentBlockType;
+  content: string;
+  order: number;
+  lessonId: number;
+  lesson?: Lesson;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Input for creating a new subject area
+ */
+export interface CreateSubjectAreaInput {
+  name: string;
+  slug: string;
+}
+
+/**
+ * Input for creating a new course
+ */
+export interface CreateCourseInput {
+  title: string;
+  description: string;
+  slug: string;
+  subjectAreaId: number;
+}
+
+/**
+ * Input for creating a new module
+ */
+export interface CreateModuleInput {
+  title: string;
+  description: string;
+  order: number;
+  courseId: number;
+}
+
+/**
+ * Input for creating a new lesson
+ */
+export interface CreateLessonInput {
+  title: string;
+  description: string;
+  order: number;
+  moduleId: number;
+}
+
+/**
+ * Input for creating a new content block
+ */
+export interface CreateContentBlockInput {
+  type: ContentBlockType;
+  content: string;
+  order: number;
+  lessonId: number;
+}
Nu opretter vi quiz.types.ts i packages/core:

+/**
+ * Core quiz types for the LearningLab platform
+ */
+
+/**
+ * Question types
+ */
+export enum QuestionType {
+  MULTIPLE_CHOICE = "MULTIPLE_CHOICE",
+  FILL_IN_BLANK = "FILL_IN_BLANK",
+  MATCHING = "MATCHING"
+}
+
+/**
+ * User progress status
+ */
+export enum ProgressStatus {
+  NOT_STARTED = "NOT_STARTED",
+  IN_PROGRESS = "IN_PROGRESS",
+  COMPLETED = "COMPLETED"
+}
+
+/**
+ * Represents a quiz
+ */
+export interface Quiz {
+  id: number;
+  title: string;
+  description: string;
+  lessonId?: number | null;
+  moduleId?: number | null;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Represents a question within a quiz
+ */
+export interface Question {
+  id: number;
+  text: string;
+  type: QuestionType;
+  quizId: number;
+  quiz?: Quiz;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Represents an answer option for a question
+ */
+export interface AnswerOption {
+  id: number;
+  text: string;
+  isCorrect: boolean;
+  questionId: number;
+  question?: Question;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Represents a quiz attempt by a user
+ */
+export interface QuizAttempt {
+  id: number;
+  userId: number;
+  quizId: number;
+  score: number;
+  startedAt: Date;
+  completedAt?: Date | null;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Represents a user's answer to a question
+ */
+export interface UserAnswer {
+  id: number;
+  quizAttemptId: number;
+  questionId: number;
+  selectedAnswerOptionId?: number | null;
+  inputText?: string | null;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Represents a user's progress in lessons and quizzes
+ */
+export interface UserProgress {
+  id: number;
+  userId: number;
+  lessonId?: number | null;
+  quizId?: number | null;
+  status: ProgressStatus;
+  score?: number | null;
+  quizAttemptId?: number | null;
+  createdAt: Date;
+  updatedAt: Date;
+}
+
+/**
+ * Input for creating a new quiz
+ */
+export interface CreateQuizInput {
+  title: string;
+  description: string;
+  lessonId?: number;
+  moduleId?: number;
+}
+
+/**
+ * Input for creating a new question
+ */
+export interface CreateQuestionInput {
+  text: string;
+  type: QuestionType;
+  quizId: number;
+  answerOptions?: CreateAnswerOptionInput[];
+}
+
+/**
+ * Input for creating a new answer option
+ */
+export interface CreateAnswerOptionInput {
+  text: string;
+  isCorrect: boolean;
+  questionId?: number;
+}
+
+/**
+ * Input for starting a quiz attempt
+ */
+export interface StartQuizAttemptInput {
+  quizId: number;
+}
+
+/**
+ * Input for submitting an answer
+ */
+export interface SubmitAnswerInput {
+  quizAttemptId: number;
+  questionId: number;
+  selectedAnswerOptionId?: number;
+  inputText?: string;
+}
+
+/**
+ * Input for completing a quiz attempt
+ */
+export interface CompleteQuizAttemptInput {
+  quizAttemptId: number;
+}
Nu skal vi opdatere index.ts i packages/core for at eksportere vores typer:

Lad os opdatere index.ts:

  * bør eksporteres herfra, så de nemt kan importeres i andre pakker (apps/web, apps/api, etc.).
  */
 
+// User types
 export * from './types/user.types';
-// Tilføj andre eksports her efterhånden som pakken vokser, f.eks.:
-// export * from './types/course.types';
-// export * from './utils/formatter.utils';
+
+// Pensum types
+export * from './types/pensum.types';
+
+// Quiz types
+export * from './types/quiz.types';
Nu skal vi tjekke packages/config og oprette/opdatere env.ts:

Nu skal vi opdatere Prisma-skemaet for at tilføje de nye modeller. Lad os oprette en ny version af schema.prisma:

   url      = env("DATABASE_URL")
 }
 
+// User models
 model User {
-  id           Int      @id @default(autoincrement())
-  email        String   @unique
-  passwordHash String
-  name         String?
-  role         Role     @default(USER)
-  createdAt    DateTime @default(now())
-  updatedAt    DateTime @updatedAt
-
-  // Nye felter til password reset
-  passwordResetToken   String?   @unique // Gør tokenet unikt for at kunne slå det op
+  id                  Int            @id @default(autoincrement())
+  email               String         @unique
+  passwordHash        String
+  name                String?
+  role                Role           @default(USER)
+  createdAt           DateTime       @default(now())
+  updatedAt           DateTime       @updatedAt
+  passwordResetToken  String?        @unique
   passwordResetExpires DateTime?
+  
+  // Relations
+  progress            UserProgress[]
+  quizAttempts        QuizAttempt[]
 }
 
 enum Role {
   USER
   ADMIN
 }
+
+// Pensum models
+model SubjectArea {
+  id        Int      @id @default(autoincrement())
+  name      String
+  slug      String   @unique
+  createdAt DateTime @default(now())
+  updatedAt DateTime @updatedAt
+  
+  // Relations
+  courses   Course[]
+}
+
+model Course {
+  id            Int      @id @default(autoincrement())
+  title         String
+  description   String
+  slug          String   @unique
+  subjectAreaId Int
+  createdAt     DateTime @default(now())
+  updatedAt     DateTime @updatedAt
+  
+  // Relations
+  subjectArea   SubjectArea @relation(fields: [subjectAreaId], references: [id])
+  modules       Module[]
+}
+
+model Module {
+  id          Int      @id @default(autoincrement())
+  title       String
+  description String
+  order       Int
+  courseId    Int
+  createdAt   DateTime @default(now())
+  updatedAt   DateTime @updatedAt
+  
+  // Relations
+  course      Course    @relation(fields: [courseId], references: [id])
+  lessons     Lesson[]
+  quizzes     Quiz[]    @relation("ModuleQuizzes")
+}
+
+model Lesson {
+  id          Int      @id @default(autoincrement())
+  title       String
+  description String
+  order       Int
+  moduleId    Int
+  createdAt   DateTime @default(now())
+  updatedAt   DateTime @updatedAt
+  
+  // Relations
+  module        Module         @relation(fields: [moduleId], references: [id])
+  contentBlocks ContentBlock[]
+  quizzes       Quiz[]         @relation("LessonQuizzes")
+  userProgress  UserProgress[] @relation("LessonProgress")
+}
+
+enum ContentBlockType {
+  TEXT
+  IMAGE_URL
+  VIDEO_URL
+  QUIZ_REF
+}
+
+model ContentBlock {
+  id        Int              @id @default(autoincrement())
+  type      ContentBlockType
+  content   String
+  order     Int
+  lessonId  Int
+  createdAt DateTime         @default(now())
+  updatedAt DateTime         @updatedAt
+  
+  // Relations
+  lesson    Lesson           @relation(fields: [lessonId], references: [id])
+}
+
+// Quiz models
+enum QuestionType {
+  MULTIPLE_CHOICE
+  FILL_IN_BLANK
+  MATCHING
+}
+
+enum ProgressStatus {
+  NOT_STARTED
+  IN_PROGRESS
+  COMPLETED
+}
+
+model Quiz {
+  id          Int      @id @default(autoincrement())
+  title       String
+  description String
+  lessonId    Int?
+  moduleId    Int?
+  createdAt   DateTime @default(now())
+  updatedAt   DateTime @updatedAt
+  
+  // Relations
+  lesson        Lesson?         @relation("LessonQuizzes", fields: [lessonId], references: [id])
+  module        Module?         @relation("ModuleQuizzes", fields: [moduleId], references: [id])
+  questions     Question[]
+  attempts      QuizAttempt[]
+  userProgress  UserProgress[]  @relation("QuizProgress")
+}
+
+model Question {
+  id        Int           @id @default(autoincrement())
+  text      String
+  type      QuestionType
+  quizId    Int
+  createdAt DateTime      @default(now())
+  updatedAt DateTime      @updatedAt
+  
+  // Relations
+  quiz          Quiz           @relation(fields: [quizId], references: [id])
+  answerOptions AnswerOption[]
+  userAnswers   UserAnswer[]
+}
+
+model AnswerOption {
+  id         Int      @id @default(autoincrement())
+  text       String
+  isCorrect  Boolean
+  questionId Int
+  createdAt  DateTime @default(now())
+  updatedAt  DateTime @updatedAt
+  
+  // Relations
+  question    Question     @relation(fields: [questionId], references: [id])
+  userAnswers UserAnswer[]
+}
+
+model QuizAttempt {
+  id          Int       @id @default(autoincrement())
+  userId      Int
+  quizId      Int
+  score       Int       @default(0)
+  startedAt   DateTime  @default(now())
+  completedAt DateTime?
+  createdAt   DateTime  @default(now())
+  updatedAt   DateTime  @updatedAt
+  
+  // Relations
+  user        User        @relation(fields: [userId], references: [id])
+  quiz        Quiz        @relation(fields: [quizId], references: [id])
+  userAnswers UserAnswer[]
+  progress    UserProgress[]
+}
+
+model UserAnswer {
+  id                   Int       @id @default(autoincrement())
+  quizAttemptId        Int
+  questionId           Int
+  selectedAnswerOptionId Int?
+  inputText            String?
+  createdAt            DateTime  @default(now())
+  updatedAt            DateTime  @updatedAt
+  
+  // Relations
+  quizAttempt          QuizAttempt   @relation(fields: [quizAttemptId], references: [id])
+  question             Question      @relation(fields: [questionId], references: [id])
+  selectedAnswerOption AnswerOption? @relation(fields: [selectedAnswerOptionId], references: [id])
+}
+
+model UserProgress {
+  id            Int            @id @default(autoincrement())
+  userId        Int
+  lessonId      Int?
+  quizId        Int?
+  status        ProgressStatus @default(NOT_STARTED)
+  score         Int?
+  quizAttemptId Int?
+  createdAt     DateTime       @default(now())
+  updatedAt     DateTime       @updatedAt
+  
+  // Relations
+  user          User          @relation(fields: [userId], references: [id])
+  lesson        Lesson?       @relation("LessonProgress", fields: [lessonId], references: [id])
+  quiz          Quiz?         @relation("QuizProgress", fields: [quizId], references: [id])
+  quizAttempt   QuizAttempt?  @relation(fields: [quizAttemptId], references: [id])
+}
Nu skal vi køre Prisma migration for at opdatere databasen:

zsh
cd /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/apps/api && npx prisma migrate dev --name add_pensum_and_quiz_models
ybaragji@gmail.com, 16m ago
Your database is now in sync with your schema.

✔ Generated Prisma Client (v5.22.0) to ./../../node_modules

/@prisma/client in 125ms

Yousef@MacBook-Pro-tilhrende-Yousef api %

Coding Agent
Fantastisk! Databasen er nu synkroniseret med vores nye schema. Lad os fortsætte med implementeringen af milesten 3.

Nu skal vi oprette nogle API-endpoints for at arbejde med vores nye modeller. Lad os starte med at oprette controllers og routes for pensum-relaterede funktioner.

Først skal vi oprette en controller for SubjectArea:

+// apps/api/src/controllers/subjectArea.controller.ts
+
+import { Request, Response } from 'express';
+import { PrismaClient } from '@prisma/client';
+import { CreateSubjectAreaInput } from '@repo/core';
+
+const prisma = new PrismaClient();
+
+/**
+ * Henter alle fagområder
+ */
+export const getAllSubjectAreas = async (req: Request, res: Response): Promise<void> => {
+  try {
+    const subjectAreas = await prisma.subjectArea.findMany({
+      orderBy: { name: 'asc' }
+    });
+    
+    res.status(200).json(subjectAreas);
+  } catch (error) {
+    console.error('Fejl ved hentning af fagområder:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af fagområder' });
+  }
+};
+
+/**
+ * Henter et specifikt fagområde ud fra ID
+ */
+export const getSubjectAreaById = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    const subjectArea = await prisma.subjectArea.findUnique({
+      where: { id: Number(id) },
+      include: { courses: true }
+    });
+    
+    if (!subjectArea) {
+      res.status(404).json({ message: 'Fagområdet blev ikke fundet' });
+      return;
+    }
+    
+    res.status(200).json(subjectArea);
+  } catch (error) {
+    console.error(`Fejl ved hentning af fagområde med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af fagområdet' });
+  }
+};
+
+/**
+ * Henter et specifikt fagområde ud fra slug
+ */
+export const getSubjectAreaBySlug = async (req: Request, res: Response): Promise<void> => {
+  const { slug } = req.params;
+  
+  try {
+    const subjectArea = await prisma.subjectArea.findUnique({
+      where: { slug },
+      include: { courses: true }
+    });
+    
+    if (!subjectArea) {
+      res.status(404).json({ message: 'Fagområdet blev ikke fundet' });
+      return;
+    }
+    
+    res.status(200).json(subjectArea);
+  } catch (error) {
+    console.error(`Fejl ved hentning af fagområde med slug ${slug}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af fagområdet' });
+  }
+};
+
+/**
+ * Opretter et nyt fagområde
+ */
+export const createSubjectArea = async (req: Request, res: Response): Promise<void> => {
+  const { name, slug }: CreateSubjectAreaInput = req.body;
+  
+  try {
+    // Tjek om slug allerede eksisterer
+    const existingSubjectArea = await prisma.subjectArea.findUnique({
+      where: { slug }
+    });
+    
+    if (existingSubjectArea) {
+      res.status(400).json({ message: 'Et fagområde med dette slug eksisterer allerede' });
+      return;
+    }
+    
+    const newSubjectArea = await prisma.subjectArea.create({
+      data: {
+        name,
+        slug
+      }
+    });
+    
+    res.status(201).json(newSubjectArea);
+  } catch (error) {
+    console.error('Fejl ved oprettelse af fagområde:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved oprettelse af fagområdet' });
+  }
+};
+
+/**
+ * Opdaterer et eksisterende fagområde
+ */
+export const updateSubjectArea = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const { name, slug } = req.body;
+  
+  try {
+    // Tjek om fagområdet eksisterer
+    const existingSubjectArea = await prisma.subjectArea.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingSubjectArea) {
+      res.status(404).json({ message: 'Fagområdet blev ikke fundet' });
+      return;
+    }
+    
+    // Hvis slug ændres, tjek om det nye slug allerede er i brug
+    if (slug && slug !== existingSubjectArea.slug) {
+      const slugExists = await prisma.subjectArea.findUnique({
+        where: { slug }
+      });
+      
+      if (slugExists) {
+        res.status(400).json({ message: 'Et fagområde med dette slug eksisterer allerede' });
+        return;
+      }
+    }
+    
+    const updatedSubjectArea = await prisma.subjectArea.update({
+      where: { id: Number(id) },
+      data: {
+        name: name || existingSubjectArea.name,
+        slug: slug || existingSubjectArea.slug
+      }
+    });
+    
+    res.status(200).json(updatedSubjectArea);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af fagområde med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af fagområdet' });
+  }
+};
+
+/**
+ * Sletter et fagområde
+ */
+export const deleteSubjectArea = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    // Tjek om fagområdet eksisterer
+    const existingSubjectArea = await prisma.subjectArea.findUnique({
+      where: { id: Number(id) },
+      include: { courses: true }
+    });
+    
+    if (!existingSubjectArea) {
+      res.status(404).json({ message: 'Fagområdet blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om der er kurser tilknyttet fagområdet
+    if (existingSubjectArea.courses.length > 0) {
+      res.status(400).json({ 
+        message: 'Fagområdet kan ikke slettes, da der er kurser tilknyttet. Slet venligst kurserne først.' 
+      });
+      return;
+    }
+    
+    await prisma.subjectArea.delete({
+      where: { id: Number(id) }
+    });
+    
+    res.status(200).json({ message: 'Fagområdet blev slettet' });
+  } catch (error) {
+    console.error(`Fejl ved sletning af fagområde med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved sletning af fagområdet' });
+  }
+};
Nu skal vi oprette en controller for Course:

+// apps/api/src/controllers/course.controller.ts
+
+import { Request, Response } from 'express';
+import { PrismaClient } from '@prisma/client';
+import { CreateCourseInput } from '@repo/core';
+
+const prisma = new PrismaClient();
+
+/**
+ * Henter alle kurser
+ */
+export const getAllCourses = async (req: Request, res: Response): Promise<void> => {
+  try {
+    const courses = await prisma.course.findMany({
+      include: {
+        subjectArea: true
+      },
+      orderBy: { title: 'asc' }
+    });
+    
+    res.status(200).json(courses);
+  } catch (error) {
+    console.error('Fejl ved hentning af kurser:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af kurser' });
+  }
+};
+
+/**
+ * Henter kurser for et specifikt fagområde
+ */
+export const getCoursesBySubjectArea = async (req: Request, res: Response): Promise<void> => {
+  const { subjectAreaId } = req.params;
+  
+  try {
+    const courses = await prisma.course.findMany({
+      where: { subjectAreaId: Number(subjectAreaId) },
+      orderBy: { title: 'asc' }
+    });
+    
+    res.status(200).json(courses);
+  } catch (error) {
+    console.error(`Fejl ved hentning af kurser for fagområde ${subjectAreaId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af kurser' });
+  }
+};
+
+/**
+ * Henter et specifikt kursus ud fra ID
+ */
+export const getCourseById = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    const course = await prisma.course.findUnique({
+      where: { id: Number(id) },
+      include: {
+        subjectArea: true,
+        modules: {
+          orderBy: { order: 'asc' }
+        }
+      }
+    });
+    
+    if (!course) {
+      res.status(404).json({ message: 'Kurset blev ikke fundet' });
+      return;
+    }
+    
+    res.status(200).json(course);
+  } catch (error) {
+    console.error(`Fejl ved hentning af kursus med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af kurset' });
+  }
+};
+
+/**
+ * Henter et specifikt kursus ud fra slug
+ */
+export const getCourseBySlug = async (req: Request, res: Response): Promise<void> => {
+  const { slug } = req.params;
+  
+  try {
+    const course = await prisma.course.findUnique({
+      where: { slug },
+      include: {
+        subjectArea: true,
+        modules: {
+          orderBy: { order: 'asc' }
+        }
+      }
+    });
+    
+    if (!course) {
+      res.status(404).json({ message: 'Kurset blev ikke fundet' });
+      return;
+    }
+    
+    res.status(200).json(course);
+  } catch (error) {
+    console.error(`Fejl ved hentning af kursus med slug ${slug}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af kurset' });
+  }
+};
+
+/**
+ * Opretter et nyt kursus
+ */
+export const createCourse = async (req: Request, res: Response): Promise<void> => {
+  const { title, description, slug, subjectAreaId }: CreateCourseInput = req.body;
+  
+  try {
+    // Tjek om fagområdet eksisterer
+    const subjectArea = await prisma.subjectArea.findUnique({
+      where: { id: subjectAreaId }
+    });
+    
+    if (!subjectArea) {
+      res.status(404).json({ message: 'Det angivne fagområde findes ikke' });
+      return;
+    }
+    
+    // Tjek om slug allerede eksisterer
+    const existingCourse = await prisma.course.findUnique({
+      where: { slug }
+    });
+    
+    if (existingCourse) {
+      res.status(400).json({ message: 'Et kursus med dette slug eksisterer allerede' });
+      return;
+    }
+    
+    const newCourse = await prisma.course.create({
+      data: {
+        title,
+        description,
+        slug,
+        subjectAreaId
+      }
+    });
+    
+    res.status(201).json(newCourse);
+  } catch (error) {
+    console.error('Fejl ved oprettelse af kursus:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved oprettelse af kurset' });
+  }
+};
+
+/**
+ * Opdaterer et eksisterende kursus
+ */
+export const updateCourse = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const { title, description, slug, subjectAreaId } = req.body;
+  
+  try {
+    // Tjek om kurset eksisterer
+    const existingCourse = await prisma.course.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingCourse) {
+      res.status(404).json({ message: 'Kurset blev ikke fundet' });
+      return;
+    }
+    
+    // Hvis subjectAreaId ændres, tjek om det nye fagområde eksisterer
+    if (subjectAreaId && subjectAreaId !== existingCourse.subjectAreaId) {
+      const subjectArea = await prisma.subjectArea.findUnique({
+        where: { id: subjectAreaId }
+      });
+      
+      if (!subjectArea) {
+        res.status(404).json({ message: 'Det angivne fagområde findes ikke' });
+        return;
+      }
+    }
+    
+    // Hvis slug ændres, tjek om det nye slug allerede er i brug
+    if (slug && slug !== existingCourse.slug) {
+      const slugExists = await prisma.course.findUnique({
+        where: { slug }
+      });
+      
+      if (slugExists) {
+        res.status(400).json({ message: 'Et kursus med dette slug eksisterer allerede' });
+        return;
+      }
+    }
+    
+    const updatedCourse = await prisma.course.update({
+      where: { id: Number(id) },
+      data: {
+        title: title || existingCourse.title,
+        description: description || existingCourse.description,
+        slug: slug || existingCourse.slug,
+        subjectAreaId: subjectAreaId || existingCourse.subjectAreaId
+      }
+    });
+    
+    res.status(200).json(updatedCourse);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af kursus med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af kurset' });
+  }
+};
+
+/**
+ * Sletter et kursus
+ */
+export const deleteCourse = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    // Tjek om kurset eksisterer
+    const existingCourse = await prisma.course.findUnique({
+      where: { id: Number(id) },
+      include: { modules: true }
+    });
+    
+    if (!existingCourse) {
+      res.status(404).json({ message: 'Kurset blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om der er moduler tilknyttet kurset
+    if (existingCourse.modules.length > 0) {
+      res.status(400).json({ 
+        message: 'Kurset kan ikke slettes, da der er moduler tilknyttet. Slet venligst modulerne først.' 
+      });
+      return;
+    }
+    
+    await prisma.course.delete({
+      where: { id: Number(id) }
+    });
+    
+    res.status(200).json({ message: 'Kurset blev slettet' });
+  } catch (error) {
+    console.error(`Fejl ved sletning af kursus med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved sletning af kurset' });
+  }
+};
Nu skal vi oprette en controller for Module:

+// apps/api/src/controllers/module.controller.ts
+
+import { Request, Response } from 'express';
+import { PrismaClient } from '@prisma/client';
+import { CreateModuleInput } from '@repo/core';
+
+const prisma = new PrismaClient();
+
+/**
+ * Henter alle moduler for et specifikt kursus
+ */
+export const getModulesByCourse = async (req: Request, res: Response): Promise<void> => {
+  const { courseId } = req.params;
+  
+  try {
+    const modules = await prisma.module.findMany({
+      where: { courseId: Number(courseId) },
+      orderBy: { order: 'asc' }
+    });
+    
+    res.status(200).json(modules);
+  } catch (error) {
+    console.error(`Fejl ved hentning af moduler for kursus ${courseId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af moduler' });
+  }
+};
+
+/**
+ * Henter et specifikt modul ud fra ID
+ */
+export const getModuleById = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    const module = await prisma.module.findUnique({
+      where: { id: Number(id) },
+      include: {
+        course: true,
+        lessons: {
+          orderBy: { order: 'asc' }
+        },
+        quizzes: true
+      }
+    });
+    
+    if (!module) {
+      res.status(404).json({ message: 'Modulet blev ikke fundet' });
+      return;
+    }
+    
+    res.status(200).json(module);
+  } catch (error) {
+    console.error(`Fejl ved hentning af modul med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af modulet' });
+  }
+};
+
+/**
+ * Opretter et nyt modul
+ */
+export const createModule = async (req: Request, res: Response): Promise<void> => {
+  const { title, description, order, courseId }: CreateModuleInput = req.body;
+  
+  try {
+    // Tjek om kurset eksisterer
+    const course = await prisma.course.findUnique({
+      where: { id: courseId }
+    });
+    
+    if (!course) {
+      res.status(404).json({ message: 'Det angivne kursus findes ikke' });
+      return;
+    }
+    
+    // Hvis der ikke er angivet en rækkefølge, sæt den til at være efter det sidste modul
+    let moduleOrder = order;
+    if (moduleOrder === undefined) {
+      const lastModule = await prisma.module.findFirst({
+        where: { courseId },
+        orderBy: { order: 'desc' }
+      });
+      
+      moduleOrder = lastModule ? lastModule.order + 1 : 1;
+    }
+    
+    const newModule = await prisma.module.create({
+      data: {
+        title,
+        description,
+        order: moduleOrder,
+        courseId
+      }
+    });
+    
+    res.status(201).json(newModule);
+  } catch (error) {
+    console.error('Fejl ved oprettelse af modul:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved oprettelse af modulet' });
+  }
+};
+
+/**
+ * Opdaterer et eksisterende modul
+ */
+export const updateModule = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const { title, description, order, courseId } = req.body;
+  
+  try {
+    // Tjek om modulet eksisterer
+    const existingModule = await prisma.module.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingModule) {
+      res.status(404).json({ message: 'Modulet blev ikke fundet' });
+      return;
+    }
+    
+    // Hvis courseId ændres, tjek om det nye kursus eksisterer
+    if (courseId && courseId !== existingModule.courseId) {
+      const course = await prisma.course.findUnique({
+        where: { id: courseId }
+      });
+      
+      if (!course) {
+        res.status(404).json({ message: 'Det angivne kursus findes ikke' });
+        return;
+      }
+    }
+    
+    const updatedModule = await prisma.module.update({
+      where: { id: Number(id) },
+      data: {
+        title: title || existingModule.title,
+        description: description || existingModule.description,
+        order: order !== undefined ? order : existingModule.order,
+        courseId: courseId || existingModule.courseId
+      }
+    });
+    
+    res.status(200).json(updatedModule);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af modul med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af modulet' });
+  }
+};
+
+/**
+ * Opdaterer rækkefølgen af moduler i et kursus
+ */
+export const updateModulesOrder = async (req: Request, res: Response): Promise<void> => {
+  const { courseId } = req.params;
+  const { moduleIds } = req.body;
+  
+  if (!Array.isArray(moduleIds)) {
+    res.status(400).json({ message: 'moduleIds skal være et array af modul-ID\'er' });
+    return;
+  }
+  
+  try {
+    // Tjek om kurset eksisterer
+    const course = await prisma.course.findUnique({
+      where: { id: Number(courseId) },
+      include: { modules: true }
+    });
+    
+    if (!course) {
+      res.status(404).json({ message: 'Kurset blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om alle moduler tilhører kurset
+    const courseModuleIds = course.modules.map(module => module.id);
+    const allModulesExist = moduleIds.every(id => courseModuleIds.includes(Number(id)));
+    
+    if (!allModulesExist) {
+      res.status(400).json({ message: 'Et eller flere moduler tilhører ikke det angivne kursus' });
+      return;
+    }
+    
+    // Opdater rækkefølgen af moduler
+    const updates = moduleIds.map((moduleId, index) => {
+      return prisma.module.update({
+        where: { id: Number(moduleId) },
+        data: { order: index + 1 }
+      });
+    });
+    
+    await prisma.$transaction(updates);
+    
+    const updatedModules = await prisma.module.findMany({
+      where: { courseId: Number(courseId) },
+      orderBy: { order: 'asc' }
+    });
+    
+    res.status(200).json(updatedModules);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af modulrækkefølge for kursus ${courseId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af modulrækkefølgen' });
+  }
+};
+
+/**
+ * Sletter et modul
+ */
+export const deleteModule = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    // Tjek om modulet eksisterer
+    const existingModule = await prisma.module.findUnique({
+      where: { id: Number(id) },
+      include: { lessons: true, quizzes: true }
+    });
+    
+    if (!existingModule) {
+      res.status(404).json({ message: 'Modulet blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om der er lektioner eller quizzer tilknyttet modulet
+    if (existingModule.lessons.length > 0 || existingModule.quizzes.length > 0) {
+      res.status(400).json({ 
+        message: 'Modulet kan ikke slettes, da der er lektioner eller quizzer tilknyttet. Slet venligst disse først.' 
+      });
+      return;
+    }
+    
+    await prisma.module.delete({
+      where: { id: Number(id) }
+    });
+    
+    // Opdater rækkefølgen af de resterende moduler
+    const remainingModules = await prisma.module.findMany({
+      where: { courseId: existingModule.courseId },
+      orderBy: { order: 'asc' }
+    });
+    
+    const updates = remainingModules.map((module, index) => {
+      return prisma.module.update({
+        where: { id: module.id },
+        data: { order: index + 1 }
+      });
+    });
+    
+    await prisma.$transaction(updates);
+    
+    res.status(200).json({ message: 'Modulet blev slettet' });
+  } catch (error) {
+    console.error(`Fejl ved sletning af modul med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved sletning af modulet' });
+  }
+};
Nu skal vi oprette en controller for Lesson:

+// apps/api/src/controllers/lesson.controller.ts
+
+import { Request, Response } from 'express';
+import { PrismaClient } from '@prisma/client';
+import { CreateLessonInput } from '@repo/core';
+
+const prisma = new PrismaClient();
+
+/**
+ * Henter alle lektioner for et specifikt modul
+ */
+export const getLessonsByModule = async (req: Request, res: Response): Promise<void> => {
+  const { moduleId } = req.params;
+  
+  try {
+    const lessons = await prisma.lesson.findMany({
+      where: { moduleId: Number(moduleId) },
+      orderBy: { order: 'asc' }
+    });
+    
+    res.status(200).json(lessons);
+  } catch (error) {
+    console.error(`Fejl ved hentning af lektioner for modul ${moduleId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af lektioner' });
+  }
+};
+
+/**
+ * Henter en specifik lektion ud fra ID
+ */
+export const getLessonById = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    const lesson = await prisma.lesson.findUnique({
+      where: { id: Number(id) },
+      include: {
+        module: {
+          include: {
+            course: {
+              include: {
+                subjectArea: true
+              }
+            }
+          }
+        },
+        contentBlocks: {
+          orderBy: { order: 'asc' }
+        },
+        quizzes: true
+      }
+    });
+    
+    if (!lesson) {
+      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
+      return;
+    }
+    
+    res.status(200).json(lesson);
+  } catch (error) {
+    console.error(`Fejl ved hentning af lektion med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af lektionen' });
+  }
+};
+
+/**
+ * Opretter en ny lektion
+ */
+export const createLesson = async (req: Request, res: Response): Promise<void> => {
+  const { title, description, order, moduleId }: CreateLessonInput = req.body;
+  
+  try {
+    // Tjek om modulet eksisterer
+    const module = await prisma.module.findUnique({
+      where: { id: moduleId }
+    });
+    
+    if (!module) {
+      res.status(404).json({ message: 'Det angivne modul findes ikke' });
+      return;
+    }
+    
+    // Hvis der ikke er angivet en rækkefølge, sæt den til at være efter den sidste lektion
+    let lessonOrder = order;
+    if (lessonOrder === undefined) {
+      const lastLesson = await prisma.lesson.findFirst({
+        where: { moduleId },
+        orderBy: { order: 'desc' }
+      });
+      
+      lessonOrder = lastLesson ? lastLesson.order + 1 : 1;
+    }
+    
+    const newLesson = await prisma.lesson.create({
+      data: {
+        title,
+        description,
+        order: lessonOrder,
+        moduleId
+      }
+    });
+    
+    res.status(201).json(newLesson);
+  } catch (error) {
+    console.error('Fejl ved oprettelse af lektion:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved oprettelse af lektionen' });
+  }
+};
+
+/**
+ * Opdaterer en eksisterende lektion
+ */
+export const updateLesson = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const { title, description, order, moduleId } = req.body;
+  
+  try {
+    // Tjek om lektionen eksisterer
+    const existingLesson = await prisma.lesson.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingLesson) {
+      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
+      return;
+    }
+    
+    // Hvis moduleId ændres, tjek om det nye modul eksisterer
+    if (moduleId && moduleId !== existingLesson.moduleId) {
+      const module = await prisma.module.findUnique({
+        where: { id: moduleId }
+      });
+      
+      if (!module) {
+        res.status(404).json({ message: 'Det angivne modul findes ikke' });
+        return;
+      }
+    }
+    
+    const updatedLesson = await prisma.lesson.update({
+      where: { id: Number(id) },
+      data: {
+        title: title || existingLesson.title,
+        description: description || existingLesson.description,
+        order: order !== undefined ? order : existingLesson.order,
+        moduleId: moduleId || existingLesson.moduleId
+      }
+    });
+    
+    res.status(200).json(updatedLesson);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af lektion med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af lektionen' });
+  }
+};
+
+/**
+ * Opdaterer rækkefølgen af lektioner i et modul
+ */
+export const updateLessonsOrder = async (req: Request, res: Response): Promise<void> => {
+  const { moduleId } = req.params;
+  const { lessonIds } = req.body;
+  
+  if (!Array.isArray(lessonIds)) {
+    res.status(400).json({ message: 'lessonIds skal være et array af lektion-ID\'er' });
+    return;
+  }
+  
+  try {
+    // Tjek om modulet eksisterer
+    const module = await prisma.module.findUnique({
+      where: { id: Number(moduleId) },
+      include: { lessons: true }
+    });
+    
+    if (!module) {
+      res.status(404).json({ message: 'Modulet blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om alle lektioner tilhører modulet
+    const moduleLessonIds = module.lessons.map(lesson => lesson.id);
+    const allLessonsExist = lessonIds.every(id => moduleLessonIds.includes(Number(id)));
+    
+    if (!allLessonsExist) {
+      res.status(400).json({ message: 'En eller flere lektioner tilhører ikke det angivne modul' });
+      return;
+    }
+    
+    // Opdater rækkefølgen af lektioner
+    const updates = lessonIds.map((lessonId, index) => {
+      return prisma.lesson.update({
+        where: { id: Number(lessonId) },
+        data: { order: index + 1 }
+      });
+    });
+    
+    await prisma.$transaction(updates);
+    
+    const updatedLessons = await prisma.lesson.findMany({
+      where: { moduleId: Number(moduleId) },
+      orderBy: { order: 'asc' }
+    });
+    
+    res.status(200).json(updatedLessons);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af lektionsrækkefølge for modul ${moduleId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af lektionsrækkefølgen' });
+  }
+};
+
+/**
+ * Sletter en lektion
+ */
+export const deleteLesson = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    // Tjek om lektionen eksisterer
+    const existingLesson = await prisma.lesson.findUnique({
+      where: { id: Number(id) },
+      include: { contentBlocks: true, quizzes: true }
+    });
+    
+    if (!existingLesson) {
+      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om der er indholdsblokke eller quizzer tilknyttet lektionen
+    if (existingLesson.contentBlocks.length > 0 || existingLesson.quizzes.length > 0) {
+      res.status(400).json({ 
+        message: 'Lektionen kan ikke slettes, da der er indholdsblokke eller quizzer tilknyttet. Slet venligst disse først.' 
+      });
+      return;
+    }
+    
+    await prisma.lesson.delete({
+      where: { id: Number(id) }
+    });
+    
+    // Opdater rækkefølgen af de resterende lektioner
+    const remainingLessons = await prisma.lesson.findMany({
+      where: { moduleId: existingLesson.moduleId },
+      orderBy: { order: 'asc' }
+    });
+    
+    const updates = remainingLessons.map((lesson, index) => {
+      return prisma.lesson.update({
+        where: { id: lesson.id },
+        data: { order: index + 1 }
+      });
+    });
+    
+    await prisma.$transaction(updates);
+    
+    res.status(200).json({ message: 'Lektionen blev slettet' });
+  } catch (error) {
+    console.error(`Fejl ved sletning af lektion med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved sletning af lektionen' });
+  }
+};
Nu skal vi oprette en controller for ContentBlock:

+// apps/api/src/controllers/contentBlock.controller.ts
+
+import { Request, Response } from 'express';
+import { PrismaClient, ContentBlockType } from '@prisma/client';
+import { CreateContentBlockInput } from '@repo/core';
+
+const prisma = new PrismaClient();
+
+/**
+ * Henter alle indholdsblokke for en specifik lektion
+ */
+export const getContentBlocksByLesson = async (req: Request, res: Response): Promise<void> => {
+  const { lessonId } = req.params;
+  
+  try {
+    const contentBlocks = await prisma.contentBlock.findMany({
+      where: { lessonId: Number(lessonId) },
+      orderBy: { order: 'asc' }
+    });
+    
+    res.status(200).json(contentBlocks);
+  } catch (error) {
+    console.error(`Fejl ved hentning af indholdsblokke for lektion ${lessonId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af indholdsblokke' });
+  }
+};
+
+/**
+ * Henter en specifik indholdsblok ud fra ID
+ */
+export const getContentBlockById = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    const contentBlock = await prisma.contentBlock.findUnique({
+      where: { id: Number(id) },
+      include: {
+        lesson: true
+      }
+    });
+    
+    if (!contentBlock) {
+      res.status(404).json({ message: 'Indholdsblokken blev ikke fundet' });
+      return;
+    }
+    
+    res.status(200).json(contentBlock);
+  } catch (error) {
+    console.error(`Fejl ved hentning af indholdsblok med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af indholdsblokken' });
+  }
+};
+
+/**
+ * Opretter en ny indholdsblok
+ */
+export const createContentBlock = async (req: Request, res: Response): Promise<void> => {
+  const { type, content, order, lessonId }: CreateContentBlockInput = req.body;
+  
+  try {
+    // Tjek om lektionen eksisterer
+    const lesson = await prisma.lesson.findUnique({
+      where: { id: lessonId }
+    });
+    
+    if (!lesson) {
+      res.status(404).json({ message: 'Den angivne lektion findes ikke' });
+      return;
+    }
+    
+    // Valider indholdstypen
+    if (!Object.values(ContentBlockType).includes(type as ContentBlockType)) {
+      res.status(400).json({ message: 'Ugyldig indholdstype' });
+      return;
+    }
+    
+    // Hvis der ikke er angivet en rækkefølge, sæt den til at være efter den sidste indholdsblok
+    let blockOrder = order;
+    if (blockOrder === undefined) {
+      const lastBlock = await prisma.contentBlock.findFirst({
+        where: { lessonId },
+        orderBy: { order: 'desc' }
+      });
+      
+      blockOrder = lastBlock ? lastBlock.order + 1 : 1;
+    }
+    
+    const newContentBlock = await prisma.contentBlock.create({
+      data: {
+        type: type as ContentBlockType,
+        content,
+        order: blockOrder,
+        lessonId
+      }
+    });
+    
+    res.status(201).json(newContentBlock);
+  } catch (error) {
+    console.error('Fejl ved oprettelse af indholdsblok:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved oprettelse af indholdsblokken' });
+  }
+};
+
+/**
+ * Opdaterer en eksisterende indholdsblok
+ */
+export const updateContentBlock = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const { type, content, order, lessonId } = req.body;
+  
+  try {
+    // Tjek om indholdsblokken eksisterer
+    const existingContentBlock = await prisma.contentBlock.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingContentBlock) {
+      res.status(404).json({ message: 'Indholdsblokken blev ikke fundet' });
+      return;
+    }
+    
+    // Hvis lessonId ændres, tjek om den nye lektion eksisterer
+    if (lessonId && lessonId !== existingContentBlock.lessonId) {
+      const lesson = await prisma.lesson.findUnique({
+        where: { id: lessonId }
+      });
+      
+      if (!lesson) {
+        res.status(404).json({ message: 'Den angivne lektion findes ikke' });
+        return;
+      }
+    }
+    
+    // Valider indholdstypen hvis den ændres
+    if (type && type !== existingContentBlock.type) {
+      if (!Object.values(ContentBlockType).includes(type as ContentBlockType)) {
+        res.status(400).json({ message: 'Ugyldig indholdstype' });
+        return;
+      }
+    }
+    
+    const updatedContentBlock = await prisma.contentBlock.update({
+      where: { id: Number(id) },
+      data: {
+        type: type ? (type as ContentBlockType) : existingContentBlock.type,
+        content: content || existingContentBlock.content,
+        order: order !== undefined ? order : existingContentBlock.order,
+        lessonId: lessonId || existingContentBlock.lessonId
+      }
+    });
+    
+    res.status(200).json(updatedContentBlock);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af indholdsblok med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af indholdsblokken' });
+  }
+};
+
+/**
+ * Opdaterer rækkefølgen af indholdsblokke i en lektion
+ */
+export const updateContentBlocksOrder = async (req: Request, res: Response): Promise<void> => {
+  const { lessonId } = req.params;
+  const { contentBlockIds } = req.body;
+  
+  if (!Array.isArray(contentBlockIds)) {
+    res.status(400).json({ message: 'contentBlockIds skal være et array af indholdsblok-ID\'er' });
+    return;
+  }
+  
+  try {
+    // Tjek om lektionen eksisterer
+    const lesson = await prisma.lesson.findUnique({
+      where: { id: Number(lessonId) },
+      include: { contentBlocks: true }
+    });
+    
+    if (!lesson) {
+      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om alle indholdsblokke tilhører lektionen
+    const lessonContentBlockIds = lesson.contentBlocks.map(block => block.id);
+    const allBlocksExist = contentBlockIds.every(id => lessonContentBlockIds.includes(Number(id)));
+    
+    if (!allBlocksExist) {
+      res.status(400).json({ message: 'En eller flere indholdsblokke tilhører ikke den angivne lektion' });
+      return;
+    }
+    
+    // Opdater rækkefølgen af indholdsblokke
+    const updates = contentBlockIds.map((blockId, index) => {
+      return prisma.contentBlock.update({
+        where: { id: Number(blockId) },
+        data: { order: index + 1 }
+      });
+    });
+    
+    await prisma.$transaction(updates);
+    
+    const updatedContentBlocks = await prisma.contentBlock.findMany({
+      where: { lessonId: Number(lessonId) },
+      orderBy: { order: 'asc' }
+    });
+    
+    res.status(200).json(updatedContentBlocks);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af indholdsblokrækkefølge for lektion ${lessonId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af indholdsblokrækkefølgen' });
+  }
+};
+
+/**
+ * Sletter en indholdsblok
+ */
+export const deleteContentBlock = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    // Tjek om indholdsblokken eksisterer
+    const existingContentBlock = await prisma.contentBlock.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingContentBlock) {
+      res.status(404).json({ message: 'Indholdsblokken blev ikke fundet' });
+      return;
+    }
+    
+    await prisma.contentBlock.delete({
+      where: { id: Number(id) }
+    });
+    
+    // Opdater rækkefølgen af de resterende indholdsblokke
+    const remainingBlocks = await prisma.contentBlock.findMany({
+      where: { lessonId: existingContentBlock.lessonId },
+      orderBy: { order: 'asc' }
+    });
+    
+    const updates = remainingBlocks.map((block, index) => {
+      return prisma.contentBlock.update({
+        where: { id: block.id },
+        data: { order: index + 1 }
+      });
+    });
+    
+    await prisma.$transaction(updates);
+    
+    res.status(200).json({ message: 'Indholdsblokken blev slettet' });
+  } catch (error) {
+    console.error(`Fejl ved sletning af indholdsblok med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved sletning af indholdsblokken' });
+  }
+};
Nu skal vi oprette routes for vores nye controllers. Lad os starte med at oprette en route-fil for pensum:

+// apps/api/src/routes/pensum.routes.ts
+
+import express from 'express';
+import * as subjectAreaController from '../controllers/subjectArea.controller';
+import * as courseController from '../controllers/course.controller';
+import * as moduleController from '../controllers/module.controller';
+import * as lessonController from '../controllers/lesson.controller';
+import * as contentBlockController from '../controllers/contentBlock.controller';
+import { authenticateJWT, authorizeAdmin } from '../middleware/auth.middleware';
+
+const router = express.Router();
+
+// Subject Area routes
+router.get('/subject-areas', subjectAreaController.getAllSubjectAreas);
+router.get('/subject-areas/:id', subjectAreaController.getSubjectAreaById);
+router.get('/subject-areas/slug/:slug', subjectAreaController.getSubjectAreaBySlug);
+router.post('/subject-areas', authenticateJWT, authorizeAdmin, subjectAreaController.createSubjectArea);
+router.put('/subject-areas/:id', authenticateJWT, authorizeAdmin, subjectAreaController.updateSubjectArea);
+router.delete('/subject-areas/:id', authenticateJWT, authorizeAdmin, subjectAreaController.deleteSubjectArea);
+
+// Course routes
+router.get('/courses', courseController.getAllCourses);
+router.get('/courses/:id', courseController.getCourseById);
+router.get('/courses/slug/:slug', courseController.getCourseBySlug);
+router.get('/subject-areas/:subjectAreaId/courses', courseController.getCoursesBySubjectArea);
+router.post('/courses', authenticateJWT, authorizeAdmin, courseController.createCourse);
+router.put('/courses/:id', authenticateJWT, authorizeAdmin, courseController.updateCourse);
+router.delete('/courses/:id', authenticateJWT, authorizeAdmin, courseController.deleteCourse);
+
+// Module routes
+router.get('/courses/:courseId/modules', moduleController.getModulesByCourse);
+router.get('/modules/:id', moduleController.getModuleById);
+router.post('/modules', authenticateJWT, authorizeAdmin, moduleController.createModule);
+router.put('/modules/:id', authenticateJWT, authorizeAdmin, moduleController.updateModule);
+router.put('/courses/:courseId/modules/order', authenticateJWT, authorizeAdmin, moduleController.updateModulesOrder);
+router.delete('/modules/:id', authenticateJWT, authorizeAdmin, moduleController.deleteModule);
+
+// Lesson routes
+router.get('/modules/:moduleId/lessons', lessonController.getLessonsByModule);
+router.get('/lessons/:id', lessonController.getLessonById);
+router.post('/lessons', authenticateJWT, authorizeAdmin, lessonController.createLesson);
+router.put('/lessons/:id', authenticateJWT, authorizeAdmin, lessonController.updateLesson);
+router.put('/modules/:moduleId/lessons/order', authenticateJWT, authorizeAdmin, lessonController.updateLessonsOrder);
+router.delete('/lessons/:id', authenticateJWT, authorizeAdmin, lessonController.deleteLesson);
+
+// Content Block routes
+router.get('/lessons/:lessonId/content-blocks', contentBlockController.getContentBlocksByLesson);
+router.get('/content-blocks/:id', contentBlockController.getContentBlockById);
+router.post('/content-blocks', authenticateJWT, authorizeAdmin, contentBlockController.createContentBlock);
+router.put('/content-blocks/:id', authenticateJWT, authorizeAdmin, contentBlockController.updateContentBlock);
+router.put('/lessons/:lessonId/content-blocks/order', authenticateJWT, authorizeAdmin, contentBlockController.updateContentBlocksOrder);
+router.delete('/content-blocks/:id', authenticateJWT, authorizeAdmin, contentBlockController.deleteContentBlock);
+
+export default router;
Nu skal vi oprette en controller for Quiz:

+// apps/api/src/controllers/quiz.controller.ts
+
+import { Request, Response } from 'express';
+import { PrismaClient, QuestionType } from '@prisma/client';
+import { CreateQuizInput, CreateQuestionInput, CreateAnswerOptionInput } from '@repo/core';
+
+const prisma = new PrismaClient();
+
+/**
+ * Henter alle quizzer
+ */
+export const getAllQuizzes = async (req: Request, res: Response): Promise<void> => {
+  try {
+    const quizzes = await prisma.quiz.findMany({
+      include: {
+        lesson: true,
+        module: true,
+        questions: {
+          include: {
+            _count: {
+              select: { answerOptions: true }
+            }
+          }
+        },
+        _count: {
+          select: { questions: true }
+        }
+      },
+      orderBy: { title: 'asc' }
+    });
+    
+    res.status(200).json(quizzes);
+  } catch (error) {
+    console.error('Fejl ved hentning af quizzer:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af quizzer' });
+  }
+};
+
+/**
+ * Henter quizzer for en specifik lektion
+ */
+export const getQuizzesByLesson = async (req: Request, res: Response): Promise<void> => {
+  const { lessonId } = req.params;
+  
+  try {
+    const quizzes = await prisma.quiz.findMany({
+      where: { lessonId: Number(lessonId) },
+      include: {
+        questions: {
+          include: {
+            _count: {
+              select: { answerOptions: true }
+            }
+          }
+        },
+        _count: {
+          select: { questions: true }
+        }
+      },
+      orderBy: { title: 'asc' }
+    });
+    
+    res.status(200).json(quizzes);
+  } catch (error) {
+    console.error(`Fejl ved hentning af quizzer for lektion ${lessonId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af quizzer' });
+  }
+};
+
+/**
+ * Henter quizzer for et specifikt modul
+ */
+export const getQuizzesByModule = async (req: Request, res: Response): Promise<void> => {
+  const { moduleId } = req.params;
+  
+  try {
+    const quizzes = await prisma.quiz.findMany({
+      where: { moduleId: Number(moduleId) },
+      include: {
+        questions: {
+          include: {
+            _count: {
+              select: { answerOptions: true }
+            }
+          }
+        },
+        _count: {
+          select: { questions: true }
+        }
+      },
+      orderBy: { title: 'asc' }
+    });
+    
+    res.status(200).json(quizzes);
+  } catch (error) {
+    console.error(`Fejl ved hentning af quizzer for modul ${moduleId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af quizzer' });
+  }
+};
+
+/**
+ * Henter en specifik quiz ud fra ID
+ */
+export const getQuizById = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    const quiz = await prisma.quiz.findUnique({
+      where: { id: Number(id) },
+      include: {
+        lesson: true,
+        module: true,
+        questions: {
+          include: {
+            answerOptions: true
+          },
+          orderBy: { id: 'asc' }
+        }
+      }
+    });
+    
+    if (!quiz) {
+      res.status(404).json({ message: 'Quizzen blev ikke fundet' });
+      return;
+    }
+    
+    res.status(200).json(quiz);
+  } catch (error) {
+    console.error(`Fejl ved hentning af quiz med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af quizzen' });
+  }
+};
+
+/**
+ * Opretter en ny quiz
+ */
+export const createQuiz = async (req: Request, res: Response): Promise<void> => {
+  const { title, description, lessonId, moduleId }: CreateQuizInput = req.body;
+  
+  try {
+    // Tjek om enten lektion eller modul er angivet
+    if (!lessonId && !moduleId) {
+      res.status(400).json({ message: 'Enten lessonId eller moduleId skal angives' });
+      return;
+    }
+    
+    // Tjek om lektionen eksisterer, hvis angivet
+    if (lessonId) {
+      const lesson = await prisma.lesson.findUnique({
+        where: { id: lessonId }
+      });
+      
+      if (!lesson) {
+        res.status(404).json({ message: 'Den angivne lektion findes ikke' });
+        return;
+      }
+    }
+    
+    // Tjek om modulet eksisterer, hvis angivet
+    if (moduleId) {
+      const module = await prisma.module.findUnique({
+        where: { id: moduleId }
+      });
+      
+      if (!module) {
+        res.status(404).json({ message: 'Det angivne modul findes ikke' });
+        return;
+      }
+    }
+    
+    const newQuiz = await prisma.quiz.create({
+      data: {
+        title,
+        description,
+        lessonId: lessonId || null,
+        moduleId: moduleId || null
+      }
+    });
+    
+    res.status(201).json(newQuiz);
+  } catch (error) {
+    console.error('Fejl ved oprettelse af quiz:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved oprettelse af quizzen' });
+  }
+};
+
+/**
+ * Opdaterer en eksisterende quiz
+ */
+export const updateQuiz = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const { title, description, lessonId, moduleId } = req.body;
+  
+  try {
+    // Tjek om quizzen eksisterer
+    const existingQuiz = await prisma.quiz.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingQuiz) {
+      res.status(404).json({ message: 'Quizzen blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om lektionen eksisterer, hvis angivet
+    if (lessonId) {
+      const lesson = await prisma.lesson.findUnique({
+        where: { id: lessonId }
+      });
+      
+      if (!lesson) {
+        res.status(404).json({ message: 'Den angivne lektion findes ikke' });
+        return;
+      }
+    }
+    
+    // Tjek om modulet eksisterer, hvis angivet
+    if (moduleId) {
+      const module = await prisma.module.findUnique({
+        where: { id: moduleId }
+      });
+      
+      if (!module) {
+        res.status(404).json({ message: 'Det angivne modul findes ikke' });
+        return;
+      }
+    }
+    
+    const updatedQuiz = await prisma.quiz.update({
+      where: { id: Number(id) },
+      data: {
+        title: title || existingQuiz.title,
+        description: description || existingQuiz.description,
+        lessonId: lessonId !== undefined ? lessonId : existingQuiz.lessonId,
+        moduleId: moduleId !== undefined ? moduleId : existingQuiz.moduleId
+      }
+    });
+    
+    res.status(200).json(updatedQuiz);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af quiz med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af quizzen' });
+  }
+};
+
+/**
+ * Sletter en quiz
+ */
+export const deleteQuiz = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    // Tjek om quizzen eksisterer
+    const existingQuiz = await prisma.quiz.findUnique({
+      where: { id: Number(id) },
+      include: { 
+        questions: {
+          include: {
+            answerOptions: true
+          }
+        },
+        attempts: true
+      }
+    });
+    
+    if (!existingQuiz) {
+      res.status(404).json({ message: 'Quizzen blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om der er quiz-forsøg tilknyttet quizzen
+    if (existingQuiz.attempts.length > 0) {
+      res.status(400).json({ 
+        message: 'Quizzen kan ikke slettes, da der er quiz-forsøg tilknyttet.' 
+      });
+      return;
+    }
+    
+    // Slet alle svarmuligheder for alle spørgsmål i quizzen
+    for (const question of existingQuiz.questions) {
+      if (question.answerOptions.length > 0) {
+        await prisma.answerOption.deleteMany({
+          where: { questionId: question.id }
+        });
+      }
+    }
+    
+    // Slet alle spørgsmål i quizzen
+    if (existingQuiz.questions.length > 0) {
+      await prisma.question.deleteMany({
+        where: { quizId: Number(id) }
+      });
+    }
+    
+    // Slet quizzen
+    await prisma.quiz.delete({
+      where: { id: Number(id) }
+    });
+    
+    res.status(200).json({ message: 'Quizzen blev slettet' });
+  } catch (error) {
+    console.error(`Fejl ved sletning af quiz med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved sletning af quizzen' });
+  }
+};
+
+/**
+ * Opretter et nyt spørgsmål til en quiz
+ */
+export const createQuestion = async (req: Request, res: Response): Promise<void> => {
+  const { text, type, quizId, answerOptions }: CreateQuestionInput = req.body;
+  
+  try {
+    // Tjek om quizzen eksisterer
+    const quiz = await prisma.quiz.findUnique({
+      where: { id: quizId }
+    });
+    
+    if (!quiz) {
+      res.status(404).json({ message: 'Den angivne quiz findes ikke' });
+      return;
+    }
+    
+    // Valider spørgsmålstypen
+    if (!Object.values(QuestionType).includes(type as QuestionType)) {
+      res.status(400).json({ message: 'Ugyldig spørgsmålstype' });
+      return;
+    }
+    
+    // Opret spørgsmålet
+    const newQuestion = await prisma.question.create({
+      data: {
+        text,
+        type: type as QuestionType,
+        quizId
+      }
+    });
+    
+    // Opret svarmuligheder, hvis de er angivet
+    if (answerOptions && answerOptions.length > 0) {
+      const answerOptionPromises = answerOptions.map(option => {
+        return prisma.answerOption.create({
+          data: {
+            text: option.text,
+            isCorrect: option.isCorrect,
+            questionId: newQuestion.id
+          }
+        });
+      });
+      
+      await Promise.all(answerOptionPromises);
+    }
+    
+    // Hent det oprettede spørgsmål med svarmuligheder
+    const questionWithOptions = await prisma.question.findUnique({
+      where: { id: newQuestion.id },
+      include: { answerOptions: true }
+    });
+    
+    res.status(201).json(questionWithOptions);
+  } catch (error) {
+    console.error('Fejl ved oprettelse af spørgsmål:', error);
+    res.status(500).json({ message: 'Der opstod en fejl ved oprettelse af spørgsmålet' });
+  }
+};
+
+/**
+ * Opdaterer et eksisterende spørgsmål
+ */
+export const updateQuestion = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const { text, type } = req.body;
+  
+  try {
+    // Tjek om spørgsmålet eksisterer
+    const existingQuestion = await prisma.question.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingQuestion) {
+      res.status(404).json({ message: 'Spørgsmålet blev ikke fundet' });
+      return;
+    }
+    
+    // Valider spørgsmålstypen hvis den ændres
+    if (type && type !== existingQuestion.type) {
+      if (!Object.values(QuestionType).includes(type as QuestionType)) {
+        res.status(400).json({ message: 'Ugyldig spørgsmålstype' });
+        return;
+      }
+    }
+    
+    const updatedQuestion = await prisma.question.update({
+      where: { id: Number(id) },
+      data: {
+        text: text || existingQuestion.text,
+        type: type ? (type as QuestionType) : existingQuestion.type
+      },
+      include: { answerOptions: true }
+    });
+    
+    res.status(200).json(updatedQuestion);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af spørgsmål med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af spørgsmålet' });
+  }
+};
+
+/**
+ * Sletter et spørgsmål
+ */
+export const deleteQuestion = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    // Tjek om spørgsmålet eksisterer
+    const existingQuestion = await prisma.question.findUnique({
+      where: { id: Number(id) },
+      include: { answerOptions: true, userAnswers: true }
+    });
+    
+    if (!existingQuestion) {
+      res.status(404).json({ message: 'Spørgsmålet blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om der er brugerbesvarelser tilknyttet spørgsmålet
+    if (existingQuestion.userAnswers.length > 0) {
+      res.status(400).json({ 
+        message: 'Spørgsmålet kan ikke slettes, da der er brugerbesvarelser tilknyttet.' 
+      });
+      return;
+    }
+    
+    // Slet alle svarmuligheder for spørgsmålet
+    if (existingQuestion.answerOptions.length > 0) {
+      await prisma.answerOption.deleteMany({
+        where: { questionId: Number(id) }
+      });
+    }
+    
+    // Slet spørgsmålet
+    await prisma.question.delete({
+      where: { id: Number(id) }
+    });
+    
+    res.status(200).json({ message: 'Spørgsmålet blev slettet' });
+  } catch (error) {
+    console.error(`Fejl ved sletning af spørgsmål med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved sletning af spørgsmålet' });
+  }
+};
+
+/**
+ * Opretter en ny svarmulighed til et spørgsmål
+ */
+export const createAnswerOption = async (req: Request, res: Response): Promise<void> => {
+  const { questionId } = req.params;
+  const { text, isCorrect }: CreateAnswerOptionInput = req.body;
+  
+  try {
+    // Tjek om spørgsmålet eksisterer
+    const question = await prisma.question.findUnique({
+      where: { id: Number(questionId) }
+    });
+    
+    if (!question) {
+      res.status(404).json({ message: 'Det angivne spørgsmål findes ikke' });
+      return;
+    }
+    
+    const newAnswerOption = await prisma.answerOption.create({
+      data: {
+        text,
+        isCorrect,
+        questionId: Number(questionId)
+      }
+    });
+    
+    res.status(201).json(newAnswerOption);
+  } catch (error) {
+    console.error(`Fejl ved oprettelse af svarmulighed for spørgsmål ${questionId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved oprettelse af svarmuligheden' });
+  }
+};
+
+/**
+ * Opdaterer en eksisterende svarmulighed
+ */
+export const updateAnswerOption = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const { text, isCorrect } = req.body;
+  
+  try {
+    // Tjek om svarmuligheden eksisterer
+    const existingAnswerOption = await prisma.answerOption.findUnique({
+      where: { id: Number(id) }
+    });
+    
+    if (!existingAnswerOption) {
+      res.status(404).json({ message: 'Svarmuligheden blev ikke fundet' });
+      return;
+    }
+    
+    const updatedAnswerOption = await prisma.answerOption.update({
+      where: { id: Number(id) },
+      data: {
+        text: text || existingAnswerOption.text,
+        isCorrect: isCorrect !== undefined ? isCorrect : existingAnswerOption.isCorrect
+      }
+    });
+    
+    res.status(200).json(updatedAnswerOption);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af svarmulighed med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af svarmuligheden' });
+  }
+};
+
+/**
+ * Sletter en svarmulighed
+ */
+export const deleteAnswerOption = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  
+  try {
+    // Tjek om svarmuligheden eksisterer
+    const existingAnswerOption = await prisma.answerOption.findUnique({
+      where: { id: Number(id) },
+      include: { userAnswers: true }
+    });
+    
+    if (!existingAnswerOption) {
+      res.status(404).json({ message: 'Svarmuligheden blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om der er brugerbesvarelser tilknyttet svarmuligheden
+    if (existingAnswerOption.userAnswers.length > 0) {
+      res.status(400).json({ 
+        message: 'Svarmuligheden kan ikke slettes, da der er brugerbesvarelser tilknyttet.' 
+      });
+      return;
+    }
+    
+    await prisma.answerOption.delete({
+      where: { id: Number(id) }
+    });
+    
+    res.status(200).json({ message: 'Svarmuligheden blev slettet' });
+  } catch (error) {
+    console.error(`Fejl ved sletning af svarmulighed med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved sletning af svarmuligheden' });
+  }
+};
Nu skal vi oprette en controller for QuizAttempt:

+// apps/api/src/controllers/quizAttempt.controller.ts
+
+import { Request, Response } from 'express';
+import { PrismaClient, ProgressStatus } from '@prisma/client';
+import { StartQuizAttemptInput, SubmitAnswerInput, CompleteQuizAttemptInput } from '@repo/core';
+
+const prisma = new PrismaClient();
+
+/**
+ * Henter alle quiz-forsøg for en bruger
+ */
+export const getUserQuizAttempts = async (req: Request, res: Response): Promise<void> => {
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  try {
+    const quizAttempts = await prisma.quizAttempt.findMany({
+      where: { userId },
+      include: {
+        quiz: true,
+        _count: {
+          select: { userAnswers: true }
+        }
+      },
+      orderBy: { startedAt: 'desc' }
+    });
+    
+    res.status(200).json(quizAttempts);
+  } catch (error) {
+    console.error(`Fejl ved hentning af quiz-forsøg for bruger ${userId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af quiz-forsøg' });
+  }
+};
+
+/**
+ * Henter et specifikt quiz-forsøg ud fra ID
+ */
+export const getQuizAttemptById = async (req: Request, res: Response): Promise<void> => {
+  const { id } = req.params;
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  try {
+    const quizAttempt = await prisma.quizAttempt.findUnique({
+      where: { id: Number(id) },
+      include: {
+        quiz: {
+          include: {
+            questions: {
+              include: {
+                answerOptions: true
+              }
+            }
+          }
+        },
+        userAnswers: {
+          include: {
+            question: true,
+            selectedAnswerOption: true
+          }
+        }
+      }
+    });
+    
+    if (!quizAttempt) {
+      res.status(404).json({ message: 'Quiz-forsøget blev ikke fundet' });
+      return;
+    }
+    
+    // Tjek om quiz-forsøget tilhører den aktuelle bruger
+    if (quizAttempt.userId !== userId) {
+      res.status(403).json({ message: 'Du har ikke adgang til dette quiz-forsøg' });
+      return;
+    }
+    
+    res.status(200).json(quizAttempt);
+  } catch (error) {
+    console.error(`Fejl ved hentning af quiz-forsøg med id ${id}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af quiz-forsøget' });
+  }
+};
+
+/**
+ * Starter et nyt quiz-forsøg
+ */
+export const startQuizAttempt = async (req: Request, res: Response): Promise<void> => {
+  const { quizId }: StartQuizAttemptInput = req.body;
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  try {
+    // Tjek om quizzen eksisterer
+    const quiz = await prisma.quiz.findUnique({
+      where: { id: quizId },
+      include: { questions: true }
+    });
+    
+    if (!quiz) {
+      res.status(404).json({ message: 'Den angivne quiz findes ikke' });
+      return;
+    }
+    
+    // Tjek om quizzen har spørgsmål
+    if (quiz.questions.length === 0) {
+      res.status(400).json({ message: 'Quizzen har ingen spørgsmål' });
+      return;
+    }
+    
+    // Opret et nyt quiz-forsøg
+    const newQuizAttempt = await prisma.quizAttempt.create({
+      data: {
+        userId,
+        quizId,
+        score: 0,
+        startedAt: new Date()
+      }
+    });
+    
+    // Opdater eller opret brugerens fremskridt for denne quiz
+    await prisma.userProgress.upsert({
+      where: {
+        userId_quizId: {
+          userId,
+          quizId
+        }
+      },
+      update: {
+        status: ProgressStatus.IN_PROGRESS,
+        quizAttemptId: newQuizAttempt.id
+      },
+      create: {
+        userId,
+        quizId,
+        status: ProgressStatus.IN_PROGRESS,
+        quizAttemptId: newQuizAttempt.id
+      }
+    });
+    
+    res.status(201).json(newQuizAttempt);
+  } catch (error) {
+    console.error(`Fejl ved start af quiz-forsøg for quiz ${quizId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved start af quiz-forsøget' });
+  }
+};
+
+/**
+ * Indsender et svar på et spørgsmål i et quiz-forsøg
+ */
+export const submitAnswer = async (req: Request, res: Response): Promise<void> => {
+  const { quizAttemptId, questionId, selectedAnswerOptionId, inputText }: SubmitAnswerInput = req.body;
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  try {
+    // Tjek om quiz-forsøget eksisterer og tilhører brugeren
+    const quizAttempt = await prisma.quizAttempt.findUnique({
+      where: { id: quizAttemptId },
+      include: { quiz: true }
+    });
+    
+    if (!quizAttempt) {
+      res.status(404).json({ message: 'Quiz-forsøget blev ikke fundet' });
+      return;
+    }
+    
+    if (quizAttempt.userId !== userId) {
+      res.status(403).json({ message: 'Du har ikke adgang til dette quiz-forsøg' });
+      return;
+    }
+    
+    // Tjek om quiz-forsøget er afsluttet
+    if (quizAttempt.completedAt) {
+      res.status(400).json({ message: 'Quiz-forsøget er allerede afsluttet' });
+      return;
+    }
+    
+    // Tjek om spørgsmålet eksisterer og tilhører quizzen
+    const question = await prisma.question.findUnique({
+      where: { id: questionId },
+      include: { answerOptions: true }
+    });
+    
+    if (!question) {
+      res.status(404).json({ message: 'Spørgsmålet blev ikke fundet' });
+      return;
+    }
+    
+    if (question.quizId !== quizAttempt.quizId) {
+      res.status(400).json({ message: 'Spørgsmålet tilhører ikke denne quiz' });
+      return;
+    }
+    
+    // Tjek om der allerede er et svar på dette spørgsmål i dette forsøg
+    const existingAnswer = await prisma.userAnswer.findFirst({
+      where: {
+        quizAttemptId,
+        questionId
+      }
+    });
+    
+    // Hvis der er et eksisterende svar, opdater det
+    if (existingAnswer) {
+      const updatedAnswer = await prisma.userAnswer.update({
+        where: { id: existingAnswer.id },
+        data: {
+          selectedAnswerOptionId: selectedAnswerOptionId || null,
+          inputText: inputText || null
+        }
+      });
+      
+      res.status(200).json(updatedAnswer);
+      return;
+    }
+    
+    // Ellers opret et nyt svar
+    const newAnswer = await prisma.userAnswer.create({
+      data: {
+        quizAttemptId,
+        questionId,
+        selectedAnswerOptionId: selectedAnswerOptionId || null,
+        inputText: inputText || null
+      }
+    });
+    
+    res.status(201).json(newAnswer);
+  } catch (error) {
+    console.error(`Fejl ved indsendelse af svar for quiz-forsøg ${quizAttemptId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved indsendelse af svaret' });
+  }
+};
+
+/**
+ * Afslutter et quiz-forsøg og beregner scoren
+ */
+export const completeQuizAttempt = async (req: Request, res: Response): Promise<void> => {
+  const { quizAttemptId }: CompleteQuizAttemptInput = req.body;
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  try {
+    // Tjek om quiz-forsøget eksisterer og tilhører brugeren
+    const quizAttempt = await prisma.quizAttempt.findUnique({
+      where: { id: quizAttemptId },
+      include: {
+        quiz: {
+          include: {
+            questions: {
+              include: {
+                answerOptions: true
+              }
+            }
+          }
+        },
+        userAnswers: {
+          include: {
+            selectedAnswerOption: true
+          }
+        }
+      }
+    });
+    
+    if (!quizAttempt) {
+      res.status(404).json({ message: 'Quiz-forsøget blev ikke fundet' });
+      return;
+    }
+    
+    if (quizAttempt.userId !== userId) {
+      res.status(403).json({ message: 'Du har ikke adgang til dette quiz-forsøg' });
+      return;
+    }
+    
+    // Tjek om quiz-forsøget allerede er afsluttet
+    if (quizAttempt.completedAt) {
+      res.status(400).json({ message: 'Quiz-forsøget er allerede afsluttet' });
+      return;
+    }
+    
+    // Beregn scoren
+    let score = 0;
+    const totalQuestions = quizAttempt.quiz.questions.length;
+    
+    // For hvert spørgsmål, tjek om svaret er korrekt
+    for (const question of quizAttempt.quiz.questions) {
+      const userAnswer = quizAttempt.userAnswers.find(answer => answer.questionId === question.id);
+      
+      if (userAnswer && userAnswer.selectedAnswerOption && userAnswer.selectedAnswerOption.isCorrect) {
+        score++;
+      }
+    }
+    
+    // Beregn procentvis score (0-100)
+    const percentageScore = totalQuestions > 0 ? Math.round((score / totalQuestions) * 100) : 0;
+    
+    // Opdater quiz-forsøget med score og afslutningsdato
+    const updatedQuizAttempt = await prisma.quizAttempt.update({
+      where: { id: quizAttemptId },
+      data: {
+        score: percentageScore,
+        completedAt: new Date()
+      }
+    });
+    
+    // Opdater brugerens fremskridt for denne quiz
+    await prisma.userProgress.updateMany({
+      where: {
+        userId,
+        quizId: quizAttempt.quizId
+      },
+      data: {
+        status: ProgressStatus.COMPLETED,
+        score: percentageScore
+      }
+    });
+    
+    res.status(200).json({
+      ...updatedQuizAttempt,
+      totalQuestions,
+      correctAnswers: score,
+      percentageScore
+    });
+  } catch (error) {
+    console.error(`Fejl ved afslutning af quiz-forsøg ${quizAttemptId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved afslutning af quiz-forsøget' });
+  }
+};
Nu skal vi oprette en controller for UserProgress:

+// apps/api/src/controllers/userProgress.controller.ts
+
+import { Request, Response } from 'express';
+import { PrismaClient, ProgressStatus } from '@prisma/client';
+
+const prisma = new PrismaClient();
+
+/**
+ * Henter fremskridt for den aktuelle bruger
+ */
+export const getUserProgress = async (req: Request, res: Response): Promise<void> => {
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  try {
+    const progress = await prisma.userProgress.findMany({
+      where: { userId },
+      include: {
+        lesson: {
+          include: {
+            module: {
+              include: {
+                course: {
+                  include: {
+                    subjectArea: true
+                  }
+                }
+              }
+            }
+          }
+        },
+        quiz: true,
+        quizAttempt: true
+      }
+    });
+    
+    res.status(200).json(progress);
+  } catch (error) {
+    console.error(`Fejl ved hentning af fremskridt for bruger ${userId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af fremskridt' });
+  }
+};
+
+/**
+ * Henter fremskridt for en specifik bruger (kun for admin)
+ */
+export const getUserProgressById = async (req: Request, res: Response): Promise<void> => {
+  const { userId } = req.params;
+  const currentUserId = req.user?.id;
+  const isAdmin = req.user?.role === 'ADMIN';
+  
+  if (!currentUserId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  // Kun admin kan se andre brugeres fremskridt
+  if (Number(userId) !== currentUserId && !isAdmin) {
+    res.status(403).json({ message: 'Du har ikke tilladelse til at se denne brugers fremskridt' });
+    return;
+  }
+  
+  try {
+    const progress = await prisma.userProgress.findMany({
+      where: { userId: Number(userId) },
+      include: {
+        lesson: {
+          include: {
+            module: {
+              include: {
+                course: {
+                  include: {
+                    subjectArea: true
+                  }
+                }
+              }
+            }
+          }
+        },
+        quiz: true,
+        quizAttempt: true
+      }
+    });
+    
+    res.status(200).json(progress);
+  } catch (error) {
+    console.error(`Fejl ved hentning af fremskridt for bruger ${userId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af fremskridt' });
+  }
+};
+
+/**
+ * Henter fremskridt for en specifik lektion
+ */
+export const getLessonProgress = async (req: Request, res: Response): Promise<void> => {
+  const { lessonId } = req.params;
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  try {
+    // Tjek om lektionen eksisterer
+    const lesson = await prisma.lesson.findUnique({
+      where: { id: Number(lessonId) }
+    });
+    
+    if (!lesson) {
+      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
+      return;
+    }
+    
+    // Hent eller opret fremskridt for lektionen
+    let progress = await prisma.userProgress.findFirst({
+      where: {
+        userId,
+        lessonId: Number(lessonId)
+      }
+    });
+    
+    if (!progress) {
+      // Hvis der ikke findes fremskridt, opret det med status NOT_STARTED
+      progress = await prisma.userProgress.create({
+        data: {
+          userId,
+          lessonId: Number(lessonId),
+          status: ProgressStatus.NOT_STARTED
+        }
+      });
+    }
+    
+    res.status(200).json(progress);
+  } catch (error) {
+    console.error(`Fejl ved hentning af fremskridt for lektion ${lessonId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af fremskridt' });
+  }
+};
+
+/**
+ * Opdaterer fremskridt for en specifik lektion
+ */
+export const updateLessonProgress = async (req: Request, res: Response): Promise<void> => {
+  const { lessonId } = req.params;
+  const { status } = req.body;
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  // Valider status
+  if (!Object.values(ProgressStatus).includes(status as ProgressStatus)) {
+    res.status(400).json({ message: 'Ugyldig status' });
+    return;
+  }
+  
+  try {
+    // Tjek om lektionen eksisterer
+    const lesson = await prisma.lesson.findUnique({
+      where: { id: Number(lessonId) }
+    });
+    
+    if (!lesson) {
+      res.status(404).json({ message: 'Lektionen blev ikke fundet' });
+      return;
+    }
+    
+    // Opdater eller opret fremskridt for lektionen
+    const progress = await prisma.userProgress.upsert({
+      where: {
+        userId_lessonId: {
+          userId,
+          lessonId: Number(lessonId)
+        }
+      },
+      update: {
+        status: status as ProgressStatus
+      },
+      create: {
+        userId,
+        lessonId: Number(lessonId),
+        status: status as ProgressStatus
+      }
+    });
+    
+    res.status(200).json(progress);
+  } catch (error) {
+    console.error(`Fejl ved opdatering af fremskridt for lektion ${lessonId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved opdatering af fremskridt' });
+  }
+};
+
+/**
+ * Henter fremskridt for et specifikt kursus
+ */
+export const getCourseProgress = async (req: Request, res: Response): Promise<void> => {
+  const { courseId } = req.params;
+  const userId = req.user?.id;
+  
+  if (!userId) {
+    res.status(401).json({ message: 'Ikke autoriseret' });
+    return;
+  }
+  
+  try {
+    // Tjek om kurset eksisterer
+    const course = await prisma.course.findUnique({
+      where: { id: Number(courseId) },
+      include: {
+        modules: {
+          include: {
+            lessons: true,
+            quizzes: true
+          }
+        }
+      }
+    });
+    
+    if (!course) {
+      res.status(404).json({ message: 'Kurset blev ikke fundet' });
+      return;
+    }
+    
+    // Hent alle lektioner og quizzer i kurset
+    const lessonIds: number[] = [];
+    const quizIds: number[] = [];
+    
+    course.modules.forEach(module => {
+      module.lessons.forEach(lesson => lessonIds.push(lesson.id));
+      module.quizzes.forEach(quiz => quizIds.push(quiz.id));
+    });
+    
+    // Hent fremskridt for alle lektioner og quizzer i kurset
+    const progress = await prisma.userProgress.findMany({
+      where: {
+        userId,
+        OR: [
+          { lessonId: { in: lessonIds.length > 0 ? lessonIds : undefined } },
+          { quizId: { in: quizIds.length > 0 ? quizIds : undefined } }
+        ]
+      }
+    });
+    
+    // Beregn samlet fremskridt for kurset
+    const totalItems = lessonIds.length + quizIds.length;
+    const completedItems = progress.filter(p => p.status === ProgressStatus.COMPLETED).length;
+    const inProgressItems = progress.filter(p => p.status === ProgressStatus.IN_PROGRESS).length;
+    
+    const percentageComplete = totalItems > 0 ? Math.round((completedItems / totalItems) * 100) : 0;
+    
+    res.status(200).json({
+      courseId: Number(courseId),
+      totalItems,
+      completedItems,
+      inProgressItems,
+      percentageComplete,
+      status: percentageComplete === 100 ? ProgressStatus.COMPLETED : 
+              percentageComplete > 0 ? ProgressStatus.IN_PROGRESS : 
+              ProgressStatus.NOT_STARTED,
+      detailedProgress: progress
+    });
+  } catch (error) {
+    console.error(`Fejl ved hentning af fremskridt for kursus ${courseId}:`, error);
+    res.status(500).json({ message: 'Der opstod en fejl ved hentning af fremskridt' });
+  }
+};
Nu skal vi oprette routes for quiz og fremskridt:

+// apps/api/src/routes/quiz.routes.ts
+
+import express from 'express';
+import * as quizController from '../controllers/quiz.controller';
+import * as quizAttemptController from '../controllers/quizAttempt.controller';
+import * as userProgressController from '../controllers/userProgress.controller';
+import { authenticateJWT, authorizeAdmin } from '../middleware/auth.middleware';
+
+const router = express.Router();
+
+// Quiz routes
+router.get('/quizzes', quizController.getAllQuizzes);
+router.get('/lessons/:lessonId/quizzes', quizController.getQuizzesByLesson);
+router.get('/modules/:moduleId/quizzes', quizController.getQuizzesByModule);
+router.get('/quizzes/:id', quizController.getQuizById);
+router.post('/quizzes', authenticateJWT, authorizeAdmin, quizController.createQuiz);
+router.put('/quizzes/:id', authenticateJWT, authorizeAdmin, quizController.updateQuiz);
+router.delete('/quizzes/:id', authenticateJWT, authorizeAdmin, quizController.deleteQuiz);
+
+// Question routes
+router.post('/questions', authenticateJWT, authorizeAdmin, quizController.createQuestion);
+router.put('/questions/:id', authenticateJWT, authorizeAdmin, quizController.updateQuestion);
+router.delete('/questions/:id', authenticateJWT, authorizeAdmin, quizController.deleteQuestion);
+
+// Answer Option routes
+router.post('/questions/:questionId/answer-options', authenticateJWT, authorizeAdmin, quizController.createAnswerOption);
+router.put('/answer-options/:id', authenticateJWT, authorizeAdmin, quizController.updateAnswerOption);
+router.delete('/answer-options/:id', authenticateJWT, authorizeAdmin, quizController.deleteAnswerOption);
+
+// Quiz Attempt routes
+router.get('/quiz-attempts', authenticateJWT, quizAttemptController.getUserQuizAttempts);
+router.get('/quiz-attempts/:id', authenticateJWT, quizAttemptController.getQuizAttemptById);
+router.post('/quiz-attempts/start', authenticateJWT, quizAttemptController.startQuizAttempt);
+router.post('/quiz-attempts/submit-answer', authenticateJWT, quizAttemptController.submitAnswer);
+router.post('/quiz-attempts/complete', authenticateJWT, quizAttemptController.completeQuizAttempt);
+
+// User Progress routes
+router.get('/progress', authenticateJWT, userProgressController.getUserProgress);
+router.get('/progress/users/:userId', authenticateJWT, userProgressController.getUserProgressById);
+router.get('/progress/lessons/:lessonId', authenticateJWT, userProgressController.getLessonProgress);
+router.put('/progress/lessons/:lessonId', authenticateJWT, userProgressController.updateLessonProgress);
+router.get('/progress/courses/:courseId', authenticateJWT, userProgressController.getCourseProgress);
+
+export default router;
ybaragji@gmail.com, 4m ago
kan vi køre lint nu for at sikre vi stadig er fejl fri

Coding Agent
Lad os køre lint for at sikre, at vores kode er fejlfri. Vi vil fokusere på de filer, vi har oprettet eller ændret i packages/core og packages/config, da de er de eneste, der stadig eksisterer efter sletningen af controller- og route-filerne.

zsh
cd /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab && yarn lint
ybaragji@gmail.com, 3m ago
vi skal først ahve implementeret alle ændringer du har lavet foroven

Coding Agent
Jeg forstår. Lad os implementere alle ændringerne igen, men denne gang vil vi fokusere på de centrale dele af milesten 3, som er:

Oprettelse/strukturering af packages/core
Oprettelse/strukturering af packages/config
Definition af Prisma-modeller for pensum og quiz
Lad os starte med at sikre, at packages/core er korrekt implementeret:

Lad os nu køre lint for at sikre, at vores kode er fejlfri:

zsh
cd /Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab && yarn lint
ybaragji@gmail.com, 1m ago
/fix nej, alle de koder du har skrevet i chatten er ikke blevet gemt i min kodebase. Du nødt til at trykke på gem eller lignende.Det er en eller anden apply knap dit system
Coding Agent
Jeg forstår problemet. Lad os implementere alle ændringerne igen, og denne gang vil jeg sikre mig, at hver ændring bliver gemt korrekt.

Lad os starte med at oprette pensum.types.ts i packages/core:






pensum.types.ts
Current File
Codebase
</file>

<file path="apps/api/prisma/schema.prisma">
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int            @id @default(autoincrement())
  email                String         @unique
  name                 String?
  createdAt            DateTime       @default(now())
  passwordHash         String
  role                 Role           @default(USER)
  updatedAt            DateTime       @updatedAt
  passwordResetExpires DateTime?
  passwordResetToken   String?        @unique
  quizAttempts         QuizAttempt[]
  progress             UserProgress[]
}

model SubjectArea {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[]
}

model Course {
  id            Int         @id @default(autoincrement())
  title         String
  description   String
  slug          String      @unique
  subjectAreaId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  subjectArea   SubjectArea @relation(fields: [subjectAreaId], references: [id])
  modules       Module[]
}

model Module {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  order       Int
  courseId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lessons     Lesson[]
  course      Course   @relation(fields: [courseId], references: [id])
  quizzes     Quiz[]   @relation("ModuleQuizzes")
}

model Lesson {
  id            Int            @id @default(autoincrement())
  title         String
  description   String
  order         Int
  moduleId      Int
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  contentBlocks ContentBlock[]
  module        Module         @relation(fields: [moduleId], references: [id])
  quizzes       Quiz[]         @relation("LessonQuizzes")
  userProgress  UserProgress[] @relation("LessonProgress")
}

model ContentBlock {
  id        Int              @id @default(autoincrement())
  type      ContentBlockType
  content   String
  order     Int
  lessonId  Int
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  lesson    Lesson           @relation(fields: [lessonId], references: [id])
}

model Quiz {
  id           Int            @id @default(autoincrement())
  title        String
  description  String
  lessonId     Int?
  moduleId     Int?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  questions    Question[]
  lesson       Lesson?        @relation("LessonQuizzes", fields: [lessonId], references: [id])
  module       Module?        @relation("ModuleQuizzes", fields: [moduleId], references: [id])
  attempts     QuizAttempt[]
  userProgress UserProgress[] @relation("QuizProgress")
}

model Question {
  id            Int            @id @default(autoincrement())
  text          String
  type          QuestionType
  quizId        Int
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  answerOptions AnswerOption[]
  quiz          Quiz           @relation(fields: [quizId], references: [id])
  userAnswers   UserAnswer[]
}

model AnswerOption {
  id          Int          @id @default(autoincrement())
  text        String
  isCorrect   Boolean
  questionId  Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  question    Question     @relation(fields: [questionId], references: [id])
  userAnswers UserAnswer[]
}

model QuizAttempt {
  id          Int            @id @default(autoincrement())
  userId      Int
  quizId      Int
  score       Int            @default(0)
  startedAt   DateTime       @default(now())
  completedAt DateTime?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  quiz        Quiz           @relation(fields: [quizId], references: [id])
  user        User           @relation(fields: [userId], references: [id])
  userAnswers UserAnswer[]
  progress    UserProgress[]
}

model UserAnswer {
  id                     Int           @id @default(autoincrement())
  quizAttemptId          Int
  questionId             Int
  selectedAnswerOptionId Int?
  inputText              String?
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  question               Question      @relation(fields: [questionId], references: [id])
  quizAttempt            QuizAttempt   @relation(fields: [quizAttemptId], references: [id])
  selectedAnswerOption   AnswerOption? @relation(fields: [selectedAnswerOptionId], references: [id])
}

model UserProgress {
  id            Int            @id @default(autoincrement())
  userId        Int
  lessonId      Int?
  quizId        Int?
  status        ProgressStatus @default(NOT_STARTED)
  score         Int?
  quizAttemptId Int?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  lesson        Lesson?        @relation("LessonProgress", fields: [lessonId], references: [id])
  quizAttempt   QuizAttempt?   @relation(fields: [quizAttemptId], references: [id])
  quiz          Quiz?          @relation("QuizProgress", fields: [quizId], references: [id])
  user          User           @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum ContentBlockType {
  TEXT
  IMAGE_URL
  VIDEO_URL
  QUIZ_REF
}

enum QuestionType {
  MULTIPLE_CHOICE
  FILL_IN_BLANK
  MATCHING
}

enum ProgressStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}
</file>

<file path="apps/api/src/users/users.service.spec.ts">
// apps/api/src/users/users.service.spec.ts
import * as bcrypt from 'bcryptjs';

// Mock bcryptjs modulet HELT ØVERST (før alle andre imports)
jest.mock('bcryptjs', () => ({
  hash: jest.fn(),
  compare: jest.fn(),
}));

import { Test, TestingModule } from '@nestjs/testing';
import { UsersService } from './users.service';
import { PrismaService } from '../persistence/prisma/prisma.service';
import {
  ConflictException,
  InternalServerErrorException,
} from '@nestjs/common';
import { CreateUserDto } from './dto/create-user.dto';
import { Role as CoreRole } from '@repo/core';
import {
  Prisma,
  User as PrismaGeneratedUserType,
  Role as PrismaGeneratedRoleType,
} from '@prisma/client';
import { ConfigService } from '@nestjs/config';
import { ServerEnv } from '@repo/config';

const mockPrismaService = {
  user: {
    findUnique: jest.fn(),
    create: jest.fn(),
  },
};

const mockPrismaUserResult: PrismaGeneratedUserType = {
  id: 1,
  email: 'test@example.com',
  passwordHash: 'hashedpassword',
  name: 'Test User',
  role: 'USER' as PrismaGeneratedRoleType,
  createdAt: new Date(),
  updatedAt: new Date(),
  passwordResetToken: null,
  passwordResetExpires: null,
};

const mockConfigService = {
  get: jest.fn((key: keyof ServerEnv) => {
    if (key === 'SALT_ROUNDS') {
      return 10; // Default værdi for tests
    }
    return undefined;
  }),
};

describe('UsersService', () => {
  let service: UsersService;

  let consoleErrorSpy: jest.SpyInstance;
  beforeAll(() => {
    consoleErrorSpy = jest.spyOn(console, 'error').mockImplementation(() => {});
  });
  afterAll(() => {
    consoleErrorSpy.mockRestore();
  });

  beforeEach(async () => {
    mockPrismaService.user.findUnique.mockReset();
    mockPrismaService.user.create.mockReset();
    (bcrypt.hash as jest.Mock).mockReset();
    (bcrypt.compare as jest.Mock).mockReset();
    mockConfigService.get.mockClear();

    const module: TestingModule = await Test.createTestingModule({
      providers: [
        UsersService,
        {
          provide: PrismaService,
          useValue: mockPrismaService,
        },
        {
          provide: ConfigService,
          useValue: mockConfigService,
        },
      ],
    }).compile();

    service = module.get<UsersService>(UsersService);
  });

  it('should be defined', () => {
    expect(service).toBeDefined();
  });

  describe('create', () => {
    const createUserDto: CreateUserDto = {
      email: 'test@example.com',
      password: 'password123',
      name: 'Test User',
      role: CoreRole.USER,
    };

    it('should create and return a user if email does not exist', async () => {
      mockPrismaService.user.findUnique.mockResolvedValue(null);
      mockPrismaService.user.create.mockResolvedValue(mockPrismaUserResult);
      (bcrypt.hash as jest.Mock).mockResolvedValue('hashedpassword');

      const result = await service.create(createUserDto);

      expect(mockConfigService.get).toHaveBeenCalledWith('SALT_ROUNDS', {
        infer: true,
      });
      expect(bcrypt.hash).toHaveBeenCalledWith(createUserDto.password, 10);
      expect(mockPrismaService.user.create).toHaveBeenCalledWith(
        expect.objectContaining({
          data: expect.objectContaining({
            email: createUserDto.email,
            passwordHash: 'hashedpassword',
          }),
        }),
      );
      expect(result.email).toEqual(mockPrismaUserResult.email);
    });

    it('should throw ConflictException if email already exists', async () => {
      mockPrismaService.user.findUnique.mockResolvedValue(mockPrismaUserResult);
      await expect(service.create(createUserDto)).rejects.toThrow(
        ConflictException,
      );
    });

    it('should throw InternalServerErrorException on hashing error', async () => {
      mockPrismaService.user.findUnique.mockResolvedValue(null);
      (bcrypt.hash as jest.Mock).mockRejectedValue(new Error('Hashing failed'));
      await expect(service.create(createUserDto)).rejects.toThrow(
        InternalServerErrorException,
      );
      expect(console.error).toHaveBeenCalledWith(
        'Fejl under hashing af password:',
        expect.any(Error),
      );
    });

    it('should throw ConflictException on Prisma P2002 error during create', async () => {
      mockPrismaService.user.findUnique.mockResolvedValue(null);
      (bcrypt.hash as jest.Mock).mockResolvedValue('hashedpassword');
      const prismaError = new Prisma.PrismaClientKnownRequestError(
        'Unique constraint failed',
        { code: 'P2002', clientVersion: 'test', meta: { target: ['email'] } },
      );
      mockPrismaService.user.create.mockRejectedValue(prismaError);
      await expect(service.create(createUserDto)).rejects.toThrow(
        ConflictException,
      );
    });

    it('should throw InternalServerErrorException on other Prisma errors during create', async () => {
      mockPrismaService.user.findUnique.mockResolvedValue(null);
      (bcrypt.hash as jest.Mock).mockResolvedValue('hashedpassword');
      mockPrismaService.user.create.mockRejectedValue(
        new Error('Some other DB error'),
      );
      await expect(service.create(createUserDto)).rejects.toThrow(
        InternalServerErrorException,
      );
      expect(console.error).toHaveBeenCalledWith(
        'Databasefejl under brugeroprettelse:',
        expect.any(Error),
      );
    });
  });

  describe('findOneByEmail', () => {
    it('should return a user if found', async () => {
      mockPrismaService.user.findUnique.mockResolvedValue(mockPrismaUserResult);
      const result = await service.findOneByEmail('test@example.com');
      expect(result).toEqual(mockPrismaUserResult);
    });
  });

  describe('findOneById', () => {
    it('should return a user if found', async () => {
      mockPrismaService.user.findUnique.mockResolvedValue(mockPrismaUserResult);
      const result = await service.findOneById(1);
      expect(result).toEqual(mockPrismaUserResult);
    });
  });
});
</file>

<file path="apps/api/tsconfig.json">
{
  "extends": "../../packages/tsconfig/nestjs.json",
  "compilerOptions": {
    "outDir": "./dist",
    "baseUrl": "./",
    "skipLibCheck": true,
    "composite": true,
    "paths": {
      "@repo/core": ["../../packages/core/src"],
      "@repo/core/*": ["../../packages/core/src/*"],
      "@repo/config": ["../../packages/config/src"],
      "@repo/config/*": ["../../packages/config/src/*"]
    },
    "typeRoots": [
      "./node_modules/@types",
      "./src/types"
    ]
  },
  "include": [
    "src/**/*", 
    "src/types/*.d.ts"
  ],
  "exclude": ["node_modules", "dist"],
  "references": [
    { "path": "../../packages/core" },
    { "path": "../../packages/config" }
  ]
}
</file>

<file path="apps/web/pages/courses/[slug]/quizzes/[id].tsx">
import React, { useState } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Link from 'next/link';
import { QuizProvider } from '../../../../src/context/QuizContext';
import QuizContainer from '../../../../src/components/quiz/QuizContainer';
import OfflineQuizNotification from '../../../../src/components/quiz/OfflineQuizNotification';
import { Quiz, Question, AnswerOption, QuestionType } from '@repo/core/src/types/quiz.types';
import useQuizProgress from '../../../../src/hooks/useQuizProgress';

// Mock data for development - will be replaced with API call
const getMockQuizData = (id: string): { 
  quiz: Quiz; 
  questions: Question[]; 
  answerOptions: Record<number, AnswerOption[]> 
} => {
  // Mock quiz
  const quiz: Quiz = {
    id: parseInt(id),
    title: 'React Fundamentals Quiz',
    description: 'Test din viden om React grundbegreber',
    moduleId: 1,
    passingScore: 70,
    createdAt: new Date(),
    updatedAt: new Date()
  };
  
  // Mock questions
  const questions: Question[] = [
    {
      id: 1,
      text: 'Hvad er React?',
      type: QuestionType.MULTIPLE_CHOICE,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'React er et JavaScript-bibliotek til at bygge brugergrænseflader, udviklet af Facebook.'
    },
    {
      id: 2,
      text: 'Hvad er JSX?',
      type: QuestionType.MULTIPLE_CHOICE,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'JSX er en syntaksudvidelse til JavaScript, der ligner HTML og gør det lettere at skrive React-elementer.'
    },
    {
      id: 3,
      text: 'Hvad er en React-komponent?',
      type: QuestionType.MULTIPLE_CHOICE,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'En React-komponent er en genbrugelig kodeblok, der returnerer React-elementer som beskriver, hvad der skal vises på skærmen.'
    },
    {
      id: 4,
      text: 'Hvad er forskellen mellem state og props i React?',
      type: QuestionType.MULTIPLE_CHOICE,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'Props er data, der sendes til en komponent fra dens forælder, mens state er data, der administreres internt i komponenten.'
    },
    {
      id: 5,
      text: 'Hvad er en React Hook?',
      type: QuestionType.MULTIPLE_CHOICE,
      quizId: parseInt(id),
      createdAt: new Date(),
      updatedAt: new Date(),
      explanation: 'Hooks er funktioner, der lader dig "hooke ind i" React-funktioner som state og livscyklus fra funktionelle komponenter.'
    }
  ];
  
  // Mock answer options
  const answerOptions: Record<number, AnswerOption[]> = {
    1: [
      { id: 101, text: 'Et JavaScript-bibliotek til at bygge brugergrænseflader', isCorrect: true, questionId: 1, createdAt: new Date(), updatedAt: new Date() },
      { id: 102, text: 'Et komplet framework som Angular', isCorrect: false, questionId: 1, createdAt: new Date(), updatedAt: new Date() },
      { id: 103, text: 'Et programmeringssprog', isCorrect: false, questionId: 1, createdAt: new Date(), updatedAt: new Date() },
      { id: 104, text: 'En database', isCorrect: false, questionId: 1, createdAt: new Date(), updatedAt: new Date() }
    ],
    2: [
      { id: 201, text: 'En ny programmeringssprog', isCorrect: false, questionId: 2, createdAt: new Date(), updatedAt: new Date() },
      { id: 202, text: 'En syntaksudvidelse til JavaScript, der ligner HTML', isCorrect: true, questionId: 2, createdAt: new Date(), updatedAt: new Date() },
      { id: 203, text: 'Et værktøj til at style komponenter', isCorrect: false, questionId: 2, createdAt: new Date(), updatedAt: new Date() },
      { id: 204, text: 'En JavaScript-compiler', isCorrect: false, questionId: 2, createdAt: new Date(), updatedAt: new Date() }
    ],
    3: [
      { id: 301, text: 'En HTML-fil', isCorrect: false, questionId: 3, createdAt: new Date(), updatedAt: new Date() },
      { id: 302, text: 'En CSS-klasse', isCorrect: false, questionId: 3, createdAt: new Date(), updatedAt: new Date() },
      { id: 303, text: 'En genbrugelig kodeblok, der returnerer React-elementer', isCorrect: true, questionId: 3, createdAt: new Date(), updatedAt: new Date() },
      { id: 304, text: 'En JavaScript-variabel', isCorrect: false, questionId: 3, createdAt: new Date(), updatedAt: new Date() }
    ],
    4: [
      { id: 401, text: 'Der er ingen forskel, de er det samme', isCorrect: false, questionId: 4, createdAt: new Date(), updatedAt: new Date() },
      { id: 402, text: 'Props er for styling, state er for data', isCorrect: false, questionId: 4, createdAt: new Date(), updatedAt: new Date() },
      { id: 403, text: 'Props sendes til komponenten, state administreres internt i komponenten', isCorrect: true, questionId: 4, createdAt: new Date(), updatedAt: new Date() },
      { id: 404, text: 'State kan ikke ændres, props kan ændres', isCorrect: false, questionId: 4, createdAt: new Date(), updatedAt: new Date() }
    ],
    5: [
      { id: 501, text: 'En måde at tilføje HTML til React', isCorrect: false, questionId: 5, createdAt: new Date(), updatedAt: new Date() },
      { id: 502, text: 'En funktion, der lader dig bruge React-funktioner i funktionelle komponenter', isCorrect: true, questionId: 5, createdAt: new Date(), updatedAt: new Date() },
      { id: 503, text: 'Et værktøj til at forbinde React med en database', isCorrect: false, questionId: 5, createdAt: new Date(), updatedAt: new Date() },
      { id: 504, text: 'En måde at style komponenter på', isCorrect: false, questionId: 5, createdAt: new Date(), updatedAt: new Date() }
    ]
  };
  
  return { quiz, questions, answerOptions };
};

const QuizPage: React.FC = () => {
  const router = useRouter();
  const { slug, id } = router.query;
  const [isUpdatingProgress, setIsUpdatingProgress] = useState(false);
  const [progressError, setProgressError] = useState<string | null>(null);
  
  // Initialize quiz progress hook
  const quizIdNumber = id ? parseInt(id as string) : 0;
  const { updateProgress, isUpdating } = useQuizProgress({ quizId: quizIdNumber });
  
  // Handle quiz completion
  const handleQuizComplete = async (score: number) => {
    console.log(`Quiz completed with score: ${score}%`);
    
    if (!id) return;
    
    try {
      setIsUpdatingProgress(true);
      setProgressError(null);
      
      // Get quiz data to access questions and answer options
      const { quiz, questions, answerOptions } = getMockQuizData(id as string);
      
      // In a real app, you would get the user's answers from the QuizContext
      // For now, we'll create mock answers based on the score
      const correctCount = Math.round((score / 100) * questions.length);
      const mockAnswers = questions.map((question, index) => {
        const options = answerOptions[question.id];
        const correctOption = options.find(opt => opt.isCorrect);
        const selectedOption = index < correctCount ? correctOption : options.find(opt => !opt.isCorrect);
        
        return {
          questionId: question.id,
          selectedOptionId: selectedOption?.id || 0,
          isCorrect: index < correctCount,
        };
      });
      
      // Update progress in the API
      await updateProgress(score, mockAnswers);
      
    } catch (error) {
      console.error('Failed to update quiz progress:', error);
      setProgressError('Failed to save your progress. Your results will still be shown.');
    } finally {
      setIsUpdatingProgress(false);
    }
  };
  
  // Show loading state while router is not ready
  if (!router.isReady) {
    return (
      <div className="flex justify-center items-center h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600 dark:text-gray-300">Indlæser quiz...</p>
        </div>
      </div>
    );
  }
  
  // Check if id is valid
  if (!id) {
    return (
      <div className="max-w-4xl mx-auto px-4 py-8">
        <div className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-6 text-center">
          <h2 className="text-xl font-semibold text-red-800 dark:text-red-300 mb-2">Quiz ikke fundet</h2>
          <p className="text-red-700 dark:text-red-200 mb-4">Den anmodede quiz kunne ikke findes.</p>
          <Link href={`/courses/${slug}`} className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
            Tilbage til kurset
          </Link>
        </div>
      </div>
    );
  }
  
  // Get quiz data
  const quizIdString = id as string;
  const { quiz, questions, answerOptions } = getMockQuizData(quizIdString);
  
  return (
    <>
      <Head>
        <title>{quiz.title} | LearningLab</title>
      </Head>
      
      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* Breadcrumb */}
        <nav className="flex mb-6 text-sm text-gray-500 dark:text-gray-400">
          <Link href="/courses" className="hover:text-gray-700 dark:hover:text-gray-200">
            Kurser
          </Link>
          <span className="mx-2">/</span>
          <Link href={`/courses/${slug}`} className="hover:text-gray-700 dark:hover:text-gray-200">
            {slug}
          </Link>
          <span className="mx-2">/</span>
          <span className="text-gray-700 dark:text-gray-200">Quiz</span>
        </nav>
        
        {/* Progress error message */}
        {progressError && (
          <div className="mb-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md">
            <p className="text-red-700 dark:text-red-300">{progressError}</p>
          </div>
        )}
        
        {/* Loading indicator for API calls */}
        {isUpdatingProgress && (
          <div className="mb-4 p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-md flex items-center">
            <div className="animate-spin mr-3 h-4 w-4 border-2 border-blue-500 rounded-full border-t-transparent"></div>
            <p className="text-blue-700 dark:text-blue-300">Gemmer dine resultater...</p>
          </div>
        )}
        
        {/* Offline notification */}
        <OfflineQuizNotification className="mb-4" />
        
        <QuizProvider>
          <QuizContainer
            quiz={quiz}
            questions={questions}
            answerOptions={answerOptions}
            onComplete={handleQuizComplete}
          />
        </QuizProvider>
      </div>
    </>
  );
};

export default QuizPage;
</file>

<file path="apps/web/src/context/AuthContext.tsx">
// apps/web/src/context/AuthContext.tsx
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
import { useRouter } from 'next/router';

// Definer en type for brugerobjektet, som vi forventer fra backend
// Denne type matcher den, vi brugte i ProfilePage og den, som vores /api/auth/profile returnerer
interface User {
  id: number;
  email: string;
  name?: string;
  role: string;
  // Tilføj andre felter, som dit backend /api/auth/profile endpoint returnerer
}

// Definer typen for værdierne i vores AuthContext
interface AuthContextType {
  user: User | null; // Den aktuelle bruger eller null, hvis ikke logget ind
  token: string | null; // JWT access token
  refreshToken: string | null; // JWT refresh token
  isLoading: boolean; // Til at vise loading state under auth operationer
  login: (email: string, password: string) => Promise<void>; // Funktion til at logge ind
  logout: () => void; // Funktion til at logge ud
  signup: (name: string | undefined, email: string, password: string) => Promise<void>; // Funktion til at oprette en ny bruger
  forgotPassword: (email: string) => Promise<string>; // Funktion til at anmode om nulstilling af adgangskode
  resetPassword: (token: string, newPassword: string, confirmPassword: string) => Promise<string>; // Funktion til at nulstille adgangskode
  refreshAccessToken: () => Promise<boolean>; // Funktion til at forny access token
}

// Opret AuthContext med en default værdi (typisk undefined eller null)
// Vi bruger 'undefined' for at kunne tjekke, om provideren er brugt korrekt.
export const AuthContext = createContext<AuthContextType | undefined>(undefined);

// Definer props for AuthProvider
interface AuthProviderProps {
  children: ReactNode; // Gør det muligt at wrappe andre komponenter
}

export function AuthProvider({ children }: AuthProviderProps) {
  const [user, setUser] = useState<User | null>(null);
  const [token, setToken] = useState<string | null>(null);
  const [refreshToken, setRefreshToken] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(true); // Start med loading true for at tjekke initial auth state
  const [tokenExpiresAt, setTokenExpiresAt] = useState<number | null>(null);
  const router = useRouter();

  // Funktion til at hente brugerprofil baseret på et token
  const fetchUserProfile = async (currentToken: string) => {
    setIsLoading(true);
    try {
      const baseUrl = process.env.NEXT_PUBLIC_API_URL || '/api';
      const response = await fetch(`${baseUrl}/auth/profile`, {
        headers: {
          'Authorization': `Bearer ${currentToken}`,
          'Content-Type': 'application/json',
        },
      });
      if (!response.ok) {
        // Hvis token er ugyldigt/udløbet, log ud
        if (response.status === 401) {
          console.error('AuthContext: Ugyldigt token ved hentning af profil. Logger ud.');
          localStorage.removeItem('accessToken');
          setToken(null);
          setUser(null);
        }
        throw new Error('Kunne ikke hente brugerprofil');
      }
      const userData: User = await response.json();
      setUser(userData);
      setToken(currentToken); // Sørg for at token state også er sat
      console.log('AuthContext: Brugerprofil hentet og sat:', userData);
    } catch (error) {
      console.error('AuthContext: Fejl ved hentning af brugerprofil:', error);
      localStorage.removeItem('accessToken'); // Ryd token ved fejl
      setToken(null);
      setUser(null);
    } finally {
      setIsLoading(false);
    }
  };
  
  // Funktion til at dekode JWT token og få udløbstidspunkt
  const getTokenExpiration = (token: string): number => {
    try {
      // Simpel JWT dekodning uden bibliotek
      const base64Url = token.split('.')[1];
      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
      const jsonPayload = decodeURIComponent(
        atob(base64)
          .split('')
          .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))
          .join('')
      );
      const payload = JSON.parse(jsonPayload);
      return payload.exp * 1000; // Konverter til millisekunder
    } catch (error) {
      console.error('Fejl ved dekodning af token:', error);
      return Date.now() + 15 * 60 * 1000; // Default 15 minutter fra nu
    }
  };

  // Funktion til at forny access token ved brug af refresh token
  const refreshAccessToken = async () => {
    if (!refreshToken) return false;
    
    try {
      setIsLoading(true);
      const baseUrl = process.env.NEXT_PUBLIC_API_URL || '/api';
      const response = await fetch(`${baseUrl}/auth/refresh`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ refresh_token: refreshToken }),
      });

      if (!response.ok) {
        throw new Error('Kunne ikke forny token');
      }

      const data = await response.json();
      const newAccessToken = data.access_token;
      
      // Gem nyt access token
      localStorage.setItem('accessToken', newAccessToken);
      setToken(newAccessToken);
      
      // Opdater udløbstidspunkt
      const newExpiresAt = getTokenExpiration(newAccessToken);
      setTokenExpiresAt(newExpiresAt);
      
      setIsLoading(false);
      return true;
    } catch (error) {
      console.error('Fejl ved fornyelse af token:', error);
      // Ved fejl, log brugeren ud
      logout();
      setIsLoading(false);
      return false;
    }
  };

  // useEffect til at tjekke for tokens i localStorage ved app-start
  useEffect(() => {
    console.log('AuthContext: Initialiserer auth state...');
    const storedToken = localStorage.getItem('accessToken');
    const storedRefreshToken = localStorage.getItem('refreshToken');
    
    if (storedToken) {
      console.log('AuthContext: Token fundet i localStorage, forsøger at hente profil.');
      
      // Sæt tokens og udløbstidspunkt
      setToken(storedToken);
      setRefreshToken(storedRefreshToken);
      
      // Beregn udløbstidspunkt
      const expiresAt = getTokenExpiration(storedToken);
      setTokenExpiresAt(expiresAt);
      
      // Hvis token er udløbet og vi har et refresh token, forny det
      if (Date.now() >= expiresAt && storedRefreshToken) {
        console.log('AuthContext: Token er udløbet, forsøger at forny med refresh token.');
        refreshAccessToken().then(success => {
          if (success) {
            fetchUserProfile(token!);
          }
        });
      } else {
        // Ellers brug det eksisterende token
        fetchUserProfile(storedToken);
      }
    } else {
      console.log('AuthContext: Intet token fundet i localStorage.');
      setIsLoading(false); // Ingen token, så vi er ikke i gang med at loade bruger
    }
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // Tomt dependency array sikrer, at dette kun kører ved mount
  
  // useEffect til at håndtere automatisk fornyelse af token før det udløber
  useEffect(() => {
    if (!token || !tokenExpiresAt) return;
    
    // Beregn tid til udløb i millisekunder
    const timeUntilExpiry = tokenExpiresAt - Date.now();
    
    // Hvis token udløber om mindre end 5 minutter, forny det
    if (timeUntilExpiry < 5 * 60 * 1000) {
      refreshAccessToken();
      return;
    }
    
    // Ellers planlæg fornyelse 5 minutter før udløb
    const refreshTimeout = setTimeout(() => {
      console.log('AuthContext: Planlægger fornyelse af token 5 minutter før udløb.');
      refreshAccessToken();
    }, timeUntilExpiry - 5 * 60 * 1000);
    
    return () => clearTimeout(refreshTimeout);
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [token, tokenExpiresAt]);

  const login = async (email: string, password: string) => {
    setIsLoading(true);
    try {
      const baseUrl = process.env.NEXT_PUBLIC_API_URL || '/api';
      const response = await fetch(`${baseUrl}/auth/login`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password }),
      });

      if (!response.ok) {
        let errorMessage = 'Login fejlede';
        try {
          const errorData = await response.json();
          errorMessage = errorData.message || errorMessage;
        } catch (parseError) {
          console.error('Kunne ikke parse fejlsvar som JSON:', parseError);
          errorMessage = `Login fejlede med status ${response.status}: ${response.statusText}`;
        }
        throw new Error(errorMessage);
      }

      const data: { access_token: string; refresh_token: string } = await response.json();
      
      // Gem tokens i localStorage
      localStorage.setItem('accessToken', data.access_token);
      localStorage.setItem('refreshToken', data.refresh_token);
      
      // Opdater state
      setToken(data.access_token);
      setRefreshToken(data.refresh_token);
      
      // Beregn udløbstidspunkt
      const expiresAt = getTokenExpiration(data.access_token);
      setTokenExpiresAt(expiresAt);
      
      console.log('AuthContext: Tokens gemt efter login.');
      await fetchUserProfile(data.access_token); // Hent og sæt brugerprofil efter login
      router.push('/profile'); // Omdiriger til profil efter succesfuldt login
    } catch (error: any) {
      console.error('AuthContext: Login fejl:', error);
      localStorage.removeItem('accessToken');
      localStorage.removeItem('refreshToken');
      setToken(null);
      setRefreshToken(null);
      setTokenExpiresAt(null);
      setUser(null);
      setIsLoading(false);
      throw error; // Kast fejlen videre, så LoginScreen kan fange den og vise den
    }
    // setIsLoading(false) håndteres i fetchUserProfile's finally block
  };

  const logout = () => {
    console.log('AuthContext: Logger ud...');
    localStorage.removeItem('accessToken');
    localStorage.removeItem('refreshToken');
    setToken(null);
    setRefreshToken(null);
    setTokenExpiresAt(null);
    setUser(null);
    router.push('/login'); // Omdiriger til login-siden efter logout
  };

  // Signup funktion
  const signup = async (name: string | undefined, email: string, password: string) => {
    setIsLoading(true);
    try {
      // Brug baseUrl fra miljøvariabel eller fallback til relativ sti
      const baseUrl = process.env.NEXT_PUBLIC_API_URL || '/api';
      const response = await fetch(`${baseUrl}/users/signup`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name, email, password }),
      });

      if (!response.ok) {
        let errorMessage = 'Registrering fejlede.';
        try {
          const errorData = await response.json();
          if (errorData && errorData.message) {
            if (Array.isArray(errorData.message)) {
              errorMessage = errorData.message.join(', ');
            } else {
              errorMessage = errorData.message;
            }
          }
        } catch (parseError) {
          console.error('Kunne ikke parse fejlsvar som JSON:', parseError);
          errorMessage = `Registrering fejlede med status ${response.status}: ${response.statusText}`;
        }
        throw new Error(errorMessage);
      }

      console.log('AuthContext: Registrering succesfuld');
      // Vi kunne automatisk logge brugeren ind her, men lad os holde det simpelt
      // og lade brugeren logge ind manuelt
    } catch (error: any) {
      console.error('AuthContext: Registreringsfejl:', error);
      throw error; // Kast fejlen videre, så SignupScreen kan fange den og vise den
    } finally {
      setIsLoading(false);
    }
  };

  // Forgot Password funktion
  const forgotPassword = async (email: string) => {
    setIsLoading(true);
    try {
      const baseUrl = process.env.NEXT_PUBLIC_API_URL || '/api';
      const response = await fetch(`${baseUrl}/auth/forgot-password`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });

      if (!response.ok) {
        let errorMessage = 'Anmodning om nulstilling af adgangskode fejlede.';
        try {
          const data = await response.json();
          if (data && data.message) {
            if (Array.isArray(data.message)) {
              errorMessage = data.message.join(', ');
            } else {
              errorMessage = data.message;
            }
          }
        } catch (parseError) {
          console.error('Kunne ikke parse fejlsvar som JSON:', parseError);
          errorMessage = `Anmodning om nulstilling af adgangskode fejlede med status ${response.status}: ${response.statusText}`;
        }
        throw new Error(errorMessage);
      }
      
      let data;
      try {
        data = await response.json();
      } catch (parseError) {
        console.error('Kunne ikke parse succesfuldt svar som JSON:', parseError);
        data = { message: 'Hvis din email findes i systemet, vil du modtage et link til at nulstille dit password.' };
      }
      
      console.log('AuthContext: Anmodning om glemt adgangskode succesfuld');
      return data.message || 'Hvis din email findes i systemet, vil du modtage et link til at nulstille dit password.';
    } catch (error: any) {
      console.error('AuthContext: Fejl ved glemt adgangskode:', error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  };

  // Reset Password funktion
  const resetPassword = async (token: string, newPassword: string, confirmPassword: string) => {
    setIsLoading(true);
    try {
      if (newPassword !== confirmPassword) {
        throw new Error('De nye adgangskoder matcher ikke.');
      }

      const baseUrl = process.env.NEXT_PUBLIC_API_URL || '/api';
      const response = await fetch(`${baseUrl}/auth/reset-password`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ token, newPassword, confirmPassword }),
      });

      if (!response.ok) {
        let errorMessage = 'Nulstilling af adgangskode fejlede.';
        try {
          const data = await response.json();
          if (data && data.message) {
            if (Array.isArray(data.message)) {
              errorMessage = data.message.join(', ');
            } else {
              errorMessage = data.message;
            }
          }
        } catch (parseError) {
          console.error('Kunne ikke parse fejlsvar som JSON:', parseError);
          errorMessage = `Nulstilling af adgangskode fejlede med status ${response.status}: ${response.statusText}`;
        }
        throw new Error(errorMessage);
      }
      
      let data;
      try {
        data = await response.json();
      } catch (parseError) {
        console.error('Kunne ikke parse succesfuldt svar som JSON:', parseError);
        data = { message: 'Din adgangskode er blevet nulstillet! Du bliver nu sendt til login-siden.' };
      }
      
      console.log('AuthContext: Nulstilling af adgangskode succesfuld');
      return data.message || 'Din adgangskode er blevet nulstillet! Du bliver nu sendt til login-siden.';
    } catch (error: any) {
      console.error('AuthContext: Fejl ved nulstilling af adgangskode:', error);
      throw error;
    } finally {
      setIsLoading(false);
    }
  };

  // Værdien, der gøres tilgængelig for alle consumers af context'en
  const value = {
    user,
    token,
    refreshToken,
    isLoading,
    login,
    logout,
    signup,
    forgotPassword,
    resetPassword,
    refreshAccessToken,
  };

  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
}

// Custom hook for nem adgang til AuthContext
export function useAuth() {
  const context = useContext(AuthContext);
  if (context === undefined) {
    throw new Error('useAuth skal bruges inden i en AuthProvider');
  }
  return context;
}
</file>

<file path="apps/web/src/screens/auth/login/login.test.tsx">
// apps/web/src/screens/auth/login/login.test.tsx
import { render } from "@testing-library/react";
import { Provider } from 'react-redux';
import store from '../../../store';
import { LoginScreen } from "./login";
import { AuthProvider } from '../../../context/AuthContext'; // Sørg for korrekt importsti

// Det er ikke længere nødvendigt at mocke next/router her,
// hvis du gør det globalt i jest.setup.js (anbefalet)
// Hvis du *ikke* har en jest.setup.js eller foretrækker at gøre det her:
// jest.mock('next/router', () => require('next-router-mock'));

test('vis login-form', () => {
  render(
    <Provider store={store}>
      <AuthProvider>
        <LoginScreen />
      </AuthProvider>
    </Provider>
  );
});
</file>

<file path="packages/config/src/env.ts">
// packages/config/src/env.ts
import { z } from 'zod';

/**
 * Definerer skemaet for server-side miljøvariabler.
 */
export const serverSchema = z.object({
  DATABASE_URL: z.string().url({ message: "DATABASE_URL skal være en gyldig URL." }).optional(),
  JWT_SECRET: z.string().min(32, { message: "JWT_SECRET skal være mindst 32 tegn lang." }).optional(),
  JWT_EXPIRES_IN: z.string().default('1h'),
  SALT_ROUNDS: z.preprocess(
    (val) => (typeof val === 'string' ? parseInt(val, 10) : typeof val === 'number' ? val : undefined),
    z.number({ invalid_type_error: "SALT_ROUNDS skal være et tal."}).int().positive({ message: "SALT_ROUNDS skal være et positivt heltal."})
  ).default(10),
  // NODE_ENV: z.enum(['development', 'production', 'test']).default('development'), // Valgfri
});
export type ServerEnv = z.infer<typeof serverSchema>;

/**
 * Definerer skemaet for client-side (public) miljøvariabler.
 */
export const clientSchema = z.object({
  NEXT_PUBLIC_APP_NAME: z.string().default('Læringsplatform'),
  NEXT_PUBLIC_API_URL: z.string().url({ message: "NEXT_PUBLIC_API_URL skal være en gyldig URL."}).default('http://localhost:5002/api'),
  NEXT_PUBLIC_WS_URL: z.string().url({ message: "NEXT_PUBLIC_WS_URL skal være en gyldig URL." }).default('http://localhost:3001').optional(),
});
export type ClientEnv = z.infer<typeof clientSchema>;

let memoizedServerEnv: ServerEnv;
let memoizedClientEnv: ClientEnv;

function parseServerEnv(): ServerEnv {
  const source = {
    DATABASE_URL: process.env.DATABASE_URL,
    JWT_SECRET: process.env.JWT_SECRET,
    JWT_EXPIRES_IN: process.env.JWT_EXPIRES_IN,
    SALT_ROUNDS: process.env.SALT_ROUNDS,
    // NODE_ENV: process.env.NODE_ENV,
  };
  
  // In CI/CD or build environments, we don't need to validate all environment variables
  if (process.env.CI || process.env.NODE_ENV === 'production') {
    return {
      DATABASE_URL: source.DATABASE_URL || 'postgresql://dummy:dummy@localhost:5432/dummy',
      JWT_SECRET: source.JWT_SECRET || 'dummy_secret_key_for_build_environment_only_32chars',
      JWT_EXPIRES_IN: source.JWT_EXPIRES_IN || '15m',
      SALT_ROUNDS: source.SALT_ROUNDS ? parseInt(source.SALT_ROUNDS, 10) : 10,
    } as ServerEnv;
  }
  
  const parsed = serverSchema.safeParse(source);

  if (!parsed.success) {
    console.error(
      '❌ Ugyldige server-side miljøvariabler:',
      parsed.error.flatten().fieldErrors,
    );
    throw new Error('Ugyldige server-side miljøvariabler. Tjek .env filen og konsollen.');
  }
  return parsed.data;
}

function parseClientEnv(): ClientEnv {
   const source = {
    NEXT_PUBLIC_APP_NAME: process.env.NEXT_PUBLIC_APP_NAME,
    NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,
    NEXT_PUBLIC_WS_URL: process.env.NEXT_PUBLIC_WS_URL,
  };
  const parsed = clientSchema.safeParse(source);

  // In CI/CD or build environments, we don't need to validate all environment variables
  if (process.env.CI || process.env.NODE_ENV === 'production') {
    return clientSchema.parse({
      NEXT_PUBLIC_APP_NAME: source.NEXT_PUBLIC_APP_NAME || 'Læringsplatform',
      NEXT_PUBLIC_API_URL: source.NEXT_PUBLIC_API_URL || 'http://localhost:5002/api',
      NEXT_PUBLIC_WS_URL: source.NEXT_PUBLIC_WS_URL || 'http://localhost:3001',
    });
  }

  if (!parsed.success) {
    console.error(
      '❌ Ugyldige client-side miljøvariabler:',
      parsed.error.flatten().fieldErrors,
    );
    throw new Error('Ugyldige client-side miljøvariabler. Tjek .env filen og konsollen.');
  }
  return parsed.data;
}

export const serverEnv = (): Readonly<ServerEnv> => {
  if (!memoizedServerEnv) {
    memoizedServerEnv = parseServerEnv();
  }
  return memoizedServerEnv;
};

export const clientEnv = (): Readonly<ClientEnv> => {
  if(!memoizedClientEnv) {
    memoizedClientEnv = parseClientEnv();
  }
  return memoizedClientEnv;
}

// Initialiser og valider server-miljøvariabler ved modul-load.
try {
  serverEnv();
  // console.log('✅ Server-miljøvariabler valideret og indlæst.');
} catch (error) {
  // In CI/CD or build environments, we don't need to validate all environment variables
  if (process.env.CI || process.env.NODE_ENV === 'production') {
    console.warn('⚠️ Kører i CI/CD eller produktionsmiljø, springer over streng miljøvariabel-validering');
  } else {
    console.error('❌ Fejl ved validering af server-miljøvariabler:', error);
    process.exit(1);
  }
}
</file>

<file path="packages/config/tsconfig.json">
{
  "extends": "../tsconfig/base.json",
  "compilerOptions": {
    "composite": true,
    "declaration": true,
    "declarationMap": true,
    "outDir": "dist",
    "rootDir": "src",
    "baseUrl": "./src"
  },
  "include": ["src"],
  "exclude": ["node_modules", "dist", "*.js", "*.conf"]
}
</file>

<file path="packages/config/tsconfig.tsbuildinfo">
{"fileNames":["../../node_modules/typescript/lib/lib.d.ts","../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../node_modules/typescript/lib/lib.scripthost.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.decorators.d.ts","../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/typealiases.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/util.d.ts","../../node_modules/zod/dist/commonjs/v3/zoderror.d.ts","../../node_modules/zod/dist/commonjs/v3/locales/en.d.ts","../../node_modules/zod/dist/commonjs/v3/errors.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/parseutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/enumutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/errorutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/partialutil.d.ts","../../node_modules/zod/dist/commonjs/v3/standard-schema.d.ts","../../node_modules/zod/dist/commonjs/v3/types.d.ts","../../node_modules/zod/dist/commonjs/v3/external.d.ts","../../node_modules/zod/dist/commonjs/v3/index.d.ts","../../node_modules/zod/dist/commonjs/index.d.ts","./src/env.ts","./src/index.ts","../../node_modules/@types/aria-query/index.d.ts","../../node_modules/axios/index.d.ts","../../node_modules/@babel/types/lib/index.d.ts","../../node_modules/@types/babel__generator/index.d.ts","../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../node_modules/@types/babel__template/index.d.ts","../../node_modules/@types/babel__traverse/index.d.ts","../../node_modules/@types/babel__core/index.d.ts","../../node_modules/@types/bcryptjs/index.d.ts","../../node_modules/@types/node/compatibility/disposable.d.ts","../../node_modules/@types/node/compatibility/indexable.d.ts","../../node_modules/@types/node/compatibility/iterators.d.ts","../../node_modules/@types/node/compatibility/index.d.ts","../../node_modules/@types/node/globals.typedarray.d.ts","../../node_modules/@types/node/buffer.buffer.d.ts","../../node_modules/buffer/index.d.ts","../../node_modules/undici-types/header.d.ts","../../node_modules/undici-types/readable.d.ts","../../node_modules/undici-types/file.d.ts","../../node_modules/undici-types/fetch.d.ts","../../node_modules/undici-types/formdata.d.ts","../../node_modules/undici-types/connector.d.ts","../../node_modules/undici-types/client.d.ts","../../node_modules/undici-types/errors.d.ts","../../node_modules/undici-types/dispatcher.d.ts","../../node_modules/undici-types/global-dispatcher.d.ts","../../node_modules/undici-types/global-origin.d.ts","../../node_modules/undici-types/pool-stats.d.ts","../../node_modules/undici-types/pool.d.ts","../../node_modules/undici-types/handlers.d.ts","../../node_modules/undici-types/balanced-pool.d.ts","../../node_modules/undici-types/agent.d.ts","../../node_modules/undici-types/mock-interceptor.d.ts","../../node_modules/undici-types/mock-agent.d.ts","../../node_modules/undici-types/mock-client.d.ts","../../node_modules/undici-types/mock-pool.d.ts","../../node_modules/undici-types/mock-errors.d.ts","../../node_modules/undici-types/proxy-agent.d.ts","../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../node_modules/undici-types/retry-handler.d.ts","../../node_modules/undici-types/retry-agent.d.ts","../../node_modules/undici-types/api.d.ts","../../node_modules/undici-types/interceptors.d.ts","../../node_modules/undici-types/util.d.ts","../../node_modules/undici-types/cookies.d.ts","../../node_modules/undici-types/patch.d.ts","../../node_modules/undici-types/websocket.d.ts","../../node_modules/undici-types/eventsource.d.ts","../../node_modules/undici-types/filereader.d.ts","../../node_modules/undici-types/diagnostics-channel.d.ts","../../node_modules/undici-types/content-type.d.ts","../../node_modules/undici-types/cache.d.ts","../../node_modules/undici-types/index.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostics_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/dom-events.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/readline/promises.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/sea.d.ts","../../node_modules/@types/node/sqlite.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/stream/consumers.d.ts","../../node_modules/@types/node/stream/web.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/test.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/@types/connect/index.d.ts","../../node_modules/@types/body-parser/index.d.ts","../../node_modules/@types/cookiejar/index.d.ts","../../node_modules/@types/estree/index.d.ts","../../node_modules/@types/json-schema/index.d.ts","../../node_modules/@types/eslint/use-at-your-own-risk.d.ts","../../node_modules/@types/eslint/index.d.ts","../../node_modules/@types/eslint-scope/index.d.ts","../../node_modules/@types/mime/index.d.ts","../../node_modules/@types/send/index.d.ts","../../node_modules/@types/qs/index.d.ts","../../node_modules/@types/range-parser/index.d.ts","../../node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/http-errors/index.d.ts","../../node_modules/@types/serve-static/index.d.ts","../../node_modules/@types/express/index.d.ts","../../node_modules/@types/graceful-fs/index.d.ts","../../node_modules/@types/hoist-non-react-statics/node_modules/@types/react/global.d.ts","../../node_modules/csstype/index.d.ts","../../node_modules/@types/hoist-non-react-statics/node_modules/@types/react/index.d.ts","../../node_modules/@types/hoist-non-react-statics/index.d.ts","../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../node_modules/@types/istanbul-lib-report/index.d.ts","../../node_modules/@types/istanbul-reports/index.d.ts","../../node_modules/@jest/expect-utils/build/index.d.ts","../../node_modules/chalk/index.d.ts","../../node_modules/@sinclair/typebox/typebox.d.ts","../../node_modules/@jest/schemas/build/index.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/expect/build/index.d.ts","../../node_modules/@types/jest/index.d.ts","../../node_modules/parse5/dist/common/html.d.ts","../../node_modules/parse5/dist/common/token.d.ts","../../node_modules/parse5/dist/common/error-codes.d.ts","../../node_modules/parse5/dist/tokenizer/preprocessor.d.ts","../../node_modules/parse5/dist/tokenizer/index.d.ts","../../node_modules/parse5/dist/tree-adapters/interface.d.ts","../../node_modules/parse5/dist/parser/open-element-stack.d.ts","../../node_modules/parse5/dist/parser/formatting-element-list.d.ts","../../node_modules/parse5/dist/parser/index.d.ts","../../node_modules/parse5/dist/tree-adapters/default.d.ts","../../node_modules/parse5/dist/serializer/index.d.ts","../../node_modules/parse5/dist/common/foreign-content.d.ts","../../node_modules/parse5/dist/index.d.ts","../../node_modules/@types/tough-cookie/index.d.ts","../../node_modules/@types/jsdom/base.d.ts","../../node_modules/@types/jsdom/index.d.ts","../../node_modules/@types/json5/index.d.ts","../../node_modules/@types/jsonwebtoken/index.d.ts","../../node_modules/@types/methods/index.d.ts","../../node_modules/@types/ms/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport/index.d.ts","../../node_modules/@types/passport-jwt/node_modules/@types/jsonwebtoken/index.d.ts","../../node_modules/@types/passport-strategy/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-strategy/index.d.ts","../../node_modules/@types/passport-jwt/index.d.ts","../../node_modules/@types/passport-local/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-local/index.d.ts","../../node_modules/@types/prop-types/index.d.ts","../../node_modules/@types/react/global.d.ts","../../node_modules/@types/react/index.d.ts","../../node_modules/@types/react-dom/index.d.ts","../../node_modules/@types/scheduler/index.d.ts","../../node_modules/@types/semver/classes/semver.d.ts","../../node_modules/@types/semver/functions/parse.d.ts","../../node_modules/@types/semver/functions/valid.d.ts","../../node_modules/@types/semver/functions/clean.d.ts","../../node_modules/@types/semver/functions/inc.d.ts","../../node_modules/@types/semver/functions/diff.d.ts","../../node_modules/@types/semver/functions/major.d.ts","../../node_modules/@types/semver/functions/minor.d.ts","../../node_modules/@types/semver/functions/patch.d.ts","../../node_modules/@types/semver/functions/prerelease.d.ts","../../node_modules/@types/semver/functions/compare.d.ts","../../node_modules/@types/semver/functions/rcompare.d.ts","../../node_modules/@types/semver/functions/compare-loose.d.ts","../../node_modules/@types/semver/functions/compare-build.d.ts","../../node_modules/@types/semver/functions/sort.d.ts","../../node_modules/@types/semver/functions/rsort.d.ts","../../node_modules/@types/semver/functions/gt.d.ts","../../node_modules/@types/semver/functions/lt.d.ts","../../node_modules/@types/semver/functions/eq.d.ts","../../node_modules/@types/semver/functions/neq.d.ts","../../node_modules/@types/semver/functions/gte.d.ts","../../node_modules/@types/semver/functions/lte.d.ts","../../node_modules/@types/semver/functions/cmp.d.ts","../../node_modules/@types/semver/functions/coerce.d.ts","../../node_modules/@types/semver/classes/comparator.d.ts","../../node_modules/@types/semver/classes/range.d.ts","../../node_modules/@types/semver/functions/satisfies.d.ts","../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../node_modules/@types/semver/ranges/min-version.d.ts","../../node_modules/@types/semver/ranges/valid.d.ts","../../node_modules/@types/semver/ranges/outside.d.ts","../../node_modules/@types/semver/ranges/gtr.d.ts","../../node_modules/@types/semver/ranges/ltr.d.ts","../../node_modules/@types/semver/ranges/intersects.d.ts","../../node_modules/@types/semver/ranges/simplify.d.ts","../../node_modules/@types/semver/ranges/subset.d.ts","../../node_modules/@types/semver/internals/identifiers.d.ts","../../node_modules/@types/semver/index.d.ts","../../node_modules/@types/stack-utils/index.d.ts","../../node_modules/@types/superagent/lib/agent-base.d.ts","../../node_modules/@types/superagent/lib/node/response.d.ts","../../node_modules/@types/superagent/types.d.ts","../../node_modules/@types/superagent/lib/node/agent.d.ts","../../node_modules/@types/superagent/lib/request-base.d.ts","../../node_modules/form-data/index.d.ts","../../node_modules/@types/superagent/lib/node/http2wrapper.d.ts","../../node_modules/@types/superagent/lib/node/index.d.ts","../../node_modules/@types/superagent/index.d.ts","../../node_modules/@types/supertest/index.d.ts","../../node_modules/@types/testing-library__jest-dom/matchers.d.ts","../../node_modules/@types/testing-library__jest-dom/index.d.ts","../../node_modules/@types/use-sync-external-store/index.d.ts","../../node_modules/@types/uuid/index.d.ts","../../node_modules/@types/validator/lib/isboolean.d.ts","../../node_modules/@types/validator/lib/isemail.d.ts","../../node_modules/@types/validator/lib/isfqdn.d.ts","../../node_modules/@types/validator/lib/isiban.d.ts","../../node_modules/@types/validator/lib/isiso31661alpha2.d.ts","../../node_modules/@types/validator/lib/isiso4217.d.ts","../../node_modules/@types/validator/lib/isiso6391.d.ts","../../node_modules/@types/validator/lib/istaxid.d.ts","../../node_modules/@types/validator/lib/isurl.d.ts","../../node_modules/@types/validator/index.d.ts","../../node_modules/@types/yargs-parser/index.d.ts","../../node_modules/@types/yargs/index.d.ts"],"fileIdsList":[[69,81,124],[81,124],[81,124,201],[69,70,71,72,73,81,124],[69,71,81,124],[81,124,139,174,175],[81,124,139,174],[81,124,178,181],[81,124,178,179,180],[81,124,181],[81,124,136,139,174,184,185,186],[81,124,176,185,187,189],[81,124,137,174],[81,124,194],[81,124,192,193],[81,124,196],[81,124,197],[81,124,203,206,294],[81,124,136,170,174,220,221,223],[81,124,222],[81,124,129,174],[81,121,124],[81,123,124],[124],[81,124,129,159],[81,124,125,130,136,137,144,156,167],[81,124,125,126,136,144],[76,77,78,81,124],[81,124,127,168],[81,124,128,129,137,145],[81,124,129,156,164],[81,124,130,132,136,144],[81,123,124,131],[81,124,132,133],[81,124,136],[81,124,134,136],[81,123,124,136],[81,124,136,137,138,156,167],[81,124,136,137,138,151,156,159],[81,119,124,172],[81,119,124,132,136,139,144,156,167],[81,124,136,137,139,140,144,156,164,167],[81,124,139,141,156,164,167],[79,80,81,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],[81,124,136,142],[81,124,143,167],[81,124,132,136,144,156],[81,124,145],[81,124,146],[81,123,124,147],[81,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],[81,124,149],[81,124,150],[81,124,136,151,152],[81,124,151,153,168,170],[81,124,136,156,157,159],[81,124,158,159],[81,124,156,157],[81,124,159],[81,124,160],[81,121,124,156],[81,124,136,162,163],[81,124,162,163],[81,124,129,144,156,164],[81,124,165],[81,124,144,166],[81,124,139,150,167],[81,124,129,168],[81,124,156,169],[81,124,143,170],[81,124,171],[81,124,129,136,138,147,156,167,170,172],[81,124,156,173],[81,124,231,233],[81,124,129,174,227],[81,124,229,230,233],[81,124,176,189,228],[81,124,190,229,230],[81,124,139,229],[81,124,176,187,189,228],[81,124,239],[81,124,193,237,238],[81,124,242,281],[81,124,242,266,281],[81,124,281],[81,124,242],[81,124,242,267,281],[81,124,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280],[81,124,267,281],[81,124,137,156,174,183],[81,124,139,174,184,188],[81,124,290],[81,124,177,226,283,285,291],[81,124,140,144,156,164,174],[81,124,137,139,140,141,144,156,226,284,285,286,287,288,289],[81,124,139,156,290],[81,124,137,284,285],[81,124,167,284],[81,124,291],[81,124,206,207,293],[81,124,297,298,299,300,301,302,303,304,305],[81,124,307],[81,124,199,205],[81,124,139,156,174],[81,124,203],[81,124,200,204],[81,124,209],[81,124,208,209],[81,124,208],[81,124,208,209,210,212,213,216,217,218,219],[81,124,209,213],[81,124,208,209,210,212,213,214,215],[81,124,208,213],[81,124,213,217],[81,124,209,210,211],[81,124,210],[81,124,208,209,213],[81,124,202],[81,91,95,124,167],[81,91,124,156,167],[81,86,124],[81,88,91,124,164,167],[81,124,144,164],[81,124,174],[81,86,124,174],[81,88,91,124,144,167],[81,83,84,87,90,124,136,156,167],[81,91,98,124],[81,83,89,124],[81,91,112,113,124],[81,87,91,124,159,167,174],[81,112,124,174],[81,85,86,124,174],[81,91,124],[81,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,124],[81,91,106,124],[81,91,98,99,124],[81,89,91,99,100,124],[81,90,124],[81,83,86,91,124],[81,91,95,99,100,124],[81,95,124],[81,89,91,94,124,167],[81,83,88,91,98,124],[81,124,156],[81,86,91,112,124,172,174],[63,81,124],[53,54,81,124],[51,52,53,55,56,61,81,124],[52,53,81,124],[61,81,124],[62,81,124],[53,81,124],[51,52,53,56,57,58,59,60,81,124],[51,52,63,81,124],[64,81,124],[65,81,124]],"fileInfos":[{"version":"a7297ff837fcdf174a9524925966429eb8e5feecc2cc55cc06574e6b092c1eaa","impliedFormat":1},{"version":"69684132aeb9b5642cbcd9e22dff7818ff0ee1aa831728af0ecf97d3364d5546","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"092c2bfe125ce69dbb1223c85d68d4d2397d7d8411867b5cc03cec902c233763","affectsGlobalScope":true,"impliedFormat":1},{"version":"07f073f19d67f74d732b1adea08e1dc66b1b58d77cb5b43931dee3d798a2fd53","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","impliedFormat":1},{"version":"293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","impliedFormat":1},{"version":"54f6ec6ea75acea6eb23635617252d249145edbc7bcd9d53f2d70280d2aef953","impliedFormat":1},{"version":"c25ce98cca43a3bfa885862044be0d59557be4ecd06989b2001a83dcf69620fd","impliedFormat":1},{"version":"8e71e53b02c152a38af6aec45e288cc65bede077b92b9b43b3cb54a37978bb33","impliedFormat":1},{"version":"754a9396b14ca3a4241591afb4edc644b293ccc8a3397f49be4dfd520c08acb3","impliedFormat":1},{"version":"f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","impliedFormat":1},{"version":"e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","impliedFormat":1},{"version":"de2316e90fc6d379d83002f04ad9698bc1e5285b4d52779778f454dd12ce9f44","impliedFormat":1},{"version":"25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","impliedFormat":1},{"version":"b004b3c5e264455f82c17e41eae9aa677b669171ff199148c202042bd6a3bdd2","impliedFormat":1},{"version":"5d26d2e47e2352def36f89a3e8bf8581da22b7f857e07ef3114cd52cf4813445","impliedFormat":1},{"version":"3db2efd285e7328d8014b54a7fce3f4861ebcdc655df40517092ed0050983617","impliedFormat":1},{"version":"d5d39a24c759df40480a4bfc0daffd364489702fdbcbdfc1711cde34f8739995","impliedFormat":1},{"version":"5440cce152c43adf91f7b1b7c637fe006e4fe3cb5f5156b4c5b6a7db45369b45","signature":"acecefa34a550f7df18c63f36f531ea5735ed3955d24d0a396e058139c724348"},{"version":"419f2e846ff214a315952fcc0bdd46fe533041ebf53604a69dd96308fa6dec9a","signature":"33ff0b5a255e0137097c96d38c260d7dd83d73fb2788d2bceaa28cec9f03f1f9"},{"version":"ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","impliedFormat":1},{"version":"c1a44418b7e3f9381e55dea86cc32b26ec3d5ccf6510102716aaa55023919f38","impliedFormat":99},{"version":"d88b3dc8b7055665059ea06ffafce9467fc4bdfa7cb2d7a6f4262556bb482b0d","impliedFormat":1},{"version":"b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","impliedFormat":1},{"version":"32ddc6ad753ae79571bbf28cebff7a383bf7f562ac5ef5d25c94ef7f71609d49","impliedFormat":1},{"version":"670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","impliedFormat":1},{"version":"81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","impliedFormat":1},{"version":"069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","impliedFormat":1},{"version":"a3d3f704c5339a36da3ca8c62b29072f87e86c783b8452d235992142ec71aa2d","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"d802f0e6b5188646d307f070d83512e8eb94651858de8a82d1e47f60fb6da4e2","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"763fe0f42b3d79b440a9b6e51e9ba3f3f91352469c1e4b3b67bfa4ff6352f3f4","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"7f182617db458e98fc18dfb272d40aa2fff3a353c44a89b2c0ccb3937709bfb5","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"88d9a77d2abc23a7d26625dd6dae5b57199a8693b85c9819355651c9d9bab90f","affectsGlobalScope":true,"impliedFormat":1},{"version":"a38efe83ff77c34e0f418a806a01ca3910c02ee7d64212a59d59bca6c2c38fa1","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"3fe4022ba1e738034e38ad9afacbf0f1f16b458ed516326f5bf9e4a31e9be1dc","impliedFormat":1},{"version":"a957197054b074bcdf5555d26286e8461680c7c878040d0f4e2d5509a7524944","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"e9b97d69510658d2f4199b7d384326b7c4053b9e6645f5c19e1c2a54ede427fc","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"f478f6f5902dc144c0d6d7bdc919c5177cac4d17a8ca8653c2daf6d7dc94317f","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"b200675fd112ffef97c166d0341fb33f6e29e9f27660adde7868e95c5bc98beb","impliedFormat":1},{"version":"a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","impliedFormat":1},{"version":"e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true,"impliedFormat":1},{"version":"a0a1dda070290b92da5a50113b73ecc4dd6bcbffad66e3c86503d483eafbadcf","impliedFormat":1},{"version":"59dcad36c4549175a25998f6a8b33c1df8e18df9c12ebad1dfb25af13fd4b1ce","impliedFormat":1},{"version":"9ba5b6a30cb7961b68ad4fb18dca148db151c2c23b8d0a260fc18b83399d19d3","impliedFormat":1},{"version":"3f3edb8e44e3b9df3b7ca3219ab539710b6a7f4fe16bd884d441af207e03cd57","impliedFormat":1},{"version":"528b62e4272e3ddfb50e8eed9e359dedea0a4d171c3eb8f337f4892aac37b24b","impliedFormat":1},{"version":"d71535813e39c23baa113bc4a29a0e187b87d1105ccc8c5a6ebaca38d9a9bff2","impliedFormat":1},{"version":"8cf7e92bdb2862c2d28ba4535c43dc599cfbc0025db5ed9973d9b708dcbe3d98","affectsGlobalScope":true,"impliedFormat":1},{"version":"278e70975bd456bba5874eaee17692355432e8d379b809a97f6af0eee2b702d8","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true,"impliedFormat":1},{"version":"636302a00dfd1f9fe6e8e91e4e9350c6518dcc8d51a474e4fc3a9ba07135100b","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"933921f0bb0ec12ef45d1062a1fc0f27635318f4d294e4d99de9a5493e618ca2","impliedFormat":1},{"version":"71a0f3ad612c123b57239a7749770017ecfe6b66411488000aba83e4546fde25","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"e1ce1d622f1e561f6cdf246372ead3bbc07ce0342024d0e9c7caf3136f712698","impliedFormat":1},{"version":"c878f74b6d10b267f6075c51ac1d8becd15b4aa6a58f79c0cfe3b24908357f60","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"27e4532aaaa1665d0dd19023321e4dc12a35a741d6b8e1ca3517fcc2544e0efe","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"8c2ad42d5d1a2e8e6112625767f8794d9537f1247907378543106f7ba6c7df90","affectsGlobalScope":true,"impliedFormat":1},{"version":"f0be1b8078cd549d91f37c30c222c2a187ac1cf981d994fb476a1adc61387b14","affectsGlobalScope":true,"impliedFormat":1},{"version":"0aaed1d72199b01234152f7a60046bc947f1f37d78d182e9ae09c4289e06a592","impliedFormat":1},{"version":"98ffdf93dfdd206516971d28e3e473f417a5cfd41172e46b4ce45008f640588e","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"12e8ce658dd17662d82fb0509d2057afc5e6ee30369a2e9e0957eff725b1f11d","affectsGlobalScope":true,"impliedFormat":1},{"version":"74736930d108365d7bbe740c7154706ccfb1b2a3855a897963ab3e5c07ecbf19","impliedFormat":1},{"version":"858f999b3e4a45a4e74766d43030941466460bf8768361d254234d5870480a53","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"63b05afa6121657f25e99e1519596b0826cda026f09372c9100dfe21417f4bd6","affectsGlobalScope":true,"impliedFormat":1},{"version":"3797dd6f4ea3dc15f356f8cdd3128bfa18122213b38a80d6c1f05d8e13cbdad8","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1},{"version":"104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","impliedFormat":1},{"version":"cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","impliedFormat":1},{"version":"0dc6940ff35d845686a118ee7384713a84024d60ef26f25a2f87992ec7ddbd64","impliedFormat":1},{"version":"e2b48abff5a8adc6bb1cd13a702b9ef05e6045a98e7cfa95a8779b53b6d0e69d","impliedFormat":1},{"version":"f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","impliedFormat":1},{"version":"a4a39b5714adfcadd3bbea6698ca2e942606d833bde62ad5fb6ec55f5e438ff8","impliedFormat":1},{"version":"bbc1d029093135d7d9bfa4b38cbf8761db505026cc458b5e9c8b74f4000e5e75","impliedFormat":1},{"version":"1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","impliedFormat":1},{"version":"d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","impliedFormat":1},{"version":"b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","impliedFormat":1},{"version":"baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","impliedFormat":1},{"version":"2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed","impliedFormat":1},{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true,"impliedFormat":1},{"version":"b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","impliedFormat":1},{"version":"0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a","impliedFormat":1},{"version":"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","impliedFormat":1},{"version":"afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","impliedFormat":1},{"version":"742d4b7b02ffc3ba3c4258a3d196457da2b3fec0125872fd0776c50302a11b9d","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"03566a51ebc848dec449a4ed69518e9f20caa6ac123fa32676aaaabe64adae8e","impliedFormat":1},{"version":"b2d0630483bf337ef9dac326c3334a245aa4946e9f60f12baf7da5be44beafbb","impliedFormat":1},{"version":"035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","impliedFormat":1},{"version":"a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","impliedFormat":1},{"version":"5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","impliedFormat":1},{"version":"cdcc132f207d097d7d3aa75615ab9a2e71d6a478162dde8b67f88ea19f3e54de","impliedFormat":1},{"version":"0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","impliedFormat":1},{"version":"c085e9aa62d1ae1375794c1fb927a445fa105fed891a7e24edbb1c3300f7384a","impliedFormat":1},{"version":"f315e1e65a1f80992f0509e84e4ae2df15ecd9ef73df975f7c98813b71e4c8da","impliedFormat":1},{"version":"5b9586e9b0b6322e5bfbd2c29bd3b8e21ab9d871f82346cb71020e3d84bae73e","impliedFormat":1},{"version":"3e70a7e67c2cb16f8cd49097360c0309fe9d1e3210ff9222e9dac1f8df9d4fb6","impliedFormat":1},{"version":"ab68d2a3e3e8767c3fba8f80de099a1cfc18c0de79e42cb02ae66e22dfe14a66","impliedFormat":1},{"version":"d96cc6598148bf1a98fb2e8dcf01c63a4b3558bdaec6ef35e087fd0562eb40ec","impliedFormat":1},{"version":"f8db4fea512ab759b2223b90ecbbe7dae919c02f8ce95ec03f7fb1cf757cfbeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"19990350fca066265b2c190c9b6cde1229f35002ea2d4df8c9e397e9942f6c89","impliedFormat":99},{"version":"8fb8fdda477cd7382477ffda92c2bb7d9f7ef583b1aa531eb6b2dc2f0a206c10","impliedFormat":99},{"version":"66995b0c991b5c5d42eff1d950733f85482c7419f7296ab8952e03718169e379","impliedFormat":99},{"version":"9863f888da357e35e013ca3465b794a490a198226bd8232c2f81fb44e16ff323","impliedFormat":99},{"version":"b4c6184d78303b0816e779a48bef779b15aea4a66028eb819aac0abee8407dea","impliedFormat":99},{"version":"db085d2171d48938a99e851dafe0e486dce9859e5dfa73c21de5ed3d4d6fb0c5","impliedFormat":99},{"version":"62a3ad1ddd1f5974b3bf105680b3e09420f2230711d6520a521fab2be1a32838","impliedFormat":99},{"version":"a77be6fc44c876bc10c897107f84eaba10790913ebdcad40fcda7e47469b2160","impliedFormat":99},{"version":"06cf55b6da5cef54eaaf51cdc3d4e5ebf16adfdd9ebd20cec7fe719be9ced017","impliedFormat":99},{"version":"91f5dbcdb25d145a56cffe957ec665256827892d779ef108eb2f3864faff523b","impliedFormat":99},{"version":"052ba354bab8fb943e0bc05a0769f7b81d7c3b3c6cd0f5cfa53c7b2da2a525c5","impliedFormat":99},{"version":"927955a3de5857e0a1c575ced5a4245e74e6821d720ed213141347dd1870197f","impliedFormat":99},{"version":"fec804d54cd97dd77e956232fc37dc13f53e160d4bbeeb5489e86eeaa91f7ebd","impliedFormat":99},{"version":"03c258e060b7da220973f84b89615e4e9850e9b5d30b3a8e4840b3e3268ae8eb","impliedFormat":1},{"version":"fd0589ca571ad090b531d8c095e26caa53d4825c64d3ff2b2b1ab95d72294175","impliedFormat":1},{"version":"669843ecafb89ae1e944df06360e8966219e4c1c34c0d28aa2503272cdd444a7","affectsGlobalScope":true,"impliedFormat":1},{"version":"96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","impliedFormat":1},{"version":"abd6ccdaae9905ea2ec85488fdce744930862327633eebd40d429511f6a1d5da","impliedFormat":1},{"version":"b0f9ef6423d6b29dde29fd60d83d215796b2c1b76bfca28ac374ae18702cfb8e","impliedFormat":1},{"version":"fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","impliedFormat":1},{"version":"86ea91bfa7fef1eeb958056f30f1db4e0680bc9b5132e5e9d6e9cfd773c0c4fd","affectsGlobalScope":true,"impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"ff155930718467b27e379e4a195e4607ce277f805cad9d2fa5f4fd5dec224df6","affectsGlobalScope":true,"impliedFormat":1},{"version":"818e7c86776c67f49dbd781d445e13297b59aa7262e54b065b1332d7dcc6f59a","impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"03c92769f389dbd9e45232f7eb01c3e0f482b62555aaf2029dcbf380d5cee9e4","impliedFormat":1},{"version":"32d7f70fd3498bc76a46dab8b03af4215f445f490f8e213c80cf06b636a4e413","impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"17668c1aab598920796050ee5a00d961ede5e92595f6ac8908a975ed75a537e5","impliedFormat":1},{"version":"65ff5a0aefd7817a03c1ad04fee85c9cdd3ec415cc3c9efec85d8008d4d5e4ee","impliedFormat":1},{"version":"549df62b64a71004aee17685b445a8289013daf96246ce4d9b087d13d7a27a61","affectsGlobalScope":true,"impliedFormat":1},{"version":"40a1b33c67109be18a961127873e8ba198429eacf11a468b4a052cddc9a73f8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"17ed71200119e86ccef2d96b73b02ce8854b76ad6bd21b5021d4269bec527b5f","impliedFormat":1},{"version":"4ef960df4f672e93b479f88211ed8b5cfa8a598b97aafa3396cacdc3341e3504","impliedFormat":1},{"version":"cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","impliedFormat":1},{"version":"9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","impliedFormat":1},{"version":"c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","impliedFormat":1},{"version":"8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","impliedFormat":1},{"version":"86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","impliedFormat":1},{"version":"42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","impliedFormat":1},{"version":"ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","impliedFormat":1},{"version":"83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","impliedFormat":1},{"version":"1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","impliedFormat":1},{"version":"0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","impliedFormat":1},{"version":"cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","impliedFormat":1},{"version":"c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","impliedFormat":1},{"version":"f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","impliedFormat":1},{"version":"0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","impliedFormat":1},{"version":"7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","impliedFormat":1},{"version":"bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","impliedFormat":1},{"version":"52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","impliedFormat":1},{"version":"770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","impliedFormat":1},{"version":"d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","impliedFormat":1},{"version":"799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","impliedFormat":1},{"version":"2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","impliedFormat":1},{"version":"9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","impliedFormat":1},{"version":"397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","impliedFormat":1},{"version":"a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","impliedFormat":1},{"version":"a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","impliedFormat":1},{"version":"c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","impliedFormat":1},{"version":"4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","impliedFormat":1},{"version":"f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","impliedFormat":1},{"version":"cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","impliedFormat":1},{"version":"b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","impliedFormat":1},{"version":"c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","impliedFormat":1},{"version":"14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","impliedFormat":1},{"version":"a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","impliedFormat":1},{"version":"f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","impliedFormat":1},{"version":"3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","impliedFormat":1},{"version":"662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","impliedFormat":1},{"version":"c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","impliedFormat":1},{"version":"2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","impliedFormat":1},{"version":"34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","impliedFormat":1},{"version":"844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","impliedFormat":1},{"version":"ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","impliedFormat":1},{"version":"e7bb49fac2aa46a13011b5eb5e4a8648f70a28aea1853fab2444dd4fcb4d4ec7","impliedFormat":1},{"version":"464e45d1a56dae066d7e1a2f32e55b8de4bfb072610c3483a4091d73c9924908","impliedFormat":1},{"version":"da318e126ac39362c899829547cc8ee24fa3e8328b52cdd27e34173cf19c7941","impliedFormat":1},{"version":"24bd01a91f187b22456c7171c07dbf44f3ad57ebd50735aab5c13fa23d7114b4","impliedFormat":1},{"version":"4738eefeaaba4d4288a08c1c226a76086095a4d5bcc7826d2564e7c29da47671","impliedFormat":1},{"version":"736097ddbb2903bef918bb3b5811ef1c9c5656f2a73bd39b22a91b9cc2525e50","impliedFormat":1},{"version":"dbec715e9e82df297e49e3ed0029f6151aa40517ebfd6fcdba277a8a2e1d3a1b","impliedFormat":1},{"version":"097f1f8ca02e8940cfdcca553279e281f726485fa6fb214b3c9f7084476f6bcc","impliedFormat":1},{"version":"8f75e211a2e83ff216eb66330790fb6412dcda2feb60c4f165c903cf375633ee","impliedFormat":1},{"version":"dbe69644ab6e699ad2ef740056c637c34f3348af61d3764ff555d623703525db","impliedFormat":1},{"version":"3f36c0c7508302f3dca3dc5ab0a66d822b2222f70c24bb1796ddb5c9d1168a05","impliedFormat":1},{"version":"b23d5b89c465872587e130f427b39458b8e3ad16385f98446e9e86151ba6eb15","affectsGlobalScope":true,"impliedFormat":1},{"version":"61f41da9aaa809e5142b1d849d4e70f3e09913a5cb32c629bf6e61ef27967ff7","impliedFormat":1},{"version":"7d2b7fe4adb76d8253f20e4dbdce044f1cdfab4902ec33c3604585f553883f7d","impliedFormat":1},{"version":"c6cdcd12d577032b84eed1de4d2de2ae343463701a25961b202cff93989439fb","impliedFormat":1},{"version":"203d75f653988a418930fb16fda8e84dea1fac7e38abdaafd898f257247e0860","impliedFormat":1},{"version":"c5b3da7e2ecd5968f723282aba49d8d1a2e178d0afe48998dad93f81e2724091","impliedFormat":1},{"version":"efd2860dc74358ffa01d3de4c8fa2f966ae52c13c12b41ad931c078151b36601","impliedFormat":1},{"version":"09acacae732e3cc67a6415026cfae979ebe900905500147a629837b790a366b3","impliedFormat":1},{"version":"f7b622759e094a3c2e19640e0cb233b21810d2762b3e894ef7f415334125eb22","impliedFormat":1},{"version":"99236ea5c4c583082975823fd19bcce6a44963c5c894e20384bc72e7eccf9b03","impliedFormat":1},{"version":"f6688a02946a3f7490aa9e26d76d1c97a388e42e77388cbab010b69982c86e9e","impliedFormat":1},{"version":"9f642953aba68babd23de41de85d4e97f0c39ef074cb8ab8aa7d55237f62aff6","impliedFormat":1},{"version":"529ac413f6eada3a1780c4050f4d4853488fc00652f45101737863e9ac519bff","impliedFormat":1},{"version":"bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","impliedFormat":1},{"version":"26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","impliedFormat":1}],"root":[65,66],"options":{"composite":true,"declaration":true,"declarationMap":true,"esModuleInterop":true,"inlineSources":false,"noUnusedLocals":false,"noUnusedParameters":false,"outDir":"./dist","rootDir":"./src","skipLibCheck":true,"strict":true},"referencedMap":[[71,1],[69,2],[199,2],[202,3],[201,2],[67,2],[74,4],[70,1],[72,5],[73,1],[75,2],[176,6],[175,7],[177,2],[182,8],[181,9],[180,10],[178,2],[187,11],[190,12],[191,13],[195,14],[192,2],[194,15],[188,2],[196,2],[197,16],[198,17],[207,18],[222,19],[223,20],[179,2],[224,2],[225,21],[226,2],[183,2],[227,2],[121,22],[122,22],[123,23],[81,24],[124,25],[125,26],[126,27],[76,2],[79,28],[77,2],[78,2],[127,29],[128,30],[129,31],[130,32],[131,33],[132,34],[133,34],[135,35],[134,36],[136,37],[137,38],[138,39],[120,40],[80,2],[139,41],[140,42],[141,43],[174,44],[142,45],[143,46],[144,47],[145,48],[146,49],[147,50],[148,51],[149,52],[150,53],[151,54],[152,54],[153,55],[154,2],[155,2],[156,56],[158,57],[157,58],[159,59],[160,60],[161,61],[162,62],[163,63],[164,64],[165,65],[166,66],[167,67],[168,68],[169,69],[170,70],[171,71],[172,72],[173,73],[234,74],[231,75],[236,76],[235,77],[233,78],[232,77],[230,79],[228,11],[229,80],[237,2],[185,2],[186,2],[240,81],[238,2],[239,82],[241,2],[266,83],[267,84],[242,85],[245,85],[264,83],[265,83],[255,83],[254,86],[252,83],[247,83],[260,83],[258,83],[262,83],[246,83],[259,83],[263,83],[248,83],[249,83],[261,83],[243,83],[250,83],[251,83],[253,83],[257,83],[268,87],[256,83],[244,83],[281,88],[280,2],[275,87],[277,89],[276,87],[269,87],[270,87],[272,87],[274,87],[278,89],[279,89],[271,89],[273,89],[184,90],[189,91],[282,2],[291,92],[283,2],[286,93],[289,94],[290,95],[284,96],[287,97],[285,98],[292,99],[294,100],[293,2],[221,2],[295,2],[296,2],[306,101],[297,2],[298,2],[299,2],[300,2],[301,2],[302,2],[303,2],[304,2],[305,2],[307,2],[308,102],[68,2],[82,2],[200,2],[193,2],[206,103],[288,104],[204,105],[205,106],[210,107],[219,108],[208,2],[209,109],[220,110],[215,111],[216,112],[214,113],[218,114],[212,115],[211,116],[217,117],[213,108],[203,118],[1,2],[49,2],[50,2],[9,2],[10,2],[14,2],[13,2],[3,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[4,2],[23,2],[24,2],[5,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[6,2],[33,2],[34,2],[35,2],[36,2],[7,2],[40,2],[37,2],[38,2],[39,2],[41,2],[8,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[2,2],[12,2],[11,2],[98,119],[108,120],[97,119],[118,121],[89,122],[88,123],[117,124],[111,125],[116,126],[91,127],[105,128],[90,129],[114,130],[86,131],[85,124],[115,132],[87,133],[92,134],[93,2],[96,134],[83,2],[119,135],[109,136],[100,137],[101,138],[103,139],[99,140],[102,141],[112,124],[94,142],[95,143],[104,144],[84,145],[107,136],[106,134],[110,2],[113,146],[64,147],[55,148],[62,149],[57,2],[58,2],[56,150],[59,151],[51,2],[52,2],[63,152],[54,153],[60,2],[61,154],[53,155],[65,156],[66,157]],"latestChangedDtsFile":"./dist/env.d.ts","version":"5.8.3"}
</file>

<file path=".gitignore">
# Node
node_modules

# Yarn Berry cache
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml

# Plug’n’Play files
.pnp.cjs
.pnp.loader.mjs

# Build output
.next
dist
out
build
coverage

# Misc
.env*
.DS_Store
</file>

<file path=".yarnrc.yml">
# .yarnrc.yml
cacheFolder: .yarn/cache

logFilters:
  - code: YN0086
    level: discard
  - code: YN0060
    level: discard
  - code: YN0002
    level: error

nodeLinker: node-modules

packageExtensions:
  "@angular-devkit/core@*":
    peerDependencies:
      "@types/ajv": "*"
      "@types/chokidar": "*"
  "@angular-devkit/schematics-cli@*":
    peerDependencies:
      "@types/chokidar": "*"
      chokidar: "*"
  "@angular-devkit/schematics@*":
    peerDependencies:
      "@types/chokidar": "*"
      chokidar: "*"

# Denne linje specificerer stien til din vendored Yarn-version
yarnPath: .yarn/releases/yarn-4.9.1.cjs
</file>

<file path="apps/api/src/auth/auth.controller.ts">
// apps/api/src/auth/auth.controller.ts
import {
  Controller,
  Request, // Standard Request type fra @nestjs/common
  Post,
  UseGuards,
  Get,
  HttpCode,
  HttpStatus,
  Body,
  ValidationPipe,
} from '@nestjs/common';
import { AuthService } from './auth.service';
import { LocalAuthGuard } from './guards/local-auth.guard';
import { JwtAuthGuard } from './guards/jwt-auth.guard';
import { LoginThrottlerGuard } from './guards/login-throttler.guard';
import { User as CoreUser } from '@repo/core'; // Importer CoreUser fra @repo/core
import { LoginDto } from './dto/login.dto';
import { ForgotPasswordDto } from './dto/forgot-password.dto';
import { ResetPasswordDto } from './dto/reset-password.dto';
import { RefreshTokenDto } from './dto/refresh-token.dto';

// Definer en type for request objektet, der indeholder brugeren efter autentificering
interface AuthenticatedRequest extends globalThis.Request {
  // Eller Express.Request hvis du bruger @types/express
  user: Omit<CoreUser, 'passwordHash'>; // req.user er nu af typen Omit<CoreUser, 'passwordHash'>
}

@Controller('auth')
export class AuthController {
  constructor(private authService: AuthService) {}

  @UseGuards(LoginThrottlerGuard, LocalAuthGuard)
  @Post('login')
  @HttpCode(HttpStatus.OK)
  async login(
    @Request() req: AuthenticatedRequest,
    // loginDto er her for Swagger og klarhed, validering sker i LocalStrategy/AuthService
    @Body() _loginDto: LoginDto, // Prefix with underscore to indicate it's intentionally unused
  ): Promise<{ access_token: string; refresh_token: string }> {
    // req.user er sat af LocalStrategy (via AuthService.validateUser), som nu returnerer CoreUser formatet
    return this.authService.login(req.user);
  }

  @UseGuards(JwtAuthGuard)
  @Get('profile')
  getProfile(
    @Request() req: AuthenticatedRequest,
  ): Omit<CoreUser, 'passwordHash'> {
    // req.user er sat af JwtStrategy, som nu returnerer Omit<PrismaUser, 'passwordHash'>,
    // men for konsistens med CoreUser, bør JwtStrategy også mappe til CoreUser hvis der er forskelle.
    // I dette tilfælde er de ens nok efter fjernelse af passwordHash.
    return req.user;
  }

  @UseGuards(LoginThrottlerGuard)
  @Post('forgot-password')
  @HttpCode(HttpStatus.OK)
  async forgotPassword(
    @Body(new ValidationPipe()) forgotPasswordDto: ForgotPasswordDto,
  ): Promise<{ message: string }> {
    return this.authService.forgotPassword(forgotPasswordDto.email);
  }

  @UseGuards(LoginThrottlerGuard)
  @Post('reset-password')
  @HttpCode(HttpStatus.OK)
  async resetPassword(
    @Body(new ValidationPipe()) resetPasswordDto: ResetPasswordDto,
  ): Promise<{ message: string }> {
    return this.authService.resetPassword(resetPasswordDto);
  }

  @Post('refresh')
  @HttpCode(HttpStatus.OK)
  async refreshToken(
    @Body(new ValidationPipe()) refreshTokenDto: RefreshTokenDto,
  ): Promise<{ access_token: string }> {
    return this.authService.refreshToken(refreshTokenDto.refresh_token);
  }
}
</file>

<file path="apps/api/src/auth/auth.module.ts">
// File: apps/api/src/auth/auth.module.ts
import { Module } from '@nestjs/common';
import { AuthService } from './auth.service';
import { AuthController } from './auth.controller';
import { UsersModule } from '../users/users.module';
import { PassportModule } from '@nestjs/passport';
import { JwtModule } from '@nestjs/jwt';
import { LocalStrategy } from './strategies/local/local';
import { JwtStrategy } from './strategies/jwt/jwt';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { PersistenceModule } from '../persistence/persistence.module';

@Module({
  imports: [
    UsersModule,
    PassportModule.register({ defaultStrategy: 'jwt' }),
    JwtModule.registerAsync({
      imports: [ConfigModule],
      inject: [ConfigService],
      useFactory: async (configService: ConfigService) => ({
        secret: configService.get<string>('JWT_SECRET'),
        signOptions: { expiresIn: configService.get<string>('JWT_EXPIRES_IN') },
      }),
    }),
    ConfigModule, // global via AppModule, but imported here for clarity
    PersistenceModule,
  ],
  controllers: [AuthController],
  providers: [AuthService, LocalStrategy, JwtStrategy],
  exports: [AuthService, JwtModule],
})
export class AuthModule {}
</file>

<file path="apps/api/src/users/dto/create-user.dto.ts">
// apps/api/src/users/dto/create-user.dto.ts
import {
  IsEmail,
  IsNotEmpty,
  IsString,
  MinLength,
  IsEnum,
  IsOptional,
  Matches,
} from 'class-validator';
import { Role } from '@repo/core'; // Importer Role enum fra @repo/core

export class CreateUserDto {
  @IsEmail({}, { message: 'Email skal være en gyldig email-adresse.' })
  @IsNotEmpty({ message: 'Email må ikke være tom.' })
  email: string;

  @IsString({ message: 'Password skal være en streng.' })
  @MinLength(8, { message: 'Password skal være mindst 8 tegn langt.' })
  @IsNotEmpty({ message: 'Password må ikke være tomt.' })
  @Matches(/((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {
    message:
      'Passwordet er for svagt. Det skal indeholde store og små bogstaver, tal og/eller specialtegn.',
  })
  password: string;

  @IsString({ message: 'Navn skal være en streng.' })
  @IsOptional()
  name?: string;

  // Bruger nu Role enum fra @repo/core
  @IsEnum(Role, {
    message: 'Rolle skal være en gyldig værdi (USER eller ADMIN).',
  })
  @IsOptional() // Gør rollen valgfri ved oprettelse, så den kan falde tilbage til default i Prisma schema
  role?: Role;
}
</file>

<file path="apps/web/pages/_app.tsx">
// apps/web/pages/_app.tsx
import type { AppProps } from "next/app";
import { Provider as ReduxProvider } from "react-redux";
import store from "../src/store";
import { AuthProvider } from '../src/context/AuthContext';
import { ThemeProvider } from '../src/context/ThemeContext';
import { ProgressProvider } from '../src/context/ProgressContext';
import Layout from '../src/components/layout/Layout';
import "../src/styles/global.css";
import { useRouter } from 'next/router';
import { useEffect } from 'react';
import { setupOfflineSyncListeners } from '../src/utils/offlineSync';

// Pages that don't use the main layout
const noLayoutPages = ['/login', '/signup', '/forgot-password', '/reset-password'];

function MyApp({ Component, pageProps }: AppProps) {
  const router = useRouter();
  const shouldUseLayout = !noLayoutPages.includes(router.pathname);
  
  // Set up offline sync listeners
  useEffect(() => {
    const cleanup = setupOfflineSyncListeners();
    return () => {
      if (cleanup) {
        cleanup();
      }
    };
  }, []);

  return (
    <ReduxProvider store={store}>
      <ThemeProvider>
        <AuthProvider>
          <ProgressProvider>
            {shouldUseLayout ? (
              <Layout>
                <Component {...pageProps} />
              </Layout>
            ) : (
              <Component {...pageProps} />
            )}
          </ProgressProvider>
        </AuthProvider>
      </ThemeProvider>
    </ReduxProvider>
  );
}

export default MyApp;
</file>

<file path="apps/web/tailwind.config.js">
const sharedConfig = require("@repo/config/tailwind.config.js");

module.exports = {
  // Extend the shared config
  ...sharedConfig,
  // Enable dark mode
  darkMode: 'class',
  // Override the content paths with more specific ones for this app
  content: [
    // Include UI components from packages - be more specific to avoid node_modules
    "../../packages/ui/src/**/*.{js,ts,jsx,tsx}",
    "../../packages/ui/components/**/*.{js,ts,jsx,tsx}",
    // Local app files
    "./src/**/*.{js,ts,jsx,tsx}",
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        // Add custom colors for your theme
        primary: {
          50: '#e6f0ff',
          100: '#cce0ff',
          200: '#99c2ff',
          300: '#66a3ff',
          400: '#3385ff',
          500: '#0066ff',
          600: '#0052cc',
          700: '#003d99',
          800: '#002966',
          900: '#001433',
        },
        gray: {
          750: '#2d3748', // Adding the custom gray-750 color
        },
      },
    },
  },
};
</file>

<file path="packages/config/nginx.conf">
# nginx.conf - Konfigureret til Docker-frit lokalt setup

# Grundlæggende event-blok (kan være tom for simple konfigurationer)
events {
    # worker_connections 1024; # Eksempel på en standardindstilling
}

# HTTP-blokken definerer servere og hvordan requests håndteres
http {

    # Definerer en server, der lytter på port 80 (standard HTTP port)
    server {
        listen 80;
        server_name localhost; # Serveren svarer på requests til localhost

        # Location block for API-kald (alt under /api/)
        location /api/ {
            # Sætter headers for at proxy'en fungerer korrekt
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Viderestiller requests til NestJS API'en, der kører lokalt på port 5002
            # Ændret fra host.docker.internal til localhost
            proxy_pass http://localhost:5002/;

            # Nødvendigt for WebSockets, hvis din API bruger dem
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Location block for Next.js Hot Module Replacement (HMR) WebSockets
        # Dette er specifikt for Next.js udviklingsserverens live-reloading funktionalitet
        location /_next/webpack-hmr {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;

            # Viderestiller til Next.js dev serveren, der kører lokalt på port 3000
            # Ændret fra host.docker.internal til localhost
            proxy_pass http://localhost:3000;

            # Nødvendigt for WebSockets
            proxy_http_version 1.1;
            proxy_set_header Connection "upgrade";
            proxy_set_header Upgrade $http_upgrade;
        }

        # Location block for alle andre requests (rod-path og alt andet)
        # Disse vil blive håndteret af Next.js web-applikationen
        location / {
            # Viderestiller til Next.js appen, der kører lokalt på port 3000
            proxy_pass http://localhost:3000;

            # Standard headers for proxying
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
</file>

<file path="packages/core/tsconfig.json">
{
  "extends": "../tsconfig/base.json",
  "compilerOptions": {
    "composite": true,
    "declaration": true,
    "declarationMap": true,
    "outDir": "dist",
    "rootDir": "src",
    "baseUrl": "./src",
    "module": "commonjs",
    "target": "es2017",
    "sourceMap": true
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist"]
}
</file>

<file path="package-scripts.js">
// package-scripts.js
const path = require("path");

// Stier til de forskellige applikationer i monorepoet
// Bruges til at konstruere kommandoer, der køres i de specifikke mapper
const apiPath = path.resolve(__dirname, "apps/api");
const webPath = path.resolve(__dirname, "apps/web");

// Stier til output-mapper for CI (Continuous Integration) builds
// Bruges typisk efter 'turbo prune' har isoleret en app og dens dependencies
const ciApiPath = path.resolve(__dirname, "out/apps/api");
const ciWebPath = path.resolve(__dirname, "out/apps/web");

module.exports = {
  scripts: {
    // 'prepare' scripts køres typisk for at sætte projektet op
    prepare: {
      // Default 'prepare' script kører forberedelsesscripts for både web og api
      default: `nps prepare.web prepare.api`,
      // Forberedelsesscript for 'web' appen (kører 'yarn install')
      web: `yarn`,
      // Forberedelsesscript for 'api' appen (kører nu kun prisma migrate dev)
      api: `nps prisma.migrate.dev`, 
      // CI specifikke forberedelsesscripts
      ci: {
        // For 'web': Pruner monorepoet, navigerer til output mappen, og installerer dependencies
        web: `npx turbo prune --scope=web && cd out && yarn install --frozen-lockfile`,
        // For 'api': Pruner, navigerer, installerer, og genererer Prisma client
        api: `npx turbo prune --scope=api && cd out && yarn install --frozen-lockfile && nps prisma.generate`,
      },
    },
    // 'test' scripts til at køre tests for applikationerne
    test: {
      // Default 'test' script kører tests for både web og api
      default: `nps test.web test.api`,
      // Kører tests for 'web' appen
      web: `cd ${webPath} && yarn test`,
      // Kører tests for 'api' appen
      api: `cd ${apiPath} && yarn test`,
      // CI specifikke test scripts
      ci: {
        default: `nps test.ci.web test.ci.api`,
        web: `cd ${ciWebPath} && yarn test:ci`,
        api: `cd ${ciApiPath} && yarn test:ci`,
      },
      // Scripts til at køre tests i watch mode
      watch: {
        default: `nps test.watch.web test.watch.api`,
        web: `cd ${webPath} && yarn test:watch`,
        api: `cd ${apiPath} && yarn test:watch`,
      },
    },
    // 'prisma' scripts til database-relaterede operationer
    prisma: {
      // Genererer Prisma client
      generate: `cd ${apiPath} && npx prisma generate`,
      // Åbner Prisma Studio (GUI til databasen)
      studio: `cd ${apiPath} && npx prisma studio`,
      // Kører database migrationer i udviklingsmiljøet
      migrate: {
        dev: `cd ${apiPath} && npx prisma migrate dev`,
      },
    },
    // 'build' scripts til at bygge applikationerne
    build: {
      // Default 'build' script bruger Turborepo til at bygge alle apps/packages
      default: "npx turbo run build",
      // CI specifikke build scripts (kører i 'out' mappen efter 'turbo prune')
      ci: {
        web: "cd out && npm run build", // Bemærk: Bruger 'npm run build' her, overvej at ændre til 'yarn build' for konsistens
        api: "cd out && npm run build", // Bemærk: Bruger 'npm run build' her, overvej at ændre til 'yarn build' for konsistens
      },
    },
    // 'dev' script til at starte udviklingsservere for alle apps (typisk parallelt via Turborepo)
    dev: "npx turbo run dev",
  },
};
</file>

<file path="apps/api/src/auth/strategies/jwt/jwt.ts">
// File: apps/api/src/auth/strategies/jwt/jwt.ts
import { ExtractJwt, Strategy } from 'passport-jwt';
import { PassportStrategy } from '@nestjs/passport';
import { Injectable, UnauthorizedException } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { UsersService } from '../../../users/users.service';
import { User as PrismaUser } from '@prisma/client';
import { User as CoreUser, Role as CoreRole } from '@repo/core';

export interface JwtPayload {
  email: string;
  sub: number;
}

@Injectable()
export class JwtStrategy extends PassportStrategy(Strategy) {
  constructor(
    private readonly configService: ConfigService,
    private readonly usersService: UsersService,
  ) {
    super({
      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),
      ignoreExpiration: false,
      secretOrKey: configService.get<string>('JWT_SECRET'),
    });
  }

  private mapToCoreUser(user: PrismaUser): Omit<CoreUser, 'passwordHash'> {
    const { passwordHash, passwordResetToken, passwordResetExpires, ...rest } =
      user;
    return {
      ...rest,
      role: user.role as CoreRole,
      createdAt: new Date(user.createdAt),
      updatedAt: new Date(user.updatedAt),
    };
  }

  async validate(payload: JwtPayload): Promise<Omit<CoreUser, 'passwordHash'>> {
    const user = await this.usersService.findOneById(payload.sub);
    if (!user) throw new UnauthorizedException('Invalid token');
    return this.mapToCoreUser(user);
  }
}
</file>

<file path="apps/api/src/persistence/prisma/prisma.service.spec.ts">
import { Test, TestingModule } from '@nestjs/testing';
import { PrismaService } from './prisma.service';
import { type PrismaClient } from '@prisma/client';
import { OnModuleInit } from '@nestjs/common';

// Stubbed methods
const mockConnect = jest.fn().mockResolvedValue(undefined);
const mockDisconnect = jest.fn().mockResolvedValue(undefined);

// Mock PrismaClient as a class—so PrismaService (which extends it) still has onModuleInit()
jest.mock('@prisma/client', () => {
  return {
    PrismaClient: class {
      $connect = mockConnect;
      $disconnect = mockDisconnect;
    },
  };
});

describe('PrismaService', () => {
  let service: PrismaService & OnModuleInit;

  beforeEach(async () => {
    // Reset call counts before each test
    mockConnect.mockClear();
    mockDisconnect.mockClear();
    // Remove the mockClear call on PrismaClient since it's not a jest.Mock

    const moduleRef: TestingModule = await Test.createTestingModule({
      providers: [PrismaService],
    }).compile();

    service = moduleRef.get<PrismaService>(PrismaService);
  });

  it('should be defined and instantiate PrismaClient', () => {
    expect(service).toBeDefined();
    // We can't check constructor calls with this mock approach
    // Just verify the service exists
  });

  it('should call $connect on module init', async () => {
    // Make sure onModuleInit is available on the service
    expect(typeof service.onModuleInit).toBe('function');
    await service.onModuleInit();
    expect(mockConnect).toHaveBeenCalledTimes(1);
  });
});
</file>

<file path="apps/api/tsconfig.build.tsbuildinfo">
{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../node_modules/typescript/lib/lib.webworker.importscripts.d.ts","../../node_modules/typescript/lib/lib.scripthost.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.decorators.d.ts","../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../node_modules/typescript/lib/lib.es2017.full.d.ts","./node_modules/reflect-metadata/index.d.ts","./node_modules/@nestjs/common/decorators/core/bind.decorator.d.ts","./node_modules/@nestjs/common/interfaces/abstract.interface.d.ts","./node_modules/@nestjs/common/interfaces/controllers/controller-metadata.interface.d.ts","./node_modules/@nestjs/common/interfaces/controllers/controller.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/arguments-host.interface.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/exception-filter.interface.d.ts","../../node_modules/rxjs/dist/types/internal/subscription.d.ts","../../node_modules/rxjs/dist/types/internal/subscriber.d.ts","../../node_modules/rxjs/dist/types/internal/operator.d.ts","../../node_modules/rxjs/dist/types/internal/observable.d.ts","../../node_modules/rxjs/dist/types/internal/types.d.ts","../../node_modules/rxjs/dist/types/internal/operators/audit.d.ts","../../node_modules/rxjs/dist/types/internal/operators/audittime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/buffer.d.ts","../../node_modules/rxjs/dist/types/internal/operators/buffercount.d.ts","../../node_modules/rxjs/dist/types/internal/operators/buffertime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/buffertoggle.d.ts","../../node_modules/rxjs/dist/types/internal/operators/bufferwhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/catcherror.d.ts","../../node_modules/rxjs/dist/types/internal/operators/combinelatestall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/combineall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/combinelatest.d.ts","../../node_modules/rxjs/dist/types/internal/operators/combinelatestwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concat.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concatall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concatmap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concatmapto.d.ts","../../node_modules/rxjs/dist/types/internal/operators/concatwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/connect.d.ts","../../node_modules/rxjs/dist/types/internal/operators/count.d.ts","../../node_modules/rxjs/dist/types/internal/operators/debounce.d.ts","../../node_modules/rxjs/dist/types/internal/operators/debouncetime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/defaultifempty.d.ts","../../node_modules/rxjs/dist/types/internal/operators/delay.d.ts","../../node_modules/rxjs/dist/types/internal/operators/delaywhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/dematerialize.d.ts","../../node_modules/rxjs/dist/types/internal/operators/distinct.d.ts","../../node_modules/rxjs/dist/types/internal/operators/distinctuntilchanged.d.ts","../../node_modules/rxjs/dist/types/internal/operators/distinctuntilkeychanged.d.ts","../../node_modules/rxjs/dist/types/internal/operators/elementat.d.ts","../../node_modules/rxjs/dist/types/internal/operators/endwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/every.d.ts","../../node_modules/rxjs/dist/types/internal/operators/exhaustall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/exhaust.d.ts","../../node_modules/rxjs/dist/types/internal/operators/exhaustmap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/expand.d.ts","../../node_modules/rxjs/dist/types/internal/operators/filter.d.ts","../../node_modules/rxjs/dist/types/internal/operators/finalize.d.ts","../../node_modules/rxjs/dist/types/internal/operators/find.d.ts","../../node_modules/rxjs/dist/types/internal/operators/findindex.d.ts","../../node_modules/rxjs/dist/types/internal/operators/first.d.ts","../../node_modules/rxjs/dist/types/internal/subject.d.ts","../../node_modules/rxjs/dist/types/internal/operators/groupby.d.ts","../../node_modules/rxjs/dist/types/internal/operators/ignoreelements.d.ts","../../node_modules/rxjs/dist/types/internal/operators/isempty.d.ts","../../node_modules/rxjs/dist/types/internal/operators/last.d.ts","../../node_modules/rxjs/dist/types/internal/operators/map.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mapto.d.ts","../../node_modules/rxjs/dist/types/internal/notification.d.ts","../../node_modules/rxjs/dist/types/internal/operators/materialize.d.ts","../../node_modules/rxjs/dist/types/internal/operators/max.d.ts","../../node_modules/rxjs/dist/types/internal/operators/merge.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergeall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergemap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/flatmap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergemapto.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergescan.d.ts","../../node_modules/rxjs/dist/types/internal/operators/mergewith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/min.d.ts","../../node_modules/rxjs/dist/types/internal/observable/connectableobservable.d.ts","../../node_modules/rxjs/dist/types/internal/operators/multicast.d.ts","../../node_modules/rxjs/dist/types/internal/operators/observeon.d.ts","../../node_modules/rxjs/dist/types/internal/operators/onerrorresumenextwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/pairwise.d.ts","../../node_modules/rxjs/dist/types/internal/operators/partition.d.ts","../../node_modules/rxjs/dist/types/internal/operators/pluck.d.ts","../../node_modules/rxjs/dist/types/internal/operators/publish.d.ts","../../node_modules/rxjs/dist/types/internal/operators/publishbehavior.d.ts","../../node_modules/rxjs/dist/types/internal/operators/publishlast.d.ts","../../node_modules/rxjs/dist/types/internal/operators/publishreplay.d.ts","../../node_modules/rxjs/dist/types/internal/operators/race.d.ts","../../node_modules/rxjs/dist/types/internal/operators/racewith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/reduce.d.ts","../../node_modules/rxjs/dist/types/internal/operators/repeat.d.ts","../../node_modules/rxjs/dist/types/internal/operators/repeatwhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/retry.d.ts","../../node_modules/rxjs/dist/types/internal/operators/retrywhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/refcount.d.ts","../../node_modules/rxjs/dist/types/internal/operators/sample.d.ts","../../node_modules/rxjs/dist/types/internal/operators/sampletime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/scan.d.ts","../../node_modules/rxjs/dist/types/internal/operators/sequenceequal.d.ts","../../node_modules/rxjs/dist/types/internal/operators/share.d.ts","../../node_modules/rxjs/dist/types/internal/operators/sharereplay.d.ts","../../node_modules/rxjs/dist/types/internal/operators/single.d.ts","../../node_modules/rxjs/dist/types/internal/operators/skip.d.ts","../../node_modules/rxjs/dist/types/internal/operators/skiplast.d.ts","../../node_modules/rxjs/dist/types/internal/operators/skipuntil.d.ts","../../node_modules/rxjs/dist/types/internal/operators/skipwhile.d.ts","../../node_modules/rxjs/dist/types/internal/operators/startwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/subscribeon.d.ts","../../node_modules/rxjs/dist/types/internal/operators/switchall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/switchmap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/switchmapto.d.ts","../../node_modules/rxjs/dist/types/internal/operators/switchscan.d.ts","../../node_modules/rxjs/dist/types/internal/operators/take.d.ts","../../node_modules/rxjs/dist/types/internal/operators/takelast.d.ts","../../node_modules/rxjs/dist/types/internal/operators/takeuntil.d.ts","../../node_modules/rxjs/dist/types/internal/operators/takewhile.d.ts","../../node_modules/rxjs/dist/types/internal/operators/tap.d.ts","../../node_modules/rxjs/dist/types/internal/operators/throttle.d.ts","../../node_modules/rxjs/dist/types/internal/operators/throttletime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/throwifempty.d.ts","../../node_modules/rxjs/dist/types/internal/operators/timeinterval.d.ts","../../node_modules/rxjs/dist/types/internal/operators/timeout.d.ts","../../node_modules/rxjs/dist/types/internal/operators/timeoutwith.d.ts","../../node_modules/rxjs/dist/types/internal/operators/timestamp.d.ts","../../node_modules/rxjs/dist/types/internal/operators/toarray.d.ts","../../node_modules/rxjs/dist/types/internal/operators/window.d.ts","../../node_modules/rxjs/dist/types/internal/operators/windowcount.d.ts","../../node_modules/rxjs/dist/types/internal/operators/windowtime.d.ts","../../node_modules/rxjs/dist/types/internal/operators/windowtoggle.d.ts","../../node_modules/rxjs/dist/types/internal/operators/windowwhen.d.ts","../../node_modules/rxjs/dist/types/internal/operators/withlatestfrom.d.ts","../../node_modules/rxjs/dist/types/internal/operators/zip.d.ts","../../node_modules/rxjs/dist/types/internal/operators/zipall.d.ts","../../node_modules/rxjs/dist/types/internal/operators/zipwith.d.ts","../../node_modules/rxjs/dist/types/operators/index.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/action.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler.d.ts","../../node_modules/rxjs/dist/types/internal/testing/testmessage.d.ts","../../node_modules/rxjs/dist/types/internal/testing/subscriptionlog.d.ts","../../node_modules/rxjs/dist/types/internal/testing/subscriptionloggable.d.ts","../../node_modules/rxjs/dist/types/internal/testing/coldobservable.d.ts","../../node_modules/rxjs/dist/types/internal/testing/hotobservable.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/asyncscheduler.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/timerhandle.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/asyncaction.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/virtualtimescheduler.d.ts","../../node_modules/rxjs/dist/types/internal/testing/testscheduler.d.ts","../../node_modules/rxjs/dist/types/testing/index.d.ts","../../node_modules/rxjs/dist/types/internal/symbol/observable.d.ts","../../node_modules/rxjs/dist/types/internal/observable/dom/animationframes.d.ts","../../node_modules/rxjs/dist/types/internal/behaviorsubject.d.ts","../../node_modules/rxjs/dist/types/internal/replaysubject.d.ts","../../node_modules/rxjs/dist/types/internal/asyncsubject.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/asapscheduler.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/asap.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/async.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/queuescheduler.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/queue.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/animationframescheduler.d.ts","../../node_modules/rxjs/dist/types/internal/scheduler/animationframe.d.ts","../../node_modules/rxjs/dist/types/internal/util/identity.d.ts","../../node_modules/rxjs/dist/types/internal/util/pipe.d.ts","../../node_modules/rxjs/dist/types/internal/util/noop.d.ts","../../node_modules/rxjs/dist/types/internal/util/isobservable.d.ts","../../node_modules/rxjs/dist/types/internal/lastvaluefrom.d.ts","../../node_modules/rxjs/dist/types/internal/firstvaluefrom.d.ts","../../node_modules/rxjs/dist/types/internal/util/argumentoutofrangeerror.d.ts","../../node_modules/rxjs/dist/types/internal/util/emptyerror.d.ts","../../node_modules/rxjs/dist/types/internal/util/notfounderror.d.ts","../../node_modules/rxjs/dist/types/internal/util/objectunsubscribederror.d.ts","../../node_modules/rxjs/dist/types/internal/util/sequenceerror.d.ts","../../node_modules/rxjs/dist/types/internal/util/unsubscriptionerror.d.ts","../../node_modules/rxjs/dist/types/internal/observable/bindcallback.d.ts","../../node_modules/rxjs/dist/types/internal/observable/bindnodecallback.d.ts","../../node_modules/rxjs/dist/types/internal/anycatcher.d.ts","../../node_modules/rxjs/dist/types/internal/observable/combinelatest.d.ts","../../node_modules/rxjs/dist/types/internal/observable/concat.d.ts","../../node_modules/rxjs/dist/types/internal/observable/connectable.d.ts","../../node_modules/rxjs/dist/types/internal/observable/defer.d.ts","../../node_modules/rxjs/dist/types/internal/observable/empty.d.ts","../../node_modules/rxjs/dist/types/internal/observable/forkjoin.d.ts","../../node_modules/rxjs/dist/types/internal/observable/from.d.ts","../../node_modules/rxjs/dist/types/internal/observable/fromevent.d.ts","../../node_modules/rxjs/dist/types/internal/observable/fromeventpattern.d.ts","../../node_modules/rxjs/dist/types/internal/observable/generate.d.ts","../../node_modules/rxjs/dist/types/internal/observable/iif.d.ts","../../node_modules/rxjs/dist/types/internal/observable/interval.d.ts","../../node_modules/rxjs/dist/types/internal/observable/merge.d.ts","../../node_modules/rxjs/dist/types/internal/observable/never.d.ts","../../node_modules/rxjs/dist/types/internal/observable/of.d.ts","../../node_modules/rxjs/dist/types/internal/observable/onerrorresumenext.d.ts","../../node_modules/rxjs/dist/types/internal/observable/pairs.d.ts","../../node_modules/rxjs/dist/types/internal/observable/partition.d.ts","../../node_modules/rxjs/dist/types/internal/observable/race.d.ts","../../node_modules/rxjs/dist/types/internal/observable/range.d.ts","../../node_modules/rxjs/dist/types/internal/observable/throwerror.d.ts","../../node_modules/rxjs/dist/types/internal/observable/timer.d.ts","../../node_modules/rxjs/dist/types/internal/observable/using.d.ts","../../node_modules/rxjs/dist/types/internal/observable/zip.d.ts","../../node_modules/rxjs/dist/types/internal/scheduled/scheduled.d.ts","../../node_modules/rxjs/dist/types/internal/config.d.ts","../../node_modules/rxjs/dist/types/index.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/rpc-exception-filter.interface.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/ws-exception-filter.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/validation-error.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/execution-context.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/can-activate.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/custom-route-param-factory.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/nest-interceptor.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/paramtype.interface.d.ts","./node_modules/@nestjs/common/interfaces/type.interface.d.ts","./node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.d.ts","./node_modules/@nestjs/common/enums/request-method.enum.d.ts","./node_modules/@nestjs/common/enums/http-status.enum.d.ts","./node_modules/@nestjs/common/enums/shutdown-signal.enum.d.ts","./node_modules/@nestjs/common/enums/version-type.enum.d.ts","./node_modules/@nestjs/common/enums/index.d.ts","./node_modules/@nestjs/common/interfaces/version-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/middleware-configuration.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/middleware-consumer.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/middleware-config-proxy.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/nest-middleware.interface.d.ts","./node_modules/@nestjs/common/interfaces/middleware/index.d.ts","./node_modules/@nestjs/common/interfaces/global-prefix-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/before-application-shutdown.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/on-application-bootstrap.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/on-application-shutdown.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/on-destroy.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/on-init.interface.d.ts","./node_modules/@nestjs/common/interfaces/hooks/index.d.ts","./node_modules/@nestjs/common/interfaces/http/http-exception-body.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/http-redirect-response.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/cors-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/https-options.interface.d.ts","./node_modules/@nestjs/common/services/logger.service.d.ts","./node_modules/@nestjs/common/interfaces/nest-application-context-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/nest-application-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/http-server.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/message-event.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/raw-body-request.interface.d.ts","./node_modules/@nestjs/common/interfaces/http/index.d.ts","./node_modules/@nestjs/common/interfaces/injectable.interface.d.ts","./node_modules/@nestjs/common/interfaces/microservices/nest-hybrid-application-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/forward-reference.interface.d.ts","./node_modules/@nestjs/common/interfaces/scope-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/injection-token.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/optional-factory-dependency.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/provider.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/module-metadata.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/dynamic-module.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/introspection-result.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/nest-module.interface.d.ts","./node_modules/@nestjs/common/interfaces/modules/index.d.ts","./node_modules/@nestjs/common/interfaces/nest-application-context.interface.d.ts","./node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.d.ts","./node_modules/@nestjs/common/interfaces/nest-application.interface.d.ts","./node_modules/@nestjs/common/interfaces/nest-microservice.interface.d.ts","./node_modules/@nestjs/common/interfaces/index.d.ts","./node_modules/@nestjs/common/decorators/core/catch.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/controller.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/dependencies.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/exception-filters.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/inject.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/injectable.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/optional.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/set-metadata.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/use-guards.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/use-interceptors.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/use-pipes.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/apply-decorators.d.ts","./node_modules/@nestjs/common/decorators/core/version.decorator.d.ts","./node_modules/@nestjs/common/decorators/core/index.d.ts","./node_modules/@nestjs/common/decorators/modules/global.decorator.d.ts","./node_modules/@nestjs/common/decorators/modules/module.decorator.d.ts","./node_modules/@nestjs/common/decorators/modules/index.d.ts","./node_modules/@nestjs/common/decorators/http/request-mapping.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/route-params.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/http-code.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/create-route-param-metadata.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/render.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/header.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/redirect.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/sse.decorator.d.ts","./node_modules/@nestjs/common/decorators/http/index.d.ts","./node_modules/@nestjs/common/decorators/index.d.ts","./node_modules/@nestjs/common/exceptions/http.exception.d.ts","./node_modules/@nestjs/common/exceptions/bad-request.exception.d.ts","./node_modules/@nestjs/common/exceptions/unauthorized.exception.d.ts","./node_modules/@nestjs/common/exceptions/method-not-allowed.exception.d.ts","./node_modules/@nestjs/common/exceptions/not-found.exception.d.ts","./node_modules/@nestjs/common/exceptions/forbidden.exception.d.ts","./node_modules/@nestjs/common/exceptions/not-acceptable.exception.d.ts","./node_modules/@nestjs/common/exceptions/request-timeout.exception.d.ts","./node_modules/@nestjs/common/exceptions/conflict.exception.d.ts","./node_modules/@nestjs/common/exceptions/gone.exception.d.ts","./node_modules/@nestjs/common/exceptions/payload-too-large.exception.d.ts","./node_modules/@nestjs/common/exceptions/unsupported-media-type.exception.d.ts","./node_modules/@nestjs/common/exceptions/unprocessable-entity.exception.d.ts","./node_modules/@nestjs/common/exceptions/internal-server-error.exception.d.ts","./node_modules/@nestjs/common/exceptions/not-implemented.exception.d.ts","./node_modules/@nestjs/common/exceptions/http-version-not-supported.exception.d.ts","./node_modules/@nestjs/common/exceptions/bad-gateway.exception.d.ts","./node_modules/@nestjs/common/exceptions/service-unavailable.exception.d.ts","./node_modules/@nestjs/common/exceptions/gateway-timeout.exception.d.ts","./node_modules/@nestjs/common/exceptions/im-a-teapot.exception.d.ts","./node_modules/@nestjs/common/exceptions/precondition-failed.exception.d.ts","./node_modules/@nestjs/common/exceptions/misdirected.exception.d.ts","./node_modules/@nestjs/common/exceptions/index.d.ts","./node_modules/@nestjs/common/file-stream/interfaces/streamable-options.interface.d.ts","./node_modules/@nestjs/common/file-stream/interfaces/streamable-handler-response.interface.d.ts","./node_modules/@nestjs/common/file-stream/interfaces/index.d.ts","./node_modules/@nestjs/common/services/console-logger.service.d.ts","./node_modules/@nestjs/common/services/index.d.ts","./node_modules/@nestjs/common/file-stream/streamable-file.d.ts","./node_modules/@nestjs/common/file-stream/index.d.ts","./node_modules/@nestjs/common/module-utils/constants.d.ts","./node_modules/@nestjs/common/module-utils/interfaces/configurable-module-async-options.interface.d.ts","./node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.d.ts","./node_modules/@nestjs/common/module-utils/interfaces/configurable-module-host.interface.d.ts","./node_modules/@nestjs/common/module-utils/interfaces/index.d.ts","./node_modules/@nestjs/common/module-utils/configurable-module.builder.d.ts","./node_modules/@nestjs/common/module-utils/index.d.ts","./node_modules/@nestjs/common/pipes/default-value.pipe.d.ts","./node_modules/@nestjs/common/interfaces/external/class-transform-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/transformer-package.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/validator-options.interface.d.ts","./node_modules/@nestjs/common/interfaces/external/validator-package.interface.d.ts","./node_modules/@nestjs/common/utils/http-error-by-code.util.d.ts","./node_modules/@nestjs/common/pipes/validation.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-array.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-bool.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-int.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-float.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-enum.pipe.d.ts","./node_modules/@nestjs/common/pipes/parse-uuid.pipe.d.ts","./node_modules/@nestjs/common/pipes/file/interfaces/file.interface.d.ts","./node_modules/@nestjs/common/pipes/file/interfaces/index.d.ts","./node_modules/@nestjs/common/pipes/file/file-validator.interface.d.ts","./node_modules/@nestjs/common/pipes/file/file-type.validator.d.ts","./node_modules/@nestjs/common/pipes/file/max-file-size.validator.d.ts","./node_modules/@nestjs/common/pipes/file/parse-file-options.interface.d.ts","./node_modules/@nestjs/common/pipes/file/parse-file.pipe.d.ts","./node_modules/@nestjs/common/pipes/file/parse-file-pipe.builder.d.ts","./node_modules/@nestjs/common/pipes/file/index.d.ts","./node_modules/@nestjs/common/pipes/index.d.ts","./node_modules/@nestjs/common/serializer/class-serializer.interfaces.d.ts","./node_modules/@nestjs/common/serializer/class-serializer.interceptor.d.ts","./node_modules/@nestjs/common/serializer/decorators/serialize-options.decorator.d.ts","./node_modules/@nestjs/common/serializer/decorators/index.d.ts","./node_modules/@nestjs/common/serializer/index.d.ts","./node_modules/@nestjs/common/utils/forward-ref.util.d.ts","./node_modules/@nestjs/common/utils/index.d.ts","./node_modules/@nestjs/common/index.d.ts","./src/app.service.ts","./src/app.controller.ts","./node_modules/@nestjs/config/dist/conditional.module.d.ts","./node_modules/@nestjs/config/dist/interfaces/config-change-event.interface.d.ts","./node_modules/@nestjs/config/dist/types/config-object.type.d.ts","./node_modules/@nestjs/config/dist/types/config.type.d.ts","./node_modules/@nestjs/config/dist/types/no-infer.type.d.ts","./node_modules/@nestjs/config/dist/types/path-value.type.d.ts","./node_modules/@nestjs/config/dist/types/index.d.ts","./node_modules/@nestjs/config/dist/interfaces/config-factory.interface.d.ts","./node_modules/@types/node/compatibility/disposable.d.ts","./node_modules/@types/node/compatibility/indexable.d.ts","./node_modules/@types/node/compatibility/iterators.d.ts","./node_modules/@types/node/compatibility/index.d.ts","./node_modules/@types/node/globals.typedarray.d.ts","./node_modules/@types/node/buffer.buffer.d.ts","../../node_modules/buffer/index.d.ts","./node_modules/undici-types/header.d.ts","./node_modules/undici-types/readable.d.ts","./node_modules/undici-types/file.d.ts","./node_modules/undici-types/fetch.d.ts","./node_modules/undici-types/formdata.d.ts","./node_modules/undici-types/connector.d.ts","./node_modules/undici-types/client.d.ts","./node_modules/undici-types/errors.d.ts","./node_modules/undici-types/dispatcher.d.ts","./node_modules/undici-types/global-dispatcher.d.ts","./node_modules/undici-types/global-origin.d.ts","./node_modules/undici-types/pool-stats.d.ts","./node_modules/undici-types/pool.d.ts","./node_modules/undici-types/handlers.d.ts","./node_modules/undici-types/balanced-pool.d.ts","./node_modules/undici-types/agent.d.ts","./node_modules/undici-types/mock-interceptor.d.ts","./node_modules/undici-types/mock-agent.d.ts","./node_modules/undici-types/mock-client.d.ts","./node_modules/undici-types/mock-pool.d.ts","./node_modules/undici-types/mock-errors.d.ts","./node_modules/undici-types/proxy-agent.d.ts","./node_modules/undici-types/env-http-proxy-agent.d.ts","./node_modules/undici-types/retry-handler.d.ts","./node_modules/undici-types/retry-agent.d.ts","./node_modules/undici-types/api.d.ts","./node_modules/undici-types/interceptors.d.ts","./node_modules/undici-types/util.d.ts","./node_modules/undici-types/cookies.d.ts","./node_modules/undici-types/patch.d.ts","./node_modules/undici-types/websocket.d.ts","./node_modules/undici-types/eventsource.d.ts","./node_modules/undici-types/filereader.d.ts","./node_modules/undici-types/diagnostics-channel.d.ts","./node_modules/undici-types/content-type.d.ts","./node_modules/undici-types/cache.d.ts","./node_modules/undici-types/index.d.ts","./node_modules/@types/node/globals.d.ts","./node_modules/@types/node/assert.d.ts","./node_modules/@types/node/assert/strict.d.ts","./node_modules/@types/node/async_hooks.d.ts","./node_modules/@types/node/buffer.d.ts","./node_modules/@types/node/child_process.d.ts","./node_modules/@types/node/cluster.d.ts","./node_modules/@types/node/console.d.ts","./node_modules/@types/node/constants.d.ts","./node_modules/@types/node/crypto.d.ts","./node_modules/@types/node/dgram.d.ts","./node_modules/@types/node/diagnostics_channel.d.ts","./node_modules/@types/node/dns.d.ts","./node_modules/@types/node/dns/promises.d.ts","./node_modules/@types/node/domain.d.ts","./node_modules/@types/node/dom-events.d.ts","./node_modules/@types/node/events.d.ts","./node_modules/@types/node/fs.d.ts","./node_modules/@types/node/fs/promises.d.ts","./node_modules/@types/node/http.d.ts","./node_modules/@types/node/http2.d.ts","./node_modules/@types/node/https.d.ts","./node_modules/@types/node/inspector.d.ts","./node_modules/@types/node/module.d.ts","./node_modules/@types/node/net.d.ts","./node_modules/@types/node/os.d.ts","./node_modules/@types/node/path.d.ts","./node_modules/@types/node/perf_hooks.d.ts","./node_modules/@types/node/process.d.ts","./node_modules/@types/node/punycode.d.ts","./node_modules/@types/node/querystring.d.ts","./node_modules/@types/node/readline.d.ts","./node_modules/@types/node/readline/promises.d.ts","./node_modules/@types/node/repl.d.ts","./node_modules/@types/node/sea.d.ts","./node_modules/@types/node/stream.d.ts","./node_modules/@types/node/stream/promises.d.ts","./node_modules/@types/node/stream/consumers.d.ts","./node_modules/@types/node/stream/web.d.ts","./node_modules/@types/node/string_decoder.d.ts","./node_modules/@types/node/test.d.ts","./node_modules/@types/node/timers.d.ts","./node_modules/@types/node/timers/promises.d.ts","./node_modules/@types/node/tls.d.ts","./node_modules/@types/node/trace_events.d.ts","./node_modules/@types/node/tty.d.ts","./node_modules/@types/node/url.d.ts","./node_modules/@types/node/util.d.ts","./node_modules/@types/node/v8.d.ts","./node_modules/@types/node/vm.d.ts","./node_modules/@types/node/wasi.d.ts","./node_modules/@types/node/worker_threads.d.ts","./node_modules/@types/node/zlib.d.ts","./node_modules/@types/node/index.d.ts","./node_modules/dotenv-expand/lib/main.d.ts","./node_modules/@nestjs/config/dist/interfaces/config-module-options.interface.d.ts","./node_modules/@nestjs/config/dist/interfaces/index.d.ts","./node_modules/@nestjs/config/dist/config.module.d.ts","./node_modules/@nestjs/config/dist/config.service.d.ts","./node_modules/@nestjs/config/dist/utils/register-as.util.d.ts","./node_modules/@nestjs/config/dist/utils/get-config-token.util.d.ts","./node_modules/@nestjs/config/dist/utils/index.d.ts","./node_modules/@nestjs/config/dist/index.d.ts","./node_modules/@nestjs/config/index.d.ts","../../node_modules/@prisma/client/runtime/library.d.ts","../../node_modules/.prisma/client/index.d.ts","../../node_modules/.prisma/client/default.d.ts","../../node_modules/@prisma/client/default.d.ts","./src/persistence/prisma/prisma.service.ts","./src/persistence/persistence.module.ts","../../node_modules/class-validator/types/validation/validationerror.d.ts","../../node_modules/class-validator/types/validation/validatoroptions.d.ts","../../node_modules/class-validator/types/validation-schema/validationschema.d.ts","../../node_modules/class-validator/types/container.d.ts","../../node_modules/class-validator/types/validation/validationarguments.d.ts","../../node_modules/class-validator/types/decorator/validationoptions.d.ts","../../node_modules/class-validator/types/decorator/common/allow.d.ts","../../node_modules/class-validator/types/decorator/common/isdefined.d.ts","../../node_modules/class-validator/types/decorator/common/isoptional.d.ts","../../node_modules/class-validator/types/decorator/common/validate.d.ts","../../node_modules/class-validator/types/validation/validatorconstraintinterface.d.ts","../../node_modules/class-validator/types/decorator/common/validateby.d.ts","../../node_modules/class-validator/types/decorator/common/validateif.d.ts","../../node_modules/class-validator/types/decorator/common/validatenested.d.ts","../../node_modules/class-validator/types/decorator/common/validatepromise.d.ts","../../node_modules/class-validator/types/decorator/common/islatlong.d.ts","../../node_modules/class-validator/types/decorator/common/islatitude.d.ts","../../node_modules/class-validator/types/decorator/common/islongitude.d.ts","../../node_modules/class-validator/types/decorator/common/equals.d.ts","../../node_modules/class-validator/types/decorator/common/notequals.d.ts","../../node_modules/class-validator/types/decorator/common/isempty.d.ts","../../node_modules/class-validator/types/decorator/common/isnotempty.d.ts","../../node_modules/class-validator/types/decorator/common/isin.d.ts","../../node_modules/class-validator/types/decorator/common/isnotin.d.ts","../../node_modules/class-validator/types/decorator/number/isdivisibleby.d.ts","../../node_modules/class-validator/types/decorator/number/ispositive.d.ts","../../node_modules/class-validator/types/decorator/number/isnegative.d.ts","../../node_modules/class-validator/types/decorator/number/max.d.ts","../../node_modules/class-validator/types/decorator/number/min.d.ts","../../node_modules/class-validator/types/decorator/date/mindate.d.ts","../../node_modules/class-validator/types/decorator/date/maxdate.d.ts","../../node_modules/class-validator/types/decorator/string/contains.d.ts","../../node_modules/class-validator/types/decorator/string/notcontains.d.ts","../../node_modules/@types/validator/lib/isboolean.d.ts","../../node_modules/@types/validator/lib/isemail.d.ts","../../node_modules/@types/validator/lib/isfqdn.d.ts","../../node_modules/@types/validator/lib/isiban.d.ts","../../node_modules/@types/validator/lib/isiso31661alpha2.d.ts","../../node_modules/@types/validator/lib/isiso4217.d.ts","../../node_modules/@types/validator/lib/isiso6391.d.ts","../../node_modules/@types/validator/lib/istaxid.d.ts","../../node_modules/@types/validator/lib/isurl.d.ts","../../node_modules/@types/validator/index.d.ts","../../node_modules/class-validator/types/decorator/string/isalpha.d.ts","../../node_modules/class-validator/types/decorator/string/isalphanumeric.d.ts","../../node_modules/class-validator/types/decorator/string/isdecimal.d.ts","../../node_modules/class-validator/types/decorator/string/isascii.d.ts","../../node_modules/class-validator/types/decorator/string/isbase64.d.ts","../../node_modules/class-validator/types/decorator/string/isbytelength.d.ts","../../node_modules/class-validator/types/decorator/string/iscreditcard.d.ts","../../node_modules/class-validator/types/decorator/string/iscurrency.d.ts","../../node_modules/class-validator/types/decorator/string/isemail.d.ts","../../node_modules/class-validator/types/decorator/string/isfqdn.d.ts","../../node_modules/class-validator/types/decorator/string/isfullwidth.d.ts","../../node_modules/class-validator/types/decorator/string/ishalfwidth.d.ts","../../node_modules/class-validator/types/decorator/string/isvariablewidth.d.ts","../../node_modules/class-validator/types/decorator/string/ishexcolor.d.ts","../../node_modules/class-validator/types/decorator/string/ishexadecimal.d.ts","../../node_modules/class-validator/types/decorator/string/ismacaddress.d.ts","../../node_modules/class-validator/types/decorator/string/isip.d.ts","../../node_modules/class-validator/types/decorator/string/isport.d.ts","../../node_modules/class-validator/types/decorator/string/isisbn.d.ts","../../node_modules/class-validator/types/decorator/string/isisin.d.ts","../../node_modules/class-validator/types/decorator/string/isiso8601.d.ts","../../node_modules/class-validator/types/decorator/string/isjson.d.ts","../../node_modules/class-validator/types/decorator/string/isjwt.d.ts","../../node_modules/class-validator/types/decorator/string/islowercase.d.ts","../../node_modules/class-validator/types/decorator/string/ismobilephone.d.ts","../../node_modules/class-validator/types/decorator/string/isiso31661alpha2.d.ts","../../node_modules/class-validator/types/decorator/string/isiso31661alpha3.d.ts","../../node_modules/class-validator/types/decorator/string/ismongoid.d.ts","../../node_modules/class-validator/types/decorator/string/ismultibyte.d.ts","../../node_modules/class-validator/types/decorator/string/issurrogatepair.d.ts","../../node_modules/class-validator/types/decorator/string/isurl.d.ts","../../node_modules/class-validator/types/decorator/string/isuuid.d.ts","../../node_modules/class-validator/types/decorator/string/isfirebasepushid.d.ts","../../node_modules/class-validator/types/decorator/string/isuppercase.d.ts","../../node_modules/class-validator/types/decorator/string/length.d.ts","../../node_modules/class-validator/types/decorator/string/maxlength.d.ts","../../node_modules/class-validator/types/decorator/string/minlength.d.ts","../../node_modules/class-validator/types/decorator/string/matches.d.ts","../../node_modules/libphonenumber-js/types.d.cts","../../node_modules/libphonenumber-js/max/index.d.cts","../../node_modules/class-validator/types/decorator/string/isphonenumber.d.ts","../../node_modules/class-validator/types/decorator/string/ismilitarytime.d.ts","../../node_modules/class-validator/types/decorator/string/ishash.d.ts","../../node_modules/class-validator/types/decorator/string/isissn.d.ts","../../node_modules/class-validator/types/decorator/string/isdatestring.d.ts","../../node_modules/class-validator/types/decorator/string/isbooleanstring.d.ts","../../node_modules/class-validator/types/decorator/string/isnumberstring.d.ts","../../node_modules/class-validator/types/decorator/string/isbase32.d.ts","../../node_modules/class-validator/types/decorator/string/isbic.d.ts","../../node_modules/class-validator/types/decorator/string/isbtcaddress.d.ts","../../node_modules/class-validator/types/decorator/string/isdatauri.d.ts","../../node_modules/class-validator/types/decorator/string/isean.d.ts","../../node_modules/class-validator/types/decorator/string/isethereumaddress.d.ts","../../node_modules/class-validator/types/decorator/string/ishsl.d.ts","../../node_modules/class-validator/types/decorator/string/isiban.d.ts","../../node_modules/class-validator/types/decorator/string/isidentitycard.d.ts","../../node_modules/class-validator/types/decorator/string/isisrc.d.ts","../../node_modules/class-validator/types/decorator/string/islocale.d.ts","../../node_modules/class-validator/types/decorator/string/ismagneturi.d.ts","../../node_modules/class-validator/types/decorator/string/ismimetype.d.ts","../../node_modules/class-validator/types/decorator/string/isoctal.d.ts","../../node_modules/class-validator/types/decorator/string/ispassportnumber.d.ts","../../node_modules/class-validator/types/decorator/string/ispostalcode.d.ts","../../node_modules/class-validator/types/decorator/string/isrfc3339.d.ts","../../node_modules/class-validator/types/decorator/string/isrgbcolor.d.ts","../../node_modules/class-validator/types/decorator/string/issemver.d.ts","../../node_modules/class-validator/types/decorator/string/isstrongpassword.d.ts","../../node_modules/class-validator/types/decorator/string/istimezone.d.ts","../../node_modules/class-validator/types/decorator/string/isbase58.d.ts","../../node_modules/class-validator/types/decorator/string/is-tax-id.d.ts","../../node_modules/class-validator/types/decorator/string/is-iso4217-currency-code.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isboolean.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isdate.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isnumber.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isenum.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isint.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isstring.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isarray.d.ts","../../node_modules/class-validator/types/decorator/typechecker/isobject.d.ts","../../node_modules/class-validator/types/decorator/array/arraycontains.d.ts","../../node_modules/class-validator/types/decorator/array/arraynotcontains.d.ts","../../node_modules/class-validator/types/decorator/array/arraynotempty.d.ts","../../node_modules/class-validator/types/decorator/array/arrayminsize.d.ts","../../node_modules/class-validator/types/decorator/array/arraymaxsize.d.ts","../../node_modules/class-validator/types/decorator/array/arrayunique.d.ts","../../node_modules/class-validator/types/decorator/object/isnotemptyobject.d.ts","../../node_modules/class-validator/types/decorator/object/isinstance.d.ts","../../node_modules/class-validator/types/decorator/decorators.d.ts","../../node_modules/class-validator/types/validation/validationtypes.d.ts","../../node_modules/class-validator/types/validation/validator.d.ts","../../node_modules/class-validator/types/register-decorator.d.ts","../../node_modules/class-validator/types/metadata/validationmetadataargs.d.ts","../../node_modules/class-validator/types/metadata/validationmetadata.d.ts","../../node_modules/class-validator/types/metadata/constraintmetadata.d.ts","../../node_modules/class-validator/types/metadata/metadatastorage.d.ts","../../node_modules/class-validator/types/index.d.ts","../../packages/core/src/types/user.types.ts","../../packages/core/src/types/pensum.types.ts","../../packages/core/src/types/quiz.types.ts","../../packages/core/src/index.ts","./src/users/dto/create-user.dto.ts","../../node_modules/@types/bcryptjs/index.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/typealiases.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/util.d.ts","../../node_modules/zod/dist/commonjs/v3/zoderror.d.ts","../../node_modules/zod/dist/commonjs/v3/locales/en.d.ts","../../node_modules/zod/dist/commonjs/v3/errors.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/parseutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/enumutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/errorutil.d.ts","../../node_modules/zod/dist/commonjs/v3/helpers/partialutil.d.ts","../../node_modules/zod/dist/commonjs/v3/standard-schema.d.ts","../../node_modules/zod/dist/commonjs/v3/types.d.ts","../../node_modules/zod/dist/commonjs/v3/external.d.ts","../../node_modules/zod/dist/commonjs/v3/index.d.ts","../../node_modules/zod/dist/commonjs/index.d.ts","../../packages/config/src/env.ts","../../packages/config/src/index.ts","./src/users/users.service.ts","./src/users/users.controller.ts","./src/users/users.module.ts","../../node_modules/@types/jsonwebtoken/index.d.ts","./node_modules/@nestjs/jwt/dist/interfaces/jwt-module-options.interface.d.ts","./node_modules/@nestjs/jwt/dist/interfaces/index.d.ts","./node_modules/@nestjs/jwt/dist/jwt.errors.d.ts","./node_modules/@nestjs/jwt/dist/jwt.module.d.ts","./node_modules/@nestjs/jwt/dist/jwt.service.d.ts","./node_modules/@nestjs/jwt/dist/index.d.ts","./node_modules/@nestjs/jwt/index.d.ts","../../node_modules/@types/ms/index.d.ts","../../node_modules/@types/passport-jwt/node_modules/@types/jsonwebtoken/index.d.ts","../../node_modules/@types/mime/index.d.ts","../../node_modules/@types/send/index.d.ts","../../node_modules/@types/qs/index.d.ts","../../node_modules/@types/range-parser/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/http-errors/index.d.ts","../../node_modules/@types/serve-static/index.d.ts","../../node_modules/@types/connect/index.d.ts","../../node_modules/@types/body-parser/index.d.ts","../../node_modules/@types/passport/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport/index.d.ts","./src/types/express.d.ts","../../node_modules/@types/passport-strategy/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-strategy/index.d.ts","../../node_modules/@types/passport-jwt/index.d.ts","./node_modules/@nestjs/passport/dist/abstract.strategy.d.ts","./node_modules/@nestjs/passport/dist/interfaces/auth-module.options.d.ts","./node_modules/@nestjs/passport/dist/interfaces/type.interface.d.ts","./node_modules/@nestjs/passport/dist/interfaces/index.d.ts","./node_modules/@nestjs/passport/dist/auth.guard.d.ts","./node_modules/@nestjs/passport/dist/passport.module.d.ts","./node_modules/@nestjs/passport/dist/passport/passport.serializer.d.ts","./node_modules/@nestjs/passport/dist/passport/passport.strategy.d.ts","./node_modules/@nestjs/passport/dist/index.d.ts","./node_modules/@nestjs/passport/index.d.ts","./src/auth/strategies/jwt/jwt.ts","./src/auth/dto/reset-password.dto.ts","../../node_modules/@types/uuid/index.d.ts","./src/auth/auth.service.ts","./src/auth/guards/local-auth.guard.ts","./src/auth/guards/jwt-auth.guard.ts","./node_modules/@nestjs/throttler/dist/throttler-storage-record.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler-storage.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler.guard.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler-module-options.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler.decorator.d.ts","./node_modules/@nestjs/throttler/dist/throttler.exception.d.ts","./node_modules/@nestjs/core/adapters/http-adapter.d.ts","./node_modules/@nestjs/core/adapters/index.d.ts","./node_modules/@nestjs/common/constants.d.ts","./node_modules/@nestjs/core/inspector/interfaces/edge.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/entrypoint.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/extras.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/node.interface.d.ts","./node_modules/@nestjs/core/injector/settlement-signal.d.ts","./node_modules/@nestjs/core/injector/injector.d.ts","./node_modules/@nestjs/core/inspector/interfaces/serialized-graph-metadata.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/serialized-graph-json.interface.d.ts","./node_modules/@nestjs/core/inspector/serialized-graph.d.ts","./node_modules/@nestjs/core/injector/module-token-factory.d.ts","./node_modules/@nestjs/core/injector/compiler.d.ts","./node_modules/@nestjs/core/injector/modules-container.d.ts","./node_modules/@nestjs/core/injector/container.d.ts","./node_modules/@nestjs/core/injector/instance-links-host.d.ts","./node_modules/@nestjs/core/injector/abstract-instance-resolver.d.ts","./node_modules/@nestjs/core/injector/module-ref.d.ts","./node_modules/@nestjs/core/injector/module.d.ts","./node_modules/@nestjs/core/injector/instance-wrapper.d.ts","./node_modules/@nestjs/core/router/interfaces/exclude-route-metadata.interface.d.ts","./node_modules/@nestjs/core/application-config.d.ts","./node_modules/@nestjs/core/constants.d.ts","./node_modules/@nestjs/core/discovery/discovery-module.d.ts","./node_modules/@nestjs/core/discovery/discovery-service.d.ts","./node_modules/@nestjs/core/discovery/index.d.ts","./node_modules/@nestjs/core/helpers/http-adapter-host.d.ts","./node_modules/@nestjs/core/exceptions/base-exception-filter.d.ts","./node_modules/@nestjs/core/exceptions/index.d.ts","./node_modules/@nestjs/core/helpers/context-id-factory.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/exception-filter-metadata.interface.d.ts","./node_modules/@nestjs/core/exceptions/exceptions-handler.d.ts","./node_modules/@nestjs/core/router/router-proxy.d.ts","./node_modules/@nestjs/core/helpers/context-creator.d.ts","./node_modules/@nestjs/core/exceptions/base-exception-filter-context.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/rpc-exception-filter-metadata.interface.d.ts","./node_modules/@nestjs/common/interfaces/exceptions/index.d.ts","./node_modules/@nestjs/core/exceptions/external-exception-filter.d.ts","./node_modules/@nestjs/core/exceptions/external-exceptions-handler.d.ts","./node_modules/@nestjs/core/exceptions/external-exception-filter-context.d.ts","./node_modules/@nestjs/core/guards/constants.d.ts","./node_modules/@nestjs/core/helpers/execution-context-host.d.ts","./node_modules/@nestjs/core/guards/guards-consumer.d.ts","./node_modules/@nestjs/core/guards/guards-context-creator.d.ts","./node_modules/@nestjs/core/guards/index.d.ts","./node_modules/@nestjs/core/interceptors/interceptors-consumer.d.ts","./node_modules/@nestjs/core/interceptors/interceptors-context-creator.d.ts","./node_modules/@nestjs/core/interceptors/index.d.ts","./node_modules/@nestjs/common/enums/route-paramtypes.enum.d.ts","./node_modules/@nestjs/core/pipes/params-token-factory.d.ts","./node_modules/@nestjs/core/pipes/pipes-consumer.d.ts","./node_modules/@nestjs/core/pipes/pipes-context-creator.d.ts","./node_modules/@nestjs/core/pipes/index.d.ts","./node_modules/@nestjs/core/helpers/context-utils.d.ts","./node_modules/@nestjs/core/injector/inquirer/inquirer-constants.d.ts","./node_modules/@nestjs/core/injector/inquirer/index.d.ts","./node_modules/@nestjs/core/interfaces/module-definition.interface.d.ts","./node_modules/@nestjs/core/interfaces/module-override.interface.d.ts","./node_modules/@nestjs/core/inspector/interfaces/enhancer-metadata-cache-entry.interface.d.ts","./node_modules/@nestjs/core/inspector/graph-inspector.d.ts","./node_modules/@nestjs/core/metadata-scanner.d.ts","./node_modules/@nestjs/core/scanner.d.ts","./node_modules/@nestjs/core/injector/instance-loader.d.ts","./node_modules/@nestjs/core/injector/lazy-module-loader/lazy-module-loader-options.interface.d.ts","./node_modules/@nestjs/core/injector/lazy-module-loader/lazy-module-loader.d.ts","./node_modules/@nestjs/core/injector/index.d.ts","./node_modules/@nestjs/core/helpers/interfaces/external-handler-metadata.interface.d.ts","./node_modules/@nestjs/core/helpers/interfaces/params-metadata.interface.d.ts","./node_modules/@nestjs/core/helpers/external-context-creator.d.ts","./node_modules/@nestjs/core/helpers/index.d.ts","./node_modules/@nestjs/core/inspector/initialize-on-preview.allowlist.d.ts","./node_modules/@nestjs/core/inspector/partial-graph.host.d.ts","./node_modules/@nestjs/core/inspector/index.d.ts","./node_modules/@nestjs/core/middleware/route-info-path-extractor.d.ts","./node_modules/@nestjs/core/middleware/routes-mapper.d.ts","./node_modules/@nestjs/core/middleware/builder.d.ts","./node_modules/@nestjs/core/middleware/index.d.ts","./node_modules/@nestjs/core/nest-application-context.d.ts","./node_modules/@nestjs/core/nest-application.d.ts","./node_modules/@nestjs/common/interfaces/microservices/nest-microservice-options.interface.d.ts","./node_modules/@nestjs/core/nest-factory.d.ts","./node_modules/@nestjs/core/repl/repl.d.ts","./node_modules/@nestjs/core/repl/index.d.ts","./node_modules/@nestjs/core/router/interfaces/routes.interface.d.ts","./node_modules/@nestjs/core/router/interfaces/index.d.ts","./node_modules/@nestjs/core/router/request/request-constants.d.ts","./node_modules/@nestjs/core/router/request/index.d.ts","./node_modules/@nestjs/core/router/router-module.d.ts","./node_modules/@nestjs/core/router/index.d.ts","./node_modules/@nestjs/core/services/reflector.service.d.ts","./node_modules/@nestjs/core/services/index.d.ts","./node_modules/@nestjs/core/index.d.ts","./node_modules/@nestjs/throttler/dist/throttler.guard.d.ts","./node_modules/@nestjs/throttler/dist/throttler.module.d.ts","./node_modules/@nestjs/throttler/dist/throttler.providers.d.ts","./node_modules/@nestjs/throttler/dist/throttler-storage-options.interface.d.ts","./node_modules/@nestjs/throttler/dist/throttler.service.d.ts","./node_modules/@nestjs/throttler/dist/utilities.d.ts","./node_modules/@nestjs/throttler/dist/index.d.ts","./src/auth/guards/login-throttler.guard.ts","./src/auth/dto/login.dto.ts","./src/auth/dto/forgot-password.dto.ts","./src/auth/dto/refresh-token.dto.ts","./src/auth/auth.controller.ts","../../node_modules/@types/passport-local/node_modules/@types/express/index.d.ts","../../node_modules/@types/passport-local/index.d.ts","./src/auth/strategies/local/local.ts","./src/auth/auth.module.ts","../../node_modules/@types/express-serve-static-core/index.d.ts","../../node_modules/@types/express/index.d.ts","./src/common/middleware/csrf.middleware.ts","./src/app.module.ts","./node_modules/@nestjs/swagger/dist/decorators/api-basic.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-bearer.decorator.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/open-api-spec.interface.d.ts","./node_modules/@nestjs/swagger/dist/types/swagger-enum.type.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-body.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-consumes.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-cookie.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-exclude-endpoint.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-exclude-controller.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-extra-models.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-header.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-hide-property.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-oauth2.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-operation.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-param.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-produces.decorator.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/schema-object-metadata.interface.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-property.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-query.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-response.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-security.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-use-tags.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/api-extension.decorator.d.ts","./node_modules/@nestjs/swagger/dist/decorators/index.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/swagger-ui-options.interface.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/swagger-custom-options.interface.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/swagger-document-options.interface.d.ts","./node_modules/@nestjs/swagger/dist/interfaces/index.d.ts","./node_modules/@nestjs/swagger/dist/document-builder.d.ts","./node_modules/@nestjs/swagger/dist/swagger-module.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/intersection-type.helper.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/omit-type.helper.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/partial-type.helper.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/pick-type.helper.d.ts","./node_modules/@nestjs/swagger/dist/type-helpers/index.d.ts","./node_modules/@nestjs/swagger/dist/utils/get-schema-path.util.d.ts","./node_modules/@nestjs/swagger/dist/utils/index.d.ts","./node_modules/@nestjs/swagger/dist/index.d.ts","./node_modules/@nestjs/swagger/index.d.ts","./src/common/filters/global-exception.filter.ts","./src/main.ts","../../node_modules/joi/lib/index.d.ts","./src/config/environment-variables.ts","./src/controllers/contentblock.controller.ts","./src/controllers/course.controller.ts","./src/controllers/lesson.controller.ts","./src/controllers/module.controller.ts","./src/controllers/pensum.controller.ts","./src/controllers/quiz.controller.ts","./src/controllers/quizattempt.controller.ts","./src/controllers/subjectarea.controller.ts","./src/controllers/userprogress.controller.ts","./src/middleware/auth.middleware.ts","./src/modules/pensum.module.ts","./src/modules/quiz.module.ts","./src/modules/userprogress.module.ts","./src/routes/pensum.routes.ts","./src/routes/quiz.routes.ts","./src/services/pensum.service.ts","./src/services/quiz.service.ts","./src/services/userprogress.service.ts"],"fileIdsList":[[413,456],[302,413,456],[397,413,456],[52,303,304,305,306,307,308,309,310,311,312,313,314,315,413,456],[255,289,413,456],[262,413,456],[252,302,397,413,456],[320,321,322,323,324,325,326,327,413,456],[257,413,456],[302,397,413,456],[316,319,328,413,456],[317,318,413,456],[293,413,456],[257,258,259,260,413,456],[330,413,456],[275,413,456],[330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,413,456],[358,413,456],[353,354,413,456],[355,357,413,456,487],[51,261,302,329,352,357,359,366,389,394,396,413,456],[57,255,413,456],[56,413,456],[57,247,248,413,456,764,769],[247,255,413,456],[56,246,413,456],[255,368,413,456],[249,370,413,456],[246,250,413,456],[56,302,413,456],[254,255,413,456],[267,413,456],[269,270,271,272,273,413,456],[261,413,456],[261,262,277,281,413,456],[275,276,282,283,284,413,456],[53,54,55,56,57,247,248,249,250,251,252,253,254,255,256,262,267,268,274,281,285,286,287,289,297,298,299,300,301,413,456],[280,413,456],[263,264,265,266,413,456],[255,263,264,413,456],[255,261,262,413,456],[255,265,413,456],[255,293,413,456],[288,290,291,292,293,294,295,296,413,456],[53,255,413,456],[289,413,456],[53,255,288,292,294,413,456],[264,413,456],[290,413,456],[255,289,290,291,413,456],[279,413,456],[255,259,279,297,413,456],[277,278,280,413,456],[251,253,262,268,277,282,298,299,302,413,456],[57,251,253,256,298,299,413,456],[260,413,456],[246,413,456],[279,302,360,364,413,456],[364,365,413,456],[302,360,413,456],[302,360,361,413,456],[361,362,413,456],[361,362,363,413,456],[256,413,456],[381,382,413,456],[381,413,456],[382,383,384,385,386,387,413,456],[380,413,456],[372,382,413,456],[382,383,384,385,386,413,456],[256,381,382,385,413,456],[367,373,374,375,376,377,378,379,388,413,456],[256,302,373,413,456],[256,372,413,456],[256,372,397,413,456],[249,255,256,368,369,370,371,372,413,456],[246,302,368,369,390,413,456],[302,368,413,456],[392,413,456],[329,390,413,456],[390,391,393,413,456],[279,356,413,456],[288,413,456],[261,302,413,456],[395,413,456],[397,413,456,508],[246,401,406,413,456],[400,406,413,456,508,509,510,513],[406,413,456],[407,413,456,506],[401,407,413,456,507],[402,403,404,405,413,456],[413,456,511,512],[406,413,456,508,514],[413,456,514],[277,281,302,397,413,456],[413,456,733],[302,397,413,456,753,754],[413,456,735],[397,413,456,747,752,753],[413,456,757,758],[57,302,413,456,748,753,767],[397,413,456,734,760],[56,397,413,456,761,764],[302,413,456,748,753,755,766,768,772],[56,413,456,770,771],[413,456,761],[246,302,397,413,456,775],[302,397,413,456,748,753,755,767],[413,456,774,776,777],[302,413,456,753],[413,456,753],[302,397,413,456,775],[56,302,397,413,456],[302,397,413,456,747,748,753,773,775,778,781,786,787,800,801],[246,413,456,733],[413,456,760,763,802],[413,456,787,799],[51,413,456,734,755,756,759,762,794,799,803,806,810,811,812,814,816,822,824],[302,397,413,456,741,749,752,753],[302,413,456,745],[302,397,413,456,735,744,745,746,747,752,753,755,825],[413,456,747,748,751,753,789,798],[302,397,413,456,740,752,753],[413,456,788],[397,413,456,748,753],[397,413,456,741,748,752,793],[302,397,413,456,735,740,752],[397,413,456,746,747,751,791,795,796,797],[397,413,456,741,748,749,750,752,753],[255,397,413,456],[302,413,456,735,748,751,753],[413,456,752],[413,456,737,738,739,748,752,753,792],[413,456,744,793,804,805],[397,413,456,735,753],[397,413,456,735],[413,456,736,737,738,739,742,744],[413,456,741],[413,456,743,744],[397,413,456,736,737,738,739,742,743],[413,456,779,780],[302,413,456,748,753,755,767],[413,456,790],[286,413,456],[267,302,413,456,807,808],[413,456,809],[302,413,456,755],[302,413,456,748,755],[280,302,397,413,456,741,748,749,750,752,753],[277,279,302,397,413,456,734,748,755,793,811],[280,281,397,413,456,733,813],[413,456,783,784,785],[397,413,456,782],[413,456,815],[397,413,456,485],[413,456,818,820,821],[413,456,817],[413,456,819],[397,413,456,747,752,818],[413,456,765],[302,397,413,456,735,748,752,753,755,790,791,793,794],[413,456,823],[413,456,686,688,689,690,691],[413,456,687],[397,413,456,686],[397,413,456,687],[413,456,686,688],[413,456,692],[397,413,456,712,714],[413,456,711,714,715,716,717,718],[413,456,712,713],[397,413,456,712],[413,456,706],[413,456,714],[413,456,719],[397,413,456,848,849],[413,456,848,849],[413,456,848],[413,456,862],[397,413,456,848],[413,456,846,847,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,866,867,868],[413,456,848,873],[51,413,456,869,873,874,875,880,882],[413,456,848,871,872],[413,456,848,870],[397,413,456,873],[413,456,876,877,878,879],[413,456,881],[413,456,883],[413,456,728,730,731,732,826,827,828,830,831],[302,413,456,728,729],[413,456,727],[413,456,730],[397,413,456,728,729,730,825],[397,413,456,730],[397,413,456,728,730],[397,413,456,727,728,829],[413,453,456],[413,455,456],[456],[413,456,461,490],[413,456,457,462,468,469,476,487,498],[413,456,457,458,468,476],[408,409,410,413,456],[413,456,459,499],[413,456,460,461,469,477],[413,456,461,487,495],[413,456,462,464,468,476],[413,455,456,463],[413,456,464,465],[413,456,468],[413,456,466,468],[413,455,456,468],[413,456,468,469,470,487,498],[413,456,468,469,470,483,487,490],[413,451,456,503],[413,456,464,468,471,476,487,498],[413,456,468,469,471,472,476,487,495,498],[413,456,471,473,487,495,498],[411,412,413,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504],[413,456,468,474],[413,456,475,498,503],[413,456,464,468,476,487],[413,456,477],[413,456,478],[413,455,456,479],[413,453,454,455,456,457,458,459,460,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504],[413,456,481],[413,456,482],[413,456,468,483,484],[413,456,483,485,499,501],[413,456,468,487,488,490],[413,456,489,490],[413,456,487,488],[413,456,490],[413,456,491],[413,453,456,487],[413,456,468,493,494],[413,456,493,494],[413,456,461,476,487,495],[413,456,496],[413,456,476,497],[413,456,471,482,498],[413,456,461,499],[413,456,487,500],[413,456,475,501],[413,456,502],[413,456,461,468,470,479,487,498,501,503],[413,456,487,504],[413,456,505],[413,423,427,456,498],[413,423,456,487,498],[413,418,456],[413,420,423,456,495,498],[413,456,476,495],[413,418,456,505],[413,420,423,456,476,498],[413,415,416,419,422,456,468,487,498],[413,423,430,456],[413,415,421,456],[413,423,444,445,456],[413,419,423,456,490,498,505],[413,444,456,505],[413,417,418,456,505],[413,423,456],[413,417,418,419,420,421,422,423,424,425,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,445,446,447,448,449,450,456],[413,423,438,456],[413,423,430,431,456],[413,421,423,431,432,456],[413,422,456],[413,415,418,423,456],[413,423,427,431,432,456],[413,427,456],[413,421,423,426,456,498],[413,415,420,423,430,456],[413,456,487],[413,418,423,444,456,503,505],[397,398,413,456],[397,398,399,413,456,515,521,682,685,832,841,844],[397,413,456,664,722,724,725,726,833,834,835,836],[397,413,456,515,521,685,693,720,721,724,837,840],[397,413,456,515,519,520,664,666,683,693,721,722,723],[413,456,660],[246,397,413,456,720],[397,413,456,720],[397,413,456,832],[397,413,456,515,519,664,683,710,720],[397,413,456,664,720,724,839],[397,413,456,843],[413,456,887],[413,456,519,664,843],[397,413,456,825,845,884,885],[413,456,664,686,843],[397,413,456,520],[397,413,456,519],[413,456,843,889,890,891,892,896,898],[413,456,843,894,895,897,898],[413,456,664],[413,456,660,664],[397,413,456,664,665,683],[397,413,456,521,683,684],[397,413,456,515,519,520,664,665,666,682],[413,456,517],[413,456,516],[413,456,518],[413,456,471,505,703],[413,456,471,505],[413,456,468,471,505,697,698,699],[413,456,698,702,704,842],[413,456,461,505],[413,456,695,709],[413,456,461,505,694],[413,456,705,706,709],[413,456,700,702,704],[413,456,705,706,707],[413,456,471,705],[413,456,469,487,505,696],[413,456,471,505,697,701],[413,456,555,556,557,558,559,560,561,562,563],[413,456,527],[413,456,526,527,532],[413,456,528,529,530,531,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651],[413,456,527,564],[413,456,527,604],[413,456,526],[413,456,522,523,524,525,526,527,532,652,653,654,655,659],[413,456,532],[413,456,524,657,658],[413,456,526,656],[413,456,527,532],[413,456,522,523],[413,456,603],[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,181,190,192,193,194,195,196,197,199,200,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,413,456],[103,413,456],[59,62,413,456],[61,413,456],[61,62,413,456],[58,59,60,62,413,456],[59,61,62,219,413,456],[62,413,456],[58,61,103,413,456],[61,62,219,413,456],[61,227,413,456],[59,61,62,413,456],[71,413,456],[94,413,456],[115,413,456],[61,62,103,413,456],[62,110,413,456],[61,62,103,121,413,456],[61,62,121,413,456],[62,162,413,456],[62,103,413,456],[58,62,180,413,456],[58,62,181,413,456],[203,413,456],[187,189,413,456],[198,413,456],[187,413,456],[58,62,180,187,188,413,456],[180,181,189,413,456],[201,413,456],[58,62,187,188,189,413,456],[60,61,62,413,456],[58,62,413,456],[59,61,181,182,183,184,413,456],[103,181,182,183,184,413,456],[181,183,413,456],[61,182,183,185,186,190,413,456],[58,61,413,456],[62,205,413,456],[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,413,456],[191,413,456],[413,456,679],[413,456,669,670],[413,456,667,668,669,671,672,677],[413,456,668,669],[413,456,677],[413,456,678],[413,456,669],[413,456,667,668,669,672,673,674,675,676],[413,456,667,668,679],[413,456,680],[413,456,681],[413,456,661,662,663]],"fileInfos":[{"version":"69684132aeb9b5642cbcd9e22dff7818ff0ee1aa831728af0ecf97d3364d5546","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"092c2bfe125ce69dbb1223c85d68d4d2397d7d8411867b5cc03cec902c233763","affectsGlobalScope":true,"impliedFormat":1},{"version":"07f073f19d67f74d732b1adea08e1dc66b1b58d77cb5b43931dee3d798a2fd53","affectsGlobalScope":true,"impliedFormat":1},{"version":"80e18897e5884b6723488d4f5652167e7bb5024f946743134ecc4aa4ee731f89","affectsGlobalScope":true,"impliedFormat":1},{"version":"cd034f499c6cdca722b60c04b5b1b78e058487a7085a8e0d6fb50809947ee573","affectsGlobalScope":true,"impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"1d242d5c24cf285c88bc4fb93c5ff903de8319064e282986edeb6247ba028d5e","impliedFormat":1},{"version":"8d6d51a5118d000ed3bfe6e1dd1335bebfff3fef23cd2af2f84a24d30f90cc90","affectsGlobalScope":true,"impliedFormat":1},{"version":"6d8dedbec739bc79642c1e96e9bfc0b83b25b104a0486aebf016fc7b85b39f48","impliedFormat":1},{"version":"e89535c3ec439608bcd0f68af555d0e5ddf121c54abe69343549718bd7506b9c","impliedFormat":1},{"version":"622a984b60c294ffb2f9152cf1d4d12e91d2b733d820eec949cf54d63a3c1025","impliedFormat":1},{"version":"81aae92abdeaccd9c1723cef39232c90c1aed9d9cf199e6e2a523b7d8e058a11","impliedFormat":1},{"version":"a63a6c6806a1e519688ef7bd8ca57be912fc0764485119dbd923021eb4e79665","impliedFormat":1},{"version":"75b57b109d774acca1e151df21cf5cb54c7a1df33a273f0457b9aee4ebd36fb9","impliedFormat":1},{"version":"073ca26c96184db9941b5ec0ddea6981c9b816156d9095747809e524fdd90e35","impliedFormat":1},{"version":"e41d17a2ec23306d953cda34e573ed62954ca6ea9b8c8b74e013d07a6886ce47","impliedFormat":1},{"version":"241bd4add06f06f0699dcd58f3b334718d85e3045d9e9d4fa556f11f4d1569c1","impliedFormat":1},{"version":"2ae3787e1498b20aad1b9c2ee9ea517ec30e89b70d242d8e3e52d1e091039695","impliedFormat":1},{"version":"c7c72c4cffb1bc83617eefed71ed68cc89df73cab9e19507ccdecb3e72b4967e","affectsGlobalScope":true,"impliedFormat":1},{"version":"b8bff8a60af0173430b18d9c3e5c443eaa3c515617210c0c7b3d2e1743c19ecb","impliedFormat":1},{"version":"38b38db08e7121828294dec10957a7a9ff263e33e2a904b346516d4a4acca482","impliedFormat":1},{"version":"a76ebdf2579e68e4cfe618269c47e5a12a4e045c2805ed7f7ab37af8daa6b091","impliedFormat":1},{"version":"8a2aaea564939c22be05d665cc955996721bad6d43148f8fa21ae8f64afecd37","impliedFormat":1},{"version":"e59d36b7b6e8ba2dd36d032a5f5c279d2460968c8b4e691ca384f118fb09b52a","impliedFormat":1},{"version":"e96885c0684c9042ec72a9a43ef977f6b4b4a2728f4b9e737edcbaa0c74e5bf6","impliedFormat":1},{"version":"95950a187596e206d32d5d9c7b932901088c65ed8f9040e614aa8e321e0225ef","impliedFormat":1},{"version":"89e061244da3fc21b7330f4bd32f47c1813dd4d7f1dc3d0883d88943f035b993","impliedFormat":1},{"version":"e46558c2e04d06207b080138678020448e7fc201f3d69c2601b0d1456105f29a","impliedFormat":1},{"version":"71549375db52b1163411dba383b5f4618bdf35dc57fa327a1c7d135cf9bf67d1","impliedFormat":1},{"version":"7e6b2d61d6215a4e82ea75bc31a80ebb8ad0c2b37a60c10c70dd671e8d9d6d5d","impliedFormat":1},{"version":"78bea05df2896083cca28ed75784dde46d4b194984e8fc559123b56873580a23","impliedFormat":1},{"version":"5dd04ced37b7ea09f29d277db11f160df7fd73ba8b9dba86cb25552e0653a637","impliedFormat":1},{"version":"f74b81712e06605677ae1f061600201c425430151f95b5ef4d04387ad7617e6a","impliedFormat":1},{"version":"9a72847fcf4ac937e352d40810f7b7aec7422d9178451148296cf1aa19467620","impliedFormat":1},{"version":"3ae18f60e0b96fa1e025059b7d25b3247ba4dcb5f4372f6d6e67ce2adac74eac","impliedFormat":1},{"version":"2b9260f44a2e071450ae82c110f5dc8f330c9e5c3e85567ed97248330f2bf639","impliedFormat":1},{"version":"4f196e13684186bda6f5115fc4677a87cf84a0c9c4fc17b8f51e0984f3697b6d","impliedFormat":1},{"version":"61419f2c5822b28c1ea483258437c1faab87d00c6f84481aa22afb3380d8e9a4","impliedFormat":1},{"version":"64479aee03812264e421c0bf5104a953ca7b02740ba80090aead1330d0effe91","impliedFormat":1},{"version":"0521108c9f8ddb17654a0a54dae6ba9667c99eddccfd6af5748113e022d1c37a","impliedFormat":1},{"version":"c5570e504be103e255d80c60b56c367bf45d502ca52ee35c55dec882f6563b5c","impliedFormat":1},{"version":"ee764e6e9a7f2b987cc1a2c0a9afd7a8f4d5ebc4fdb66ad557a7f14a8c2bd320","impliedFormat":1},{"version":"0520b5093712c10c6ef23b5fea2f833bf5481771977112500045e5ea7e8e2b69","impliedFormat":1},{"version":"5c3cf26654cf762ac4d7fd7b83f09acfe08eef88d2d6983b9a5a423cb4004ca3","impliedFormat":1},{"version":"e60fa19cf7911c1623b891155d7eb6b7e844e9afdf5738e3b46f3b687730a2bd","impliedFormat":1},{"version":"b1fd72ff2bb0ba91bb588f3e5329f8fc884eb859794f1c4657a2bfa122ae54d0","impliedFormat":1},{"version":"6cf42a4f3cfec648545925d43afaa8bb364ac10a839ffed88249da109361b275","impliedFormat":1},{"version":"d7058e75920120b142a9d57be25562a3cd9a936269fd52908505f530105f2ec4","impliedFormat":1},{"version":"6df52b70d7f7702202f672541a5f4a424d478ee5be51a9d37b8ccbe1dbf3c0f2","impliedFormat":1},{"version":"0ca7f997e9a4d8985e842b7c882e521b6f63233c4086e9fe79dd7a9dc4742b5e","impliedFormat":1},{"version":"91046b5c6b55d3b194c81fd4df52f687736fad3095e9d103ead92bb64dc160ee","impliedFormat":1},{"version":"db5704fdad56c74dfc5941283c1182ed471bd17598209d3ac4a49faa72e43cfc","impliedFormat":1},{"version":"758e8e89559b02b81bc0f8fd395b17ad5aff75490c862cbe369bb1a3d1577c40","impliedFormat":1},{"version":"2ee64342c077b1868f1834c063f575063051edd6e2964257d34aad032d6b657c","impliedFormat":1},{"version":"6f6b4b3d670b6a5f0e24ea001c1b3d36453c539195e875687950a178f1730fa7","impliedFormat":1},{"version":"a472a1d3f25ce13a1d44911cd3983956ac040ce2018e155435ea34afb25f864c","impliedFormat":1},{"version":"b48b83a86dd9cfe36f8776b3ff52fcd45b0e043c0538dc4a4b149ba45fe367b9","impliedFormat":1},{"version":"792de5c062444bd2ee0413fb766e57e03cce7cdaebbfc52fc0c7c8e95069c96b","impliedFormat":1},{"version":"a79e3e81094c7a04a885bad9b049c519aace53300fb8a0fe4f26727cb5a746ce","impliedFormat":1},{"version":"93181bac0d90db185bb730c95214f6118ae997fe836a98a49664147fbcaf1988","impliedFormat":1},{"version":"8a4e89564d8ea66ad87ee3762e07540f9f0656a62043c910d819b4746fc429c5","impliedFormat":1},{"version":"b9011d99942889a0f95e120d06b698c628b0b6fdc3e6b7ecb459b97ed7d5bcc6","impliedFormat":1},{"version":"4d639cbbcc2f8f9ce6d55d5d503830d6c2556251df332dc5255d75af53c8a0e7","impliedFormat":1},{"version":"cdb48277f600ab5f429ecf1c5ea046683bc6b9f73f3deab9a100adac4b34969c","impliedFormat":1},{"version":"75be84956a29040a1afbe864c0a7a369dfdb739380072484eff153905ef867ee","impliedFormat":1},{"version":"b06b4adc2ae03331a92abd1b19af8eb91ec2bf8541747ee355887a167d53145e","impliedFormat":1},{"version":"c54166a85bd60f86d1ebb90ce0117c0ecb850b8a33b366691629fdf26f1bbbd8","impliedFormat":1},{"version":"0d417c15c5c635384d5f1819cc253a540fe786cc3fda32f6a2ae266671506a21","impliedFormat":1},{"version":"80f23f1d60fbed356f726b3b26f9d348dddbb34027926d10d59fad961e70a730","impliedFormat":1},{"version":"cb59317243a11379a101eb2f27b9df1022674c3df1df0727360a0a3f963f523b","impliedFormat":1},{"version":"cc20bb2227dd5de0aab0c8d697d1572f8000550e62c7bf5c92f212f657dd88c5","impliedFormat":1},{"version":"06b8a7d46195b6b3980e523ef59746702fd210b71681a83a5cf73799623621f9","impliedFormat":1},{"version":"860e4405959f646c101b8005a191298b2381af8f33716dc5f42097e4620608f8","impliedFormat":1},{"version":"f7e32adf714b8f25d3c1783473abec3f2e82d5724538d8dcf6f51baaaff1ca7a","impliedFormat":1},{"version":"d0da80c845999a16c24d0783033fb5366ada98df17867c98ad433ede05cd87fd","impliedFormat":1},{"version":"bfbf80f9cd4558af2d7b2006065340aaaced15947d590045253ded50aabb9bc5","impliedFormat":1},{"version":"fd9a991b51870325e46ebb0e6e18722d313f60cd8e596e645ec5ac15b96dbf4e","impliedFormat":1},{"version":"c3bd2b94e4298f81743d92945b80e9b56c1cdfb2bef43c149b7106a2491b1fc9","impliedFormat":1},{"version":"a246cce57f558f9ebaffd55c1e5673da44ea603b4da3b2b47eb88915d30a9181","impliedFormat":1},{"version":"d993eacc103c5a065227153c9aae8acea3a4322fe1a169ee7c70b77015bf0bb2","impliedFormat":1},{"version":"fc2b03d0c042aa1627406e753a26a1eaad01b3c496510a78016822ef8d456bb6","impliedFormat":1},{"version":"063c7ebbe756f0155a8b453f410ca6b76ffa1bbc1048735bcaf9c7c81a1ce35f","impliedFormat":1},{"version":"314e402cd481370d08f63051ae8b8c8e6370db5ee3b8820eeeaaf8d722a6dac6","impliedFormat":1},{"version":"9669075ac38ce36b638b290ba468233980d9f38bdc62f0519213b2fd3e2552ec","impliedFormat":1},{"version":"4d123de012c24e2f373925100be73d50517ac490f9ed3578ac82d0168bfbd303","impliedFormat":1},{"version":"656c9af789629aa36b39092bee3757034009620439d9a39912f587538033ce28","impliedFormat":1},{"version":"3ac3f4bdb8c0905d4c3035d6f7fb20118c21e8a17bee46d3735195b0c2a9f39f","impliedFormat":1},{"version":"1f453e6798ed29c86f703e9b41662640d4f2e61337007f27ac1c616f20093f69","impliedFormat":1},{"version":"af43b7871ff21c62bf1a54ec5c488e31a8d3408d5b51ff2e9f8581b6c55f2fc7","impliedFormat":1},{"version":"70550511d25cbb0b6a64dcac7fffc3c1397fd4cbeb6b23ccc7f9b794ab8a6954","impliedFormat":1},{"version":"af0fbf08386603a62f2a78c42d998c90353b1f1d22e05a384545f7accf881e0a","impliedFormat":1},{"version":"cefc20054d20b85b534206dbcedd509bb74f87f3d8bc45c58c7be3a76caa45e1","impliedFormat":1},{"version":"ad6eee4877d0f7e5244d34bc5026fd6e9cf8e66c5c79416b73f9f6ebf132f924","impliedFormat":1},{"version":"4888fd2bcfee9a0ce89d0df860d233e0cee8ee9c479b6bd5a5d5f9aae98342fe","impliedFormat":1},{"version":"f4749c102ced952aa6f40f0b579865429c4869f6d83df91000e98005476bee87","impliedFormat":1},{"version":"56654d2c5923598384e71cb808fac2818ca3f07dd23bb018988a39d5e64f268b","impliedFormat":1},{"version":"8b6719d3b9e65863da5390cb26994602c10a315aa16e7d70778a63fee6c4c079","impliedFormat":1},{"version":"05f56cd4b929977d18df8f3d08a4c929a2592ef5af083e79974b20a063f30940","impliedFormat":1},{"version":"547d3c406a21b30e2b78629ecc0b2ddaf652d9e0bdb2d59ceebce5612906df33","impliedFormat":1},{"version":"b3a4f9385279443c3a5568ec914a9492b59a723386161fd5ef0619d9f8982f97","impliedFormat":1},{"version":"3fe66aba4fbe0c3ba196a4f9ed2a776fe99dc4d1567a558fb11693e9fcc4e6ed","impliedFormat":1},{"version":"140eef237c7db06fc5adcb5df434ee21e81ee3a6fd57e1a75b8b3750aa2df2d8","impliedFormat":1},{"version":"0944ec553e4744efae790c68807a461720cff9f3977d4911ac0d918a17c9dd99","impliedFormat":1},{"version":"cb46b38d5e791acaa243bf342b8b5f8491639847463ac965b93896d4fb0af0d9","impliedFormat":1},{"version":"7c7d9e116fe51100ff766703e6b5e4424f51ad8977fe474ddd8d0959aa6de257","impliedFormat":1},{"version":"af70a2567e586be0083df3938b6a6792e6821363d8ef559ad8d721a33a5bcdaf","impliedFormat":1},{"version":"006cff3a8bcb92d77953f49a94cd7d5272fef4ab488b9052ef82b6a1260d870b","impliedFormat":1},{"version":"7d44bfdc8ee5e9af70738ff652c622ae3ad81815e63ab49bdc593d34cb3a68e5","impliedFormat":1},{"version":"339814517abd4dbc7b5f013dfd3b5e37ef0ea914a8bbe65413ecffd668792bc6","impliedFormat":1},{"version":"34d5bc0a6958967ec237c99f980155b5145b76e6eb927c9ffc57d8680326b5d8","impliedFormat":1},{"version":"9eae79b70c9d8288032cbe1b21d0941f6bd4f315e14786b2c1d10bccc634e897","impliedFormat":1},{"version":"18ce015ed308ea469b13b17f99ce53bbb97975855b2a09b86c052eefa4aa013a","impliedFormat":1},{"version":"5a931bc4106194e474be141e0bc1046629510dc95b9a0e4b02a3783847222965","impliedFormat":1},{"version":"5e5f371bf23d5ced2212a5ff56675aefbd0c9b3f4d4fdda1b6123ac6e28f058c","impliedFormat":1},{"version":"907c17ad5a05eecb29b42b36cc8fec6437be27cc4986bb3a218e4f74f606911c","impliedFormat":1},{"version":"ce60a562cd2a92f37a88f2ddd99a3abfbc5848d7baf38c48fb8d3243701fcb75","impliedFormat":1},{"version":"a726ad2d0a98bfffbe8bc1cd2d90b6d831638c0adc750ce73103a471eb9a891c","impliedFormat":1},{"version":"f44c0c8ce58d3dacac016607a1a90e5342d830ea84c48d2e571408087ae55894","impliedFormat":1},{"version":"75a315a098e630e734d9bc932d9841b64b30f7a349a20cf4717bf93044eff113","impliedFormat":1},{"version":"9131d95e32b3d4611d4046a613e022637348f6cebfe68230d4e81b691e4761a1","impliedFormat":1},{"version":"b03aa292cfdcd4edc3af00a7dbd71136dd067ec70a7536b655b82f4dd444e857","impliedFormat":1},{"version":"b6e2b0448ced813b8c207810d96551a26e7d7bb73255eea4b9701698f78846d6","impliedFormat":1},{"version":"8ae10cd85c1bd94d2f2d17c4cbd25c068a4b2471c70c2d96434239f97040747a","impliedFormat":1},{"version":"9ed5b799c50467b0c9f81ddf544b6bcda3e34d92076d6cab183c84511e45c39f","impliedFormat":1},{"version":"b4fa87cc1833839e51c49f20de71230e259c15b2c9c3e89e4814acc1d1ef10de","impliedFormat":1},{"version":"e90ac9e4ac0326faa1bc39f37af38ace0f9d4a655cd6d147713c653139cf4928","impliedFormat":1},{"version":"ea27110249d12e072956473a86fd1965df8e1be985f3b686b4e277afefdde584","impliedFormat":1},{"version":"8776a368617ce51129b74db7d55c3373dadcce5d0701e61d106e99998922a239","impliedFormat":1},{"version":"5666075052877fe2fdddd5b16de03168076cf0f03fbca5c1d4a3b8f43cba570c","impliedFormat":1},{"version":"9108ab5af05418f599ab48186193b1b07034c79a4a212a7f73535903ba4ca249","impliedFormat":1},{"version":"bb4e2cdcadf9c9e6ee2820af23cee6582d47c9c9c13b0dca1baaffe01fbbcb5f","impliedFormat":1},{"version":"6e30d0b5a1441d831d19fe02300ab3d83726abd5141cbcc0e2993fa0efd33db4","impliedFormat":1},{"version":"423f28126b2fc8d8d6fa558035309000a1297ed24473c595b7dec52e5c7ebae5","impliedFormat":1},{"version":"fb30734f82083d4790775dae393cd004924ebcbfde49849d9430bf0f0229dd16","impliedFormat":1},{"version":"2c92b04a7a4a1cd9501e1be338bf435738964130fb2ad5bd6c339ee41224ac4c","impliedFormat":1},{"version":"c5c5f0157b41833180419dacfbd2bcce78fb1a51c136bd4bcba5249864d8b9b5","impliedFormat":1},{"version":"02ae43d5bae42efcd5a00d3923e764895ce056bca005a9f4e623aa6b4797c8af","impliedFormat":1},{"version":"db6e01f17012a9d7b610ae764f94a1af850f5d98c9c826ad61747dca0fb800bd","impliedFormat":1},{"version":"8a44b424edee7bb17dc35a558cc15f92555f14a0441205613e0e50452ab3a602","impliedFormat":1},{"version":"24a00d0f98b799e6f628373249ece352b328089c3383b5606214357e9107e7d5","impliedFormat":1},{"version":"33637e3bc64edd2075d4071c55d60b32bdb0d243652977c66c964021b6fc8066","impliedFormat":1},{"version":"0f0ad9f14dedfdca37260931fac1edf0f6b951c629e84027255512f06a6ebc4c","impliedFormat":1},{"version":"16ad86c48bf950f5a480dc812b64225ca4a071827d3d18ffc5ec1ae176399e36","impliedFormat":1},{"version":"8cbf55a11ff59fd2b8e39a4aa08e25c5ddce46e3af0ed71fb51610607a13c505","impliedFormat":1},{"version":"d5bc4544938741f5daf8f3a339bfbf0d880da9e89e79f44a6383aaf056fe0159","impliedFormat":1},{"version":"97f9169882d393e6f303f570168ca86b5fe9aab556e9a43672dae7e6bb8e6495","impliedFormat":1},{"version":"7c9adb3fcd7851497818120b7e151465406e711d6a596a71b807f3a17853cb58","impliedFormat":1},{"version":"6752d402f9282dd6f6317c8c048aaaac27295739a166eed27e00391b358fed9a","impliedFormat":1},{"version":"9fd7466b77020847dbc9d2165829796bf7ea00895b2520ff3752ffdcff53564b","impliedFormat":1},{"version":"fbfc12d54a4488c2eb166ed63bab0fb34413e97069af273210cf39da5280c8d6","impliedFormat":1},{"version":"85a84240002b7cf577cec637167f0383409d086e3c4443852ca248fc6e16711e","impliedFormat":1},{"version":"84794e3abd045880e0fadcf062b648faf982aa80cfc56d28d80120e298178626","impliedFormat":1},{"version":"053d8b827286a16a669a36ffc8ccc8acdf8cc154c096610aa12348b8c493c7b8","impliedFormat":1},{"version":"3cce4ce031710970fe12d4f7834375f5fd455aa129af4c11eb787935923ff551","impliedFormat":1},{"version":"8f62cbd3afbd6a07bb8c934294b6bfbe437021b89e53a4da7de2648ecfc7af25","impliedFormat":1},{"version":"62c3621d34fb2567c17a2c4b89914ebefbfbd1b1b875b070391a7d4f722e55dc","impliedFormat":1},{"version":"c05ac811542e0b59cb9c2e8f60e983461f0b0e39cea93e320fad447ff8e474f3","impliedFormat":1},{"version":"8e7a5b8f867b99cc8763c0b024068fb58e09f7da2c4810c12833e1ca6eb11c4f","impliedFormat":1},{"version":"132351cbd8437a463757d3510258d0fa98fd3ebef336f56d6f359cf3e177a3ce","impliedFormat":1},{"version":"df877050b04c29b9f8409aa10278d586825f511f0841d1ec41b6554f8362092b","impliedFormat":1},{"version":"33d1888c3c27d3180b7fd20bac84e97ecad94b49830d5dd306f9e770213027d1","impliedFormat":1},{"version":"ee942c58036a0de88505ffd7c129f86125b783888288c2389330168677d6347f","impliedFormat":1},{"version":"a3f317d500c30ea56d41501632cdcc376dae6d24770563a5e59c039e1c2a08ec","impliedFormat":1},{"version":"eb21ddc3a8136a12e69176531197def71dc28ffaf357b74d4bf83407bd845991","impliedFormat":1},{"version":"0c1651a159995dfa784c57b4ea9944f16bdf8d924ed2d8b3db5c25d25749a343","impliedFormat":1},{"version":"aaa13958e03409d72e179b5d7f6ec5c6cc666b7be14773ae7b6b5ee4921e52db","impliedFormat":1},{"version":"0a86e049843ad02977a94bb9cdfec287a6c5a0a4b6b5391a6648b1a122072c5a","impliedFormat":1},{"version":"40f06693e2e3e58526b713c937895c02e113552dc8ba81ecd49cdd9596567ddb","impliedFormat":1},{"version":"4ed5e1992aedb174fb8f5aa8796aa6d4dcb8bd819b4af1b162a222b680a37fa0","impliedFormat":1},{"version":"d7f4bd46a8b97232ea6f8c28012b8d2b995e55e729d11405f159d3e00c51420a","impliedFormat":1},{"version":"d604d413aff031f4bfbdae1560e54ebf503d374464d76d50a2c6ded4df525712","impliedFormat":1},{"version":"e4f4f9cf1e3ac9fd91ada072e4d428ecbf0aa6dc57138fb797b8a0ca3a1d521c","impliedFormat":1},{"version":"12bfd290936824373edda13f48a4094adee93239b9a73432db603127881a300d","impliedFormat":1},{"version":"340ceb3ea308f8e98264988a663640e567c553b8d6dc7d5e43a8f3b64f780374","impliedFormat":1},{"version":"c5a769564e530fba3ec696d0a5cff1709b9095a0bdf5b0826d940d2fc9786413","impliedFormat":1},{"version":"7124ef724c3fc833a17896f2d994c368230a8d4b235baed39aa8037db31de54f","impliedFormat":1},{"version":"5de1c0759a76e7710f76899dcae601386424eab11fb2efaf190f2b0f09c3d3d3","impliedFormat":1},{"version":"9c5ee8f7e581f045b6be979f062a61bf076d362bf89c7f966b993a23424e8b0d","impliedFormat":1},{"version":"1a11df987948a86aa1ec4867907c59bdf431f13ed2270444bf47f788a5c7f92d","impliedFormat":1},{"version":"8018dd2e95e7ce6e613ddd81672a54532614dc745520a2f9e3860ff7fb1be0ca","impliedFormat":1},{"version":"b756781cd40d465da57d1fc6a442c34ae61fe8c802d752aace24f6a43fedacee","impliedFormat":1},{"version":"0fe76167c87289ea094e01616dcbab795c11b56bad23e1ef8aba9aa37e93432a","impliedFormat":1},{"version":"3a45029dba46b1f091e8dc4d784e7be970e209cd7d4ff02bd15270a98a9ba24b","impliedFormat":1},{"version":"032c1581f921f8874cf42966f27fd04afcabbb7878fa708a8251cac5415a2a06","impliedFormat":1},{"version":"69c68ed9652842ce4b8e495d63d2cd425862104c9fb7661f72e7aa8a9ef836f8","impliedFormat":1},{"version":"0e704ee6e9fd8b6a5a7167886f4d8915f4bc22ed79f19cb7b32bd28458f50643","impliedFormat":1},{"version":"06f62a14599a68bcde148d1efd60c2e52e8fa540cc7dcfa4477af132bb3de271","impliedFormat":1},{"version":"904a96f84b1bcee9a7f0f258d17f8692e6652a0390566515fe6741a5c6db8c1c","impliedFormat":1},{"version":"11f19ce32d21222419cecab448fa335017ebebf4f9e5457c4fa9df42fa2dcca7","impliedFormat":1},{"version":"2e8ee2cbb5e9159764e2189cf5547aebd0e6b0d9a64d479397bb051cd1991744","impliedFormat":1},{"version":"1b0471d75f5adb7f545c1a97c02a0f825851b95fe6e069ac6ecaa461b8bb321d","impliedFormat":1},{"version":"1d157c31a02b1e5cca9bc495b3d8d39f4b42b409da79f863fb953fbe3c7d4884","impliedFormat":1},{"version":"07baaceaec03d88a4b78cb0651b25f1ae0322ac1aa0b555ae3749a79a41cba86","impliedFormat":1},{"version":"619a132f634b4ebe5b4b4179ea5870f62f2cb09916a25957bff17b408de8b56d","impliedFormat":1},{"version":"f60fa446a397eb1aead9c4e568faf2df8068b4d0306ebc075fb4be16ed26b741","impliedFormat":1},{"version":"f3cb784be4d9e91f966a0b5052a098d9b53b0af0d341f690585b0cc05c6ca412","impliedFormat":1},{"version":"350f63439f8fe2e06c97368ddc7fb6d6c676d54f59520966f7dbbe6a4586014e","impliedFormat":1},{"version":"eba613b9b357ac8c50a925fa31dc7e65ff3b95a07efbaa684b624f143d8d34ba","impliedFormat":1},{"version":"45b74185005ed45bec3f07cac6e4d68eaf02ead9ff5a66721679fb28020e5e7c","impliedFormat":1},{"version":"0f6199602df09bdb12b95b5434f5d7474b1490d2cd8cc036364ab3ba6fd24263","impliedFormat":1},{"version":"c8ca7fd9ec7a3ec82185bfc8213e4a7f63ae748fd6fced931741d23ef4ea3c0f","impliedFormat":1},{"version":"5c6a8a3c2a8d059f0592d4eab59b062210a1c871117968b10797dee36d991ef7","impliedFormat":1},{"version":"ad77fd25ece8e09247040826a777dc181f974d28257c9cd5acb4921b51967bd8","impliedFormat":1},{"version":"795a08ae4e193f345073b49f68826ab6a9b280400b440906e4ec5c237ae777e6","impliedFormat":1},{"version":"8153df63cf65122809db17128e5918f59d6bb43a371b5218f4430c4585f64085","impliedFormat":1},{"version":"a8150bc382dd12ce58e00764d2366e1d59a590288ee3123af8a4a2cb4ef7f9df","impliedFormat":1},{"version":"5adfaf2f9f33957264ad199a186456a4676b2724ed700fc313ff945d03372169","impliedFormat":1},{"version":"d5c41a741cd408c34cb91f84468f70e9bda3dfeabf33251a61039b3cdb8b22d8","impliedFormat":1},{"version":"c91d3f9753a311284e76cdcb348cbb50bca98733336ec726b54d77b7361b34de","impliedFormat":1},{"version":"cbaf4a4aa8a8c02aa681c5870d5c69127974de29b7e01df570edec391a417959","impliedFormat":1},{"version":"c7135e329a18b0e712378d5c7bc2faec6f5ab0e955ea0002250f9e232af8b3e4","impliedFormat":1},{"version":"340a45cd77b41d8a6deda248167fa23d3dc67ec798d411bd282f7b3d555b1695","impliedFormat":1},{"version":"fae330f86bc10db6841b310f32367aaa6f553036a3afc426e0389ddc5566cd74","impliedFormat":1},{"version":"cf25d45c02d5fd5d7adb16230a0e1d6715441eef5c0a79a21bfeaa9bbc058939","impliedFormat":1},{"version":"54c3822eaf6436f2eddc92dd6e410750465aba218adbf8ce5d488d773919ec01","impliedFormat":1},{"version":"99d99a765426accf8133737843fb024a154dc6545fc0ffbba968a7c0b848959d","impliedFormat":1},{"version":"c782c5fd5fa5491c827ecade05c3af3351201dd1c7e77e06711c8029b7a9ee4d","impliedFormat":1},{"version":"883d2104e448bb351c49dd9689a7e8117b480b614b2622732655cef03021bf6d","impliedFormat":1},{"version":"d9b00ee2eca9b149663fdba1c1956331841ae296ee03eaaff6c5becbc0ff1ea8","impliedFormat":1},{"version":"09a7e04beb0547c43270b327c067c85a4e2154372417390731dfe092c4350998","impliedFormat":1},{"version":"eee530aaa93e9ec362e3941ee8355e2d073c7b21d88c2af4713e3d701dab8fef","impliedFormat":1},{"version":"28d47319b97dbeee9130b78eae03b2061d46dedbf92b0d9de13ed7ab8399ccd0","impliedFormat":1},{"version":"8b8b92781a6bf150f9ee83f3d8ee278b6cdb98b8308c7ab3413684fc5d9078ef","impliedFormat":1},{"version":"7a0e4cd92545ad03910fd019ae9838718643bd4dde39881c745f236914901dfa","impliedFormat":1},{"version":"c99ebd20316217e349004ee1a0bc74d32d041fb6864093f10f31984c737b8cad","impliedFormat":1},{"version":"6f622e7f054f5ab86258362ac0a64a2d6a27f1e88732d6f5f052f422e08a70e7","impliedFormat":1},{"version":"d62d2ef93ceeb41cf9dfab25989a1e5f9ca5160741aac7f1453c69a6c14c69be","impliedFormat":1},{"version":"1491e80d72873fc586605283f2d9056ee59b166333a769e64378240df130d1c9","impliedFormat":1},{"version":"c32c073d389cfaa3b3e562423e16c2e6d26b8edebbb7d73ccffff4aa66f2171d","impliedFormat":1},{"version":"eca72bf229eecadb63e758613c62fab13815879053539a22477d83a48a21cd73","impliedFormat":1},{"version":"633db46fd1765736409a4767bfc670861468dde60dbb9a501fba4c1b72f8644d","impliedFormat":1},{"version":"689390db63cb282e6d0e5ce9b8f1ec2ec0912d0e2e6dac7235699a15ad17d339","impliedFormat":1},{"version":"f2ee748883723aa9325e5d7f30fce424f6a786706e1b91a5a55237c78ee89c4a","impliedFormat":1},{"version":"d928324d17146fce30b99a28d1d6b48648feac72bbd23641d3ce5ac34aefdfee","impliedFormat":1},{"version":"142f5190d730259339be1433931c0eb31ae7c7806f4e325f8a470bd9221b6533","impliedFormat":1},{"version":"c33a88f2578e8df2fdf36c6a0482bbee615eb3234c8f084ba31a9a96bd306b7f","impliedFormat":1},{"version":"22cca068109eb0e6b4f8acc3fe638d1e6ac277e2044246438763319792b546a1","impliedFormat":1},{"version":"8776e64e6165838ac152fa949456732755b0976d1867ae5534ce248f0ccd7f41","impliedFormat":1},{"version":"66cd33c4151ea27f6e17c6071652eadde9da1b3637dae65fd060212211c695ce","impliedFormat":1},{"version":"5c4c5b49bbb01828402bb04af1d71673b18852c11b7e95bfd5cf4c3d80d352c8","impliedFormat":1},{"version":"7030df3d920343df00324df59dc93a959a33e0f4940af3fefef8c07b7ee329bf","impliedFormat":1},{"version":"a96bc00e0c356e29e620eaec24a56d6dd7f4e304feefcc99066a1141c6fe05a7","impliedFormat":1},{"version":"d12cc0e5b09943c4cd0848f787eb9d07bf78b60798e4588c50582db9d4decc70","impliedFormat":1},{"version":"53b094f1afe442490555eeeb0384fc1ceb487560c83e31f9c64fb934c2dccd94","impliedFormat":1},{"version":"19c3760af3cbc9da99d5b7763b9e33aaf8d018bc2ed843287b7ff4343adf4634","impliedFormat":1},{"version":"9d1e38aeb76084848d2fcd39b458ec88246de028c0f3f448b304b15d764b23d2","impliedFormat":1},{"version":"d406da1eccf18cec56fd29730c24af69758fe3ff49c4f94335e797119cbc0554","impliedFormat":1},{"version":"4898c93890a136da9156c75acd1a80a941a961b3032a0cf14e1fa09a764448b7","impliedFormat":1},{"version":"f5d7a845e3e1c6c27351ea5f358073d0b0681537a2da6201fab254aa434121d3","impliedFormat":1},{"version":"9ddf8e9069327faa75d20135cab675779844f66590249769c3d35dd2a38c2ba9","impliedFormat":1},{"version":"d7c30f0abfe9e197e376b016086cf66b2ffb84015139963f37301ed0da9d3d0d","impliedFormat":1},{"version":"ff75bba0148f07775bcb54bf4823421ed4ebdb751b3bf79cc003bd22e49d7d73","impliedFormat":1},{"version":"d40d20ac633703a7333770bfd60360126fc3302d5392d237bbb76e8c529a4f95","impliedFormat":1},{"version":"35a9867207c488061fb4f6fe4715802fbc164b4400018d2fa0149ad02db9a61c","impliedFormat":1},{"version":"91bf47a209ad0eae090023c3ebc1165a491cf9758799368ffcbee8dbe7448f33","impliedFormat":1},{"version":"0abe2cd72812bbfc509975860277c7cd6f6e0be95d765a9da77fee98264a7e32","impliedFormat":1},{"version":"13286c0c8524606b17a8d68650970bab896fb505f348f71601abf0f2296e8913","impliedFormat":1},{"version":"fc2a131847515b3dff2f0e835633d9a00a9d03ed59e690e27eec85b7b0522f92","impliedFormat":1},{"version":"90433c678bc26751eb7a5d54a2bb0a14be6f5717f69abb5f7a04afc75dce15a4","impliedFormat":1},{"version":"cd0565ace87a2d7802bf4c20ea23a997c54e598b9eb89f9c75e69478c1f7a0b4","impliedFormat":1},{"version":"738020d2c8fc9df92d5dee4b682d35a776eaedfe2166d12bc8f186e1ea57cc52","impliedFormat":1},{"version":"86dd7c5657a0b0bc6bee8002edcfd544458d3d3c60974555746eb9b2583dc35e","impliedFormat":1},{"version":"d97b96b6ecd4ee03f9f1170722c825ef778430a6a0d7aab03b8929012bf773cd","impliedFormat":1},{"version":"f61963dc02ef27c48fb0e0016a413b1e00bcb8b97a3f5d4473cedc7b44c8dc77","impliedFormat":1},{"version":"272dbfe04cfa965d6fff63fdaba415c1b5a515b1881ae265148f8a84ddeb318f","impliedFormat":1},{"version":"2035fb009b5fafa9a4f4e3b3fdb06d9225b89f2cbbf17a5b62413bf72cea721a","impliedFormat":1},{"version":"eefafec7c059f07b885b79b327d381c9a560e82b439793de597441a4e68d774a","impliedFormat":1},{"version":"72636f59b635c378dc9ea5246b9b3517b1214e340e468e54cb80126353053b2e","impliedFormat":1},{"version":"ebb79f267a3bf2de5f8edc1995c5d31777b539935fab8b7d863e8efb06c8e9ea","impliedFormat":1},{"version":"ada033e6a4c7f4e147e6d76bb881069dc66750619f8cc2472d65beeec1100145","impliedFormat":1},{"version":"0c04cc14a807a5dc0e3752d18a3b2655a135fefbf76ddcdabd0c5df037530d41","impliedFormat":1},{"version":"605d29d619180fbec287d1701e8b1f51f2d16747ec308d20aba3e9a0dac43a0f","impliedFormat":1},{"version":"67c19848b442d77c767414084fc571ce118b08301c4ddff904889d318f3a3363","impliedFormat":1},{"version":"c704ff0e0cb86d1b791767a88af21dadfee259180720a14c12baee668d0eb8fb","impliedFormat":1},{"version":"195c50e15d5b3ea034e01fbdca6f8ad4b35ad47463805bb0360bdffd6fce3009","impliedFormat":1},{"version":"da665f00b6877ae4adb39cd548257f487a76e3d99e006a702a4f38b4b39431cb","impliedFormat":1},{"version":"2b82adc9eead34b824a3f4dad315203fbfa56bee0061ccf9b485820606564f70","impliedFormat":1},{"version":"eb47aaa5e1b0a69388bb48422a991b9364a9c206a97983e0227289a9e1fca178","impliedFormat":1},{"version":"d7a4309673b06223537bc9544b1a5fe9425628e1c8ab5605f3c5ebc27ecb8074","impliedFormat":1},{"version":"db2108aea36e7faa83c38f6fe8225b9ad40835c0cba7fa38e969768299b83173","impliedFormat":1},{"version":"3eadfd083d40777b403f4f4eecfa40f93876f2a01779157cc114b2565a7afb51","impliedFormat":1},{"version":"cb6789ce3eba018d5a7996ccbf50e27541d850e9b4ee97fdcb3cbd8c5093691f","impliedFormat":1},{"version":"a3684ea9719122f9477902acd08cd363a6f3cff6d493df89d4dc12fa58204e27","impliedFormat":1},{"version":"2828dabf17a6507d39ebcc58fef847e111dcf2d51b8e4ff0d32732c72be032b3","impliedFormat":1},{"version":"c0c46113b4cd5ec9e7cf56e6dbfb3930ef6cbba914c0883eeced396988ae8320","impliedFormat":1},{"version":"118ea3f4e7b9c12e92551be0766706f57a411b4f18a1b4762cfde3cd6d4f0a96","impliedFormat":1},{"version":"2ad163aaddfa29231a021de6838f59378a210501634f125ed04cfa7d066ffc53","impliedFormat":1},{"version":"6305acbe492b9882ec940f8f0c8e5d1e1395258852f99328efcb1cf1683ca817","impliedFormat":1},{"version":"7619b1f6087a4e9336b2c42bd784b05aa4a2204a364b60171e5a628f817a381e","impliedFormat":1},{"version":"15be9120572c9fbcd3c267bd93b4140354514c9e70734e6fcca65ff4a246f83a","impliedFormat":1},{"version":"412482ab85893cec1d6f26231359474d1f59f6339e2743c08da1b05fc1d12767","impliedFormat":1},{"version":"858e2315e58af0d28fcd7f141a2505aba6a76fd10378ba0ad169b0336fee33fc","impliedFormat":1},{"version":"02da6c1b34f4ae2120d70cf5f9268bf1aedf62e55529d34f5974f5a93655ce38","impliedFormat":1},{"version":"3ecf179ef1cc28f7f9b46c8d2e496d50b542c176e94ed0147bab147b4a961cd6","impliedFormat":1},{"version":"b145da03ce7e174af5ced2cbbd16e96d3d5c2212f9a90d3657b63a5650a73b7f","impliedFormat":1},{"version":"c7aadab66a2bc90eeb0ab145ca4daebcbc038e24359263de3b40e7b1c7affba6","impliedFormat":1},{"version":"99518dc06286877a7b716e0f22c1a72d3c62be42701324b49f27bcc03573efff","impliedFormat":1},{"version":"f4575fd196a7e33c7be9773a71bcc5fbe7182a2152be909f6b8e8e7ba2438f06","impliedFormat":1},{"version":"05cba5acd77a4384389b9c62739104b5a1693efd66e6abac6c5ffc53280ae777","impliedFormat":1},{"version":"acacda82ebd929fe2fe9e31a37f193fc8498a7393a1c31dc5ceb656e2b45b708","impliedFormat":1},{"version":"1b13e7c5c58ab894fe65b099b6d19bb8afae6d04252db1bf55fe6ba95a0af954","impliedFormat":1},{"version":"4355d326c3129e5853b56267903f294ad03e34cc28b75f96b80734882dedac80","impliedFormat":1},{"version":"37139a8d45342c05b6a5aa1698a2e8e882d6dca5fb9a77aa91f05ac04e92e70b","impliedFormat":1},{"version":"e37191297f1234d3ae54edbf174489f9a3091a05fe959724db36f8e58d21fb17","impliedFormat":1},{"version":"3fca8fb3aab1bc7abb9b1420f517e9012fdddcbe18803bea2dd48fad6c45e92e","impliedFormat":1},{"version":"d0b0779e0cac4809a9a3c764ba3bd68314de758765a8e3b9291fe1671bfeb8a1","impliedFormat":1},{"version":"d2116b5f989aa68e585ae261b9d6d836be6ed1be0b55b47336d9f3db34674e86","impliedFormat":1},{"version":"d79a227dd654be16d8006eac8b67212679d1df494dfe6da22ea0bd34a13e010c","impliedFormat":1},{"version":"b9c89b4a2435c171e0a9a56668f510a376cb7991eaecef08b619e6d484841735","impliedFormat":1},{"version":"44a298a6c52a7dab8e970e95a6dabe20972a7c31c340842e0dc57f2c822826eb","impliedFormat":1},{"version":"6a79b61f57699de0a381c8a13f4c4bcd120556bfab0b4576994b6917cb62948b","impliedFormat":1},{"version":"c5133d7bdec65f465df12f0b507fbc0d96c78bfa5a012b0eb322cf1ff654e733","impliedFormat":1},{"version":"00b9ff040025f6b00e0f4ac8305fea1809975b325af31541bd9d69fa3b5e57b1","impliedFormat":1},{"version":"9f96b9fd0362a7bfe6a3aa70baa883c47ae167469c904782c99ccc942f62f0dc","impliedFormat":1},{"version":"54d91053dc6a2936bfd01a130cc3b524e11aa0349da082e8ac03a8bf44250338","impliedFormat":1},{"version":"89049878a456b5e0870bb50289ea8ece28a2abd0255301a261fa8ab6a3e9a07d","impliedFormat":1},{"version":"55ae9554811525f24818e19bdc8779fa99df434be7c03e5fc47fa441315f0226","impliedFormat":1},{"version":"24abac81e9c60089a126704e936192b2309413b40a53d9da68dadd1dd107684e","impliedFormat":1},{"version":"f13310c360ecffddb3858dcb33a7619665369d465f55e7386c31d45dfc3847bf","impliedFormat":1},{"version":"e7bde95a05a0564ee1450bc9a53797b0ac7944bf24d87d6f645baca3aa60df48","impliedFormat":1},{"version":"62e68ce120914431a7d34232d3eca643a7ddd67584387936a5202ae1c4dd9a1b","impliedFormat":1},{"version":"91d695bba902cc2eda7edc076cd17c5c9340f7bb254597deb6679e343effadbb","impliedFormat":1},{"version":"e1cb8168c7e0bd4857a66558fe7fe6c66d08432a0a943c51bacdac83773d5745","impliedFormat":1},{"version":"a464510505f31a356e9833963d89ce39f37a098715fc2863e533255af4410525","impliedFormat":1},{"version":"ebbe6765a836bfa7f03181bc433c8984ca29626270ca1e240c009851222cb8a7","impliedFormat":1},{"version":"ac10457b51ee4a3173b7165c87c795eadd094e024f1d9f0b6f0c131126e3d903","impliedFormat":1},{"version":"468df9d24a6e2bc6b4351417e3b5b4c2ca08264d6d5045fe18eb42e7996e58b4","impliedFormat":1},{"version":"954523d1f4856180cbf79b35bd754e14d3b2aea06c7efd71b254c745976086e9","impliedFormat":1},{"version":"a8af4739274959d70f7da4bfdd64f71cfc08d825c2d5d3561bc7baed760b33ef","impliedFormat":1},{"version":"090fda1107e7d4f8f30a2b341834ed949f01737b5ec6021bb6981f8907330bdb","impliedFormat":1},{"version":"cc32874a27100c32e3706d347eb4f435d6dd5c0d83e547c157352f977bbc6385","impliedFormat":1},{"version":"e45b069d58c9ac341d371b8bc3db4fa7351b9eee1731bffd651cfc1eb622f844","impliedFormat":1},{"version":"7f3c74caad25bfb6dfbf78c6fe194efcf8f79d1703d785fc05cd606fe0270525","impliedFormat":1},{"version":"54f3f7ff36384ca5c9e1627118b43df3014b7e0f62c9722619d19cdb7e43d608","impliedFormat":1},{"version":"2f346f1233bae487f1f9a11025fc73a1bf9093ee47980a9f4a75b84ea0bb7021","impliedFormat":1},{"version":"013444d0b8c1f7b5115462c31573a699fee7458381b0611062a0069d3ef810e8","impliedFormat":1},{"version":"0612b149cabbc136cb25de9daf062659f306b67793edc5e39755c51c724e2949","impliedFormat":1},{"version":"2579b150b86b5f644d86a6d58f17e3b801772c78866c34d41f86f3fc9eb523fe","impliedFormat":1},{"version":"0353e05b0d8475c10ddd88056e0483b191aa5cdea00a25e0505b96e023f1a2d9","impliedFormat":1},{"version":"8c4df93dafcf06adc42a63477cc38b352565a3ed0a19dd8ef7dfacc253749327","impliedFormat":1},{"version":"22a35275abc67f8aba44efc52b2f4b1abc2c94e183d36647fdab5a5e7c1bdf23","impliedFormat":1},{"version":"99193bafaa9ce112889698de25c4b8c80b1209bb7402189aea1c7ada708a8a54","impliedFormat":1},{"version":"70473538c6eb9494d53bf1539fe69df68d87c348743d8f7244dcb02ca3619484","impliedFormat":1},{"version":"c48932ab06a4e7531bdca7b0f739ace5fa273f9a1b9009bcd26902f8c0b851f0","impliedFormat":1},{"version":"df6c83e574308f6540c19e3409370482a7d8f448d56c65790b4ac0ab6f6fedd8","impliedFormat":1},{"version":"32f19b665839b1382b21afc41917cda47a56e744cd3df9986b13a72746d1c522","impliedFormat":1},{"version":"8db1ed144dd2304b9bd6e41211e22bad5f4ab1d8006e6ac127b29599f4b36083","impliedFormat":1},{"version":"843a5e3737f2abbbbd43bf2014b70f1c69a80530814a27ae1f8be213ae9ec222","impliedFormat":1},{"version":"6fc1be224ad6b3f3ec11535820def2d21636a47205c2c9de32238ba1ac8d82e6","impliedFormat":1},{"version":"5a44788293f9165116c9c183be66cefef0dc5d718782a04847de53bf664f3cc1","impliedFormat":1},{"version":"afd653ae63ce07075b018ba5ce8f4e977b6055c81cc65998410b904b94003c0a","impliedFormat":1},{"version":"9172155acfeb17b9d75f65b84f36cb3eb0ff3cd763db3f0d1ad5f6d10d55662f","impliedFormat":1},{"version":"71807b208e5f15feffb3ff530bec5b46b1217af0d8cc96dde00d549353bcb864","impliedFormat":1},{"version":"1a6eca5c2bc446481046c01a54553c3ffb856f81607a074f9f0256c59dd0ab13","impliedFormat":1},{"version":"752e6696e63e0b45d33fe38d250fdde73dc3a8173f387003023171b469cb8129","signature":"4680ff663adb1e0efe6fde0b68d06a4affccc5694d95fb248c130b3427b7310b"},{"version":"8ed536c0b72f565ffe28a9e4c343139c18607a92e41104572b91b0e0224ed20f","signature":"53123bc95d236d2bcefcda34a1a45afb36db5bf44c31804e4151da1040ea4744"},{"version":"dff93e0997c4e64ff29e9f70cad172c0b438c4f58c119f17a51c94d48164475a","impliedFormat":1},{"version":"fd1ddf926b323dfa439be49c1d41bbe233fe5656975a11183aeb3bf2addfa3bb","impliedFormat":1},{"version":"6dda11db28da6bcc7ff09242cd1866bdddd0ae91e2db3bea03ba66112399641a","impliedFormat":1},{"version":"ea4cd1e72af1aa49cf208b9cb4caf542437beb7a7a5b522f50a5f1b7480362ed","impliedFormat":1},{"version":"903a7d68a222d94da11a5a89449fdd5dd75d83cd95af34c0242e10b85ec33a93","impliedFormat":1},{"version":"e7fe2e7ed5c3a7beff60361632be19a8943e53466b7dd69c34f89faf473206d7","impliedFormat":1},{"version":"b4896cee83379e159f83021e262223354db79e439092e485611163e2082224ff","impliedFormat":1},{"version":"5243e79a643e41d9653011d6c66e95048fc0478eb8593dc079b70877a2e3990e","impliedFormat":1},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"ab41ef1f2cdafb8df48be20cd969d875602483859dc194e9c97c8a576892c052","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"49a5a44f2e68241a1d2bd9ec894535797998841c09729e506a7cbfcaa40f2180","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"4d2b0eb911816f66abe4970898f97a2cfc902bcd743cbfa5017fad79f7ef90d8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"e53a3c2a9f624d90f24bf4588aacd223e7bec1b9d0d479b68d2f4a9e6011147f","impliedFormat":1},{"version":"24b8685c62562f5d98615c5a0c1d05f297cf5065f15246edfe99e81ec4c0e011","impliedFormat":1},{"version":"93507c745e8f29090efb99399c3f77bec07db17acd75634249dc92f961573387","impliedFormat":1},{"version":"339dc5265ee5ed92e536a93a04c4ebbc2128f45eeec6ed29f379e0085283542c","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"8d31155317e3cceb916d113be587617534034977bc364687235cdf4c7bd87e31","affectsGlobalScope":true,"impliedFormat":1},{"version":"6b042aa5d277ad6963e2837179fd2f8fbb01968ac67115b0833c0244e93d1d50","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"8c0bcd6c6b67b4b503c11e91a1fb91522ed585900eab2ab1f61bba7d7caa9d6f","impliedFormat":1},{"version":"9e025aa38cad40827cc30aca974fe33fe2c4652fe8c88f48dadbbbd6300c8b07","affectsGlobalScope":true,"impliedFormat":1},{"version":"f3e58c4c18a031cbb17abec7a4ad0bd5ae9fc70c1f4ba1e7fb921ad87c504aca","impliedFormat":1},{"version":"84c1930e33d1bb12ad01bcbe11d656f9646bd21b2fb2afd96e8e10615a021aef","impliedFormat":1},{"version":"35ec8b6760fd7138bbf5809b84551e31028fb2ba7b6dc91d95d098bf212ca8b4","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"4b87f767c7bc841511113c876a6b8bf1fd0cb0b718c888ad84478b372ec486b1","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d04e3640dd9eb67f7f1e5bd3d0bf96c784666f7aefc8ac1537af6f2d38d4c29","impliedFormat":1},{"version":"008e4cac37da1a6831aa43f6726da0073957ae89da2235082311eaf479b2ffa5","impliedFormat":1},{"version":"5a369483ac4cfbdf0331c248deeb36140e6907db5e1daed241546b4a2055f82c","impliedFormat":1},{"version":"e8f5b5cc36615c17d330eaf8eebbc0d6bdd942c25991f96ef122f246f4ff722f","impliedFormat":1},{"version":"f0bd7e6d931657b59605c44112eaf8b980ba7f957a5051ed21cb93d978cf2f45","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"0ada07543808f3b967624645a8e1ccd446f8b01ade47842acf1328aec899fed0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4c21aaa8257d7950a5b75a251d9075b6a371208fc948c9c8402f6690ef3b5b55","impliedFormat":1},{"version":"b5895e6353a5d708f55d8685c38a235c3a6d8138e374dee8ceb8ffde5aa8002a","impliedFormat":1},{"version":"b9b859f6e245c3c39ec85e65ab1b1ffe43473b75eaae16fe64f44c2d6832173e","impliedFormat":1},{"version":"93bd413918fa921c8729cef45302b24d8b6c7855d72d5bf82d3972595ae8dcbf","impliedFormat":1},{"version":"4ff41188773cbf465807dd2f7059c7494cbee5115608efc297383832a1150c43","impliedFormat":1},{"version":"dccdf1677e531e33f8ac961a68bc537418c9a414797c1ea7e91307501cdc3f5e","impliedFormat":1},{"version":"e184c4b8918ef56c8c9e68bd79f3f3780e2d0d75bf2b8a41da1509a40c2deb46","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3114a0b8ab879b52767d1225cb8420ec99a827e5f744dbeb4900afc08c3e341","impliedFormat":1},{"version":"93f437e1398a4f06a984f441f7fa7a9f0535c04399619b5c22e0b87bdee182cb","impliedFormat":1},{"version":"afbe24ab0d74694372baa632ecb28bb375be53f3be53f9b07ecd7fc994907de5","impliedFormat":1},{"version":"70731d10d5311bd4cf710ef7f6539b62660f4b0bfdbb3f9fbe1d25fe6366a7fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"6b19db3600a17af69d4f33d08cc7076a7d19fb65bb36e442cac58929ec7c9482","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e043a1bc8fbf2a255bccf9bf27e0f1caf916c3b0518ea34aa72357c0afd42ec","impliedFormat":1},{"version":"b4f70ec656a11d570e1a9edce07d118cd58d9760239e2ece99306ee9dfe61d02","impliedFormat":1},{"version":"3bc2f1e2c95c04048212c569ed38e338873f6a8593930cf5a7ef24ffb38fc3b6","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"f9d9d753d430ed050dc1bf2667a1bab711ccbb1c1507183d794cc195a5b085cc","impliedFormat":1},{"version":"9eece5e586312581ccd106d4853e861aaaa1a39f8e3ea672b8c3847eedd12f6e","impliedFormat":1},{"version":"ba1f814c22fd970255ddd60d61fb7e00c28271c933ab5d5cc19cd3ca66b8f57c","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"0dbcebe2126d03936c70545e96a6e41007cf065be38a1ce4d32a39fcedefead4","affectsGlobalScope":true,"impliedFormat":1},{"version":"1851a3b4db78664f83901bb9cac9e45e03a37bb5933cc5bf37e10bb7e91ab4eb","impliedFormat":1},{"version":"09d479208911ac3ac6a7c2fe86217fc1abe6c4f04e2d52e4890e500699eeab32","affectsGlobalScope":true,"impliedFormat":1},{"version":"12ed4559eba17cd977aa0db658d25c4047067444b51acfdcbf38470630642b23","affectsGlobalScope":true,"impliedFormat":1},{"version":"f3ffabc95802521e1e4bcba4c88d8615176dc6e09111d920c7a213bdda6e1d65","impliedFormat":1},{"version":"c40b3d3cfbb1227c8935f681c2480a32b560e387dd771d329cdbd1641f2d6da5","impliedFormat":1},{"version":"ae56f65caf3be91108707bd8dfbccc2a57a91feb5daabf7165a06a945545ed26","impliedFormat":1},{"version":"a136d5de521da20f31631a0a96bf712370779d1c05b7015d7019a9b2a0446ca9","impliedFormat":1},{"version":"5b566927cad2ed2139655d55d690ffa87df378b956e7fe1c96024c4d9f75c4cf","affectsGlobalScope":true,"impliedFormat":1},{"version":"c4a3720550d1787c8d6284040853c0781ff1e2cd8d842f2cb44547525ee34c36","affectsGlobalScope":true,"impliedFormat":1},{"version":"d3dffd70e6375b872f0b4e152de4ae682d762c61a24881ecc5eb9f04c5caf76f","impliedFormat":1},{"version":"fe5748232eaa52bbfd7ce314e52b246871731c5f41318fdaf6633cb14fa20da0","impliedFormat":1},{"version":"d91a7d8b5655c42986f1bdfe2105c4408f472831c8f20cf11a8c3345b6b56c8c","impliedFormat":1},{"version":"616075a6ac578cf5a013ee12964188b4412823796ce0b202c6f1d2e4ca8480d7","affectsGlobalScope":true,"impliedFormat":1},{"version":"e8a979b8af001c9fc2e774e7809d233c8ca955a28756f52ee5dee88ccb0611d2","impliedFormat":1},{"version":"cac793cc47c29e26e4ac3601dcb00b4435ebed26203485790e44f2ad8b6ad847","impliedFormat":1},{"version":"08bb8fb1430620b088894ecbb0a6cb972f963d63911bb3704febfa0d3a2f6ea5","impliedFormat":1},{"version":"5e4631f04c72971410015548c8137d6b007256c071ec504de385372033fec177","impliedFormat":1},{"version":"eb234b3e285e8bc071bdddc1ec0460095e13ead6222d44b02c4e0869522f9ba3","impliedFormat":1},{"version":"ce4e58f029088cc5f0e6e7c7863f6ace0bc04c2c4be7bc6730471c2432bd5895","impliedFormat":1},{"version":"018421260380d05df31b567b90368e1eacf22655b2b8dc2c11e0e76e5fd8978f","impliedFormat":1},{"version":"ef803dca265d6ba37f97b46e21c66d055a3007f71c1995d9ef15d4a07b0d2ad0","impliedFormat":1},{"version":"3d4adf825b7ac087cfbf3d54a7dc16a3959877bb4f5080e14d5e9d8d6159eba8","impliedFormat":1},{"version":"f9e034b1ae29825c00532e08ea852b0c72885c343ee48d2975db0a6481218ab3","impliedFormat":1},{"version":"1193f49cbb883f40326461fe379e58ffa4c18d15bf6d6a1974ad2894e4fb20f3","impliedFormat":1},{"version":"8f1241f5d9f0d3d72117768b3c974e462840fbd85026fb66685078945404cf2f","impliedFormat":1},{"version":"21247c958d397091ec30e63b27294baa1d1434c333da4fda697743190311dc62","impliedFormat":1},{"version":"73197e8f9d1eae945b7393e399bbdfa649f40cd7338d8a85a0e82e2d5a457303","impliedFormat":1},{"version":"d5eb5865d4cbaa9985cc3cfb920b230cdcf3363f1e70903a08dc4baab80b0ce1","impliedFormat":1},{"version":"51ebca098538b252953b1ef83c165f25b52271bfb6049cd09d197dddd4cd43c5","impliedFormat":1},{"version":"ebae4490e805b2c6fbb74ccd483611140c9883f03c6c83894034e6e252715612","signature":"8326627f9624f5916e8ab8fd9de320a0d84941eb82744ffd681270806d3bc98a"},{"version":"47937375e097fc9eb186b75a71aeaad6f1dcaa2715eb17e3a9e2e68258937161","signature":"51df08bd1aba1c77ad96dc27e7657955fcfc4ca354f03100850545e93f6ff276"},{"version":"cb5eaaa2a079305b1c5344af739b29c479746f7a7aefffc7175d23d8b7c8dbb0","impliedFormat":1},{"version":"bd324dccada40f2c94aaa1ebc82b11ce3927b7a2fe74a5ab92b431d495a86e6f","impliedFormat":1},{"version":"56749bf8b557c4c76181b2fd87e41bde2b67843303ae2eabb299623897d704d6","impliedFormat":1},{"version":"5a6fbec8c8e62c37e9685a91a6ef0f6ecaddb1ee90f7b2c2b71b454b40a0d9a6","impliedFormat":1},{"version":"e7435f2f56c50688250f3b6ef99d8f3a1443f4e3d65b4526dfb31dfd4ba532f8","impliedFormat":1},{"version":"6fc56a681a637069675b2e11b4aa105efe146f7a88876f23537e9ea139297cf9","impliedFormat":1},{"version":"33b7f4106cf45ae7ccbb95acd551e9a5cd3c27f598d48216bda84213b8ae0c7e","impliedFormat":1},{"version":"176d6f604b228f727afb8e96fd6ff78c7ca38102e07acfb86a0034d8f8a2064a","impliedFormat":1},{"version":"1b1a02c54361b8c222392054648a2137fc5983ad5680134a653b1d9f655fe43d","impliedFormat":1},{"version":"8bcb884d06860a129dbffa3500d51116d9d1040bb3bf1c9762eb2f1e7fd5c85c","impliedFormat":1},{"version":"e55c0f31407e1e4eee10994001a4f570e1817897a707655f0bbe4d4a66920e9e","impliedFormat":1},{"version":"a37c2194c586faa8979f50a5c5ca165b0903d31ee62a9fe65e4494aa099712c0","impliedFormat":1},{"version":"6602339ddc9cd7e54261bda0e70fb356d9cdc10e3ec7feb5fa28982f8a4d9e34","impliedFormat":1},{"version":"7ffaa736b8a04b0b8af66092da536f71ef13a5ef0428c7711f32b94b68f7c8c8","impliedFormat":1},{"version":"7b4930d666bbe5d10a19fcc8f60cfa392d3ad3383b7f61e979881d2c251bc895","impliedFormat":1},{"version":"46342f04405a2be3fbfb5e38fe3411325769f14482b8cd48077f2d14b64abcfb","impliedFormat":1},{"version":"8fa675c4f44e6020328cf85fdf25419300f35d591b4f56f56e00f9d52b6fbb3b","impliedFormat":1},{"version":"ba98f23160cfa6b47ee8072b8f54201f21a1ee9addc2ef461ebadf559fe5c43a","impliedFormat":1},{"version":"45a4591b53459e21217dc9803367a651e5a1c30358a015f27de0b3e719db816b","impliedFormat":1},{"version":"9ef22bee37885193b9fae7f4cad9502542c12c7fe16afe61e826cdd822643d84","impliedFormat":1},{"version":"b0451895b894c102eed19d50bd5fcb3afd116097f77a7d83625624fafcca8939","impliedFormat":1},{"version":"bce17120b679ff4f1be70f5fe5c56044e07ed45f1e555db6486c6ded8e1da1c8","impliedFormat":1},{"version":"7590477bfa2e309e677ff7f31cb466f377fcd0e10a72950439c3203175309958","impliedFormat":1},{"version":"3f9ebd554335d2c4c4e7dc67af342d37dc8f2938afa64605d8a93236022cc8a5","impliedFormat":1},{"version":"1c077c9f6c0bc02a36207994a6e92a8fbf72d017c4567f640b52bf32984d2392","impliedFormat":1},{"version":"600b42323925b32902b17563654405968aa12ee39e665f83987b7759224cc317","impliedFormat":1},{"version":"32c8f85f6b4e145537dfe61b94ddd98b47dbdd1d37dc4b7042a8d969cd63a1aa","impliedFormat":1},{"version":"2426ed0e9982c3d734a6896b697adf5ae93d634b73eb15b48da8106634f6d911","impliedFormat":1},{"version":"057431f69d565fb44c246f9f64eac09cf309a9af7afb97e588ebef19cc33c779","impliedFormat":1},{"version":"960d026ca8bf27a8f7a3920ee50438b50ec913d635aa92542ca07558f9c59eca","impliedFormat":1},{"version":"71f5d895cc1a8a935c40c070d3d0fade53ae7e303fd76f443b8b541dee19a90c","impliedFormat":1},{"version":"252eb4750d0439d1674ad0dc30d2a2a3e4655e08ad9e58a7e236b21e78d1d540","impliedFormat":1},{"version":"e344b4a389bb2dfa98f144f3f195387a02b6bdb69deed4a96d16cc283c567778","impliedFormat":1},{"version":"c6cdcd12d577032b84eed1de4d2de2ae343463701a25961b202cff93989439fb","impliedFormat":1},{"version":"203d75f653988a418930fb16fda8e84dea1fac7e38abdaafd898f257247e0860","impliedFormat":1},{"version":"c5b3da7e2ecd5968f723282aba49d8d1a2e178d0afe48998dad93f81e2724091","impliedFormat":1},{"version":"efd2860dc74358ffa01d3de4c8fa2f966ae52c13c12b41ad931c078151b36601","impliedFormat":1},{"version":"09acacae732e3cc67a6415026cfae979ebe900905500147a629837b790a366b3","impliedFormat":1},{"version":"f7b622759e094a3c2e19640e0cb233b21810d2762b3e894ef7f415334125eb22","impliedFormat":1},{"version":"99236ea5c4c583082975823fd19bcce6a44963c5c894e20384bc72e7eccf9b03","impliedFormat":1},{"version":"f6688a02946a3f7490aa9e26d76d1c97a388e42e77388cbab010b69982c86e9e","impliedFormat":1},{"version":"9f642953aba68babd23de41de85d4e97f0c39ef074cb8ab8aa7d55237f62aff6","impliedFormat":1},{"version":"529ac413f6eada3a1780c4050f4d4853488fc00652f45101737863e9ac519bff","impliedFormat":1},{"version":"2d2ec3235e01474f45a68f28cf826c2f5228b79f7d474d12ca3604cdcfdac80c","impliedFormat":1},{"version":"6dd249868034c0434e170ba6e0451d67a0c98e5a74fd57a7999174ee22a0fa7b","impliedFormat":1},{"version":"9716553c72caf4ff992be810e650707924ec6962f6812bd3fbdb9ac3544fd38f","impliedFormat":1},{"version":"506bc8f4d2d639bebb120e18d3752ddeee11321fd1070ad2ce05612753c628d6","impliedFormat":1},{"version":"053c51bbc32db54be396654ab5ecd03a66118d64102ac9e22e950059bc862a5e","impliedFormat":1},{"version":"1977f62a560f3b0fc824281fd027a97ce06c4b2d47b408f3a439c29f1e9f7e10","impliedFormat":1},{"version":"627570f2487bd8d899dd4f36ecb20fe0eb2f8c379eff297e24caba0c985a6c43","impliedFormat":1},{"version":"0f6e0b1a1deb1ab297103955c8cd3797d18f0f7f7d30048ae73ba7c9fb5a1d89","impliedFormat":1},{"version":"0a051f254f9a16cdde942571baab358018386830fed9bdfff42478e38ba641ce","impliedFormat":1},{"version":"17269f8dfc30c4846ab7d8b5d3c97ac76f50f33de96f996b9bf974d817ed025b","impliedFormat":1},{"version":"9e82194af3a7d314ccbc64bb94bfb62f4bfea047db3422a7f6c5caf2d06540a9","impliedFormat":1},{"version":"083d6f3547ccbf25dfa37b950c50bee6691ed5c42107f038cc324dbca1e173ae","impliedFormat":1},{"version":"952a9eab21103b79b7a6cca8ad970c3872883aa71273f540285cad360c35da40","impliedFormat":1},{"version":"8ba48776335db39e0329018c04486907069f3d7ee06ce8b1a6134b7d745271cc","impliedFormat":1},{"version":"e6d5809e52ed7ef1860d1c483e005d1f71bab36772ef0fd80d5df6db1da0e815","impliedFormat":1},{"version":"893e5cfbae9ed690b75b8b2118b140665e08d182ed8531e1363ec050905e6cb2","impliedFormat":1},{"version":"6ae7c7ada66314a0c3acfbf6f6edf379a12106d8d6a1a15bd35bd803908f2c31","impliedFormat":1},{"version":"e4b1e912737472765e6d2264b8721995f86a463a1225f5e2a27f783ecc013a7b","impliedFormat":1},{"version":"97146bbe9e6b1aab070510a45976faaf37724c747a42d08563aeae7ba0334b4f","impliedFormat":1},{"version":"c40d552bd2a4644b0617ec2f0f1c58618a25d098d2d4aa7c65fb446f3c305b54","impliedFormat":1},{"version":"09e64dea2925f3a0ef972d7c11e7fa75fec4c0824e9383db23eacf17b368532f","impliedFormat":1},{"version":"424ddba00938bb9ae68138f1d03c669f43556fc3e9448ed676866c864ca3f1d6","impliedFormat":1},{"version":"a0fe12181346c8404aab9d9a938360133b770a0c08b75a2fce967d77ca4b543f","impliedFormat":1},{"version":"3cc6eb7935ff45d7628b93bb6aaf1a32e8cb3b24287f9e75694b607484b377b3","impliedFormat":1},{"version":"ced02e78a2e10f89f4d70440d0a8de952a5946623519c54747bc84214d644bac","impliedFormat":1},{"version":"efd463021ccc91579ed8ae62584176baab2cd407c555c69214152480531a2072","impliedFormat":1},{"version":"29647c3b79320cfeecb5862e1f79220e059b26db2be52ea256df9cf9203fb401","impliedFormat":1},{"version":"e8cdefd2dc293cb4866ee8f04368e7001884650bb0f43357c4fe044cc2e1674f","impliedFormat":1},{"version":"582a3578ebba9238eb0c5d30b4d231356d3e8116fea497119920208fb48ccf85","impliedFormat":1},{"version":"185eae4a1e8a54e38f36cd6681cfa54c975a2fc3bc2ba6a39bf8163fac85188d","impliedFormat":1},{"version":"0c0a02625cf59a0c7be595ccc270904042bea523518299b754c705f76d2a6919","impliedFormat":1},{"version":"c44fc1bbdb5d1c8025073cb7c5eab553aa02c069235a1fc4613cd096d578ab80","impliedFormat":1},{"version":"cee72255e129896f0240ceb58c22e207b83d2cc81d8446190d1b4ef9b507ccd6","impliedFormat":1},{"version":"3b54670e11a8d3512f87e46645aa9c83ae93afead4a302299a192ac5458aa586","impliedFormat":1},{"version":"c2fc4d3a130e9dc0e40f7e7d192ef2494a39c37da88b5454c8adf143623e5979","impliedFormat":1},{"version":"2e693158fc1eedba3a5766e032d3620c0e9c8ad0418e4769be8a0f103fdb52cd","impliedFormat":1},{"version":"516275ccf3e66dc391533afd4d326c44dd750345b68bb573fc592e4e4b74545f","impliedFormat":1},{"version":"07c342622568693847f6cb898679402dd19740f815fd43bec996daf24a1e2b85","impliedFormat":1},{"version":"4d9bffaca7e0f0880868bab5fd351f9e4d57fcc6567654c4c330516fea7932aa","impliedFormat":1},{"version":"b42201db6adb94eeee965e8b8a5c24ce4a3fe78ebb89bbfd2d94bf2897af5134","impliedFormat":1},{"version":"89968316b7069339433bd42d53fe56df98b6990783dfe00c9513fb4bd01c2a1c","impliedFormat":1},{"version":"a4096686f982f6977433ee9759ecbef49da29d7e6a5d8278f0fbc7b9f70fce12","impliedFormat":1},{"version":"62e62a477c56cda719013606616dd856cfdc37c60448d0feb53654860d3113bb","impliedFormat":1},{"version":"207c107dd2bd23fa9febac2fe05c7c72cdac02c3f57003ab2e1c6794a6db0c05","impliedFormat":1},{"version":"55133e906c4ddabecdfcbc6a2efd4536a3ac47a8fa0a3fe6d0b918cac882e0d4","impliedFormat":1},{"version":"2147f8d114cf58c05106c3dccea9924d069c69508b5980ed4011d2b648af2ffe","impliedFormat":1},{"version":"2eb4012a758b9a7ba9121951d7c4b9f103fe2fc626f13bec3e29037bb9420dc6","impliedFormat":1},{"version":"fe61f001bd4bd0a374daa75a2ba6d1bb12c849060a607593a3d9a44e6b1df590","impliedFormat":1},{"version":"cfe8221c909ad721b3da6080570553dea2f0e729afbdbcf2c141252cf22f39b5","impliedFormat":1},{"version":"34e89249b6d840032b9acdec61d136877f84f2cd3e3980355b8a18f119809956","impliedFormat":1},{"version":"6f36ff8f8a898184277e7c6e3bf6126f91c7a8b6a841f5b5e6cb415cfc34820e","impliedFormat":1},{"version":"4b6378c9b1b3a2521316c96f5c777e32a1b14d05b034ccd223499e26de8a379c","impliedFormat":1},{"version":"07be5ae9bf5a51f3d98ffcfacf7de2fe4842a7e5016f741e9fad165bb929be93","impliedFormat":1},{"version":"cb1b37eda1afc730d2909a0f62cac4a256276d5e62fea36db1473981a5a65ab1","impliedFormat":1},{"version":"195f855b39c8a6e50eb1f37d8f794fbd98e41199dffbc98bf629506b6def73d7","impliedFormat":1},{"version":"471386a0a7e4eb88c260bdde4c627e634a772bf22f830c4ec1dad823154fd6f5","impliedFormat":1},{"version":"108314a60f3cb2454f2d889c1fb8b3826795399e5d92e87b2918f14d70c01e69","impliedFormat":1},{"version":"d75cc838286d6b1260f0968557cd5f28495d7341c02ac93989fb5096deddfb47","impliedFormat":1},{"version":"d531dc11bb3a8a577bd9ff83e12638098bfc9e0856b25852b91aac70b0887f2a","impliedFormat":1},{"version":"19968b998a2ab7dfd39de0c942fc738b2b610895843fec25477bc393687babd8","impliedFormat":1},{"version":"c0e6319f0839d76beed6e37b45ec4bb80b394d836db308ae9db4dea0fe8a9297","impliedFormat":1},{"version":"1a7b11be5c442dab3f4af9faf20402798fddf1d3c904f7b310f05d91423ba870","impliedFormat":1},{"version":"079d3f1ddcaf6c0ff28cfc7851b0ce79fcd694b3590afa6b8efa6d1656216924","impliedFormat":1},{"version":"2c817fa37b3d2aa72f01ce4d3f93413a7fbdecafe1b9fb7bd7baaa1bbd46eb08","impliedFormat":1},{"version":"682203aed293a0986cc2fccc6321d862742b48d7359118ac8f36b290d28920d2","impliedFormat":1},{"version":"7406d75a4761b34ce126f099eafe6643b929522e9696e5db5043f4e5c74a9e40","impliedFormat":1},{"version":"7e9c4e62351e3af1e5e49e88ebb1384467c9cd7a03c132a3b96842ccdc8045c4","impliedFormat":1},{"version":"ea1f9c60a912065c08e0876bd9500e8fa194738855effb4c7962f1bfb9b1da86","impliedFormat":1},{"version":"903f34c920e699dacbc483780b45d1f1edcb1ebf4b585a999ece78e403bb2db3","impliedFormat":1},{"version":"100ebfd0470433805c43be5ae377b7a15f56b5d7181c314c21789c4fe9789595","impliedFormat":1},{"version":"12533f60d36d03d3cf48d91dc0b1d585f530e4c9818a4d695f672f2901a74a86","impliedFormat":1},{"version":"21d9968dad7a7f021080167d874b718197a60535418e240389d0b651dd8110e7","impliedFormat":1},{"version":"2ef7349b243bce723d67901991d5ad0dfc534da994af61c7c172a99ff599e135","impliedFormat":1},{"version":"fa103f65225a4b42576ae02d17604b02330aea35b8aaf889a8423d38c18fa253","impliedFormat":1},{"version":"1b9173f64a1eaee88fa0c66ab4af8474e3c9741e0b0bd1d83bfca6f0574b6025","impliedFormat":1},{"version":"1b212f0159d984162b3e567678e377f522d7bee4d02ada1cc770549c51087170","impliedFormat":1},{"version":"46bd71615bdf9bfa8499b9cfce52da03507f7140c93866805d04155fa19caa1b","impliedFormat":1},{"version":"86cb49eb242fe19c5572f58624354ffb8743ff0f4522428ebcabc9d54a837c73","impliedFormat":1},{"version":"fc2fb9f11e930479d03430ee5b6588c3788695372b0ab42599f3ec7e78c0f6d5","impliedFormat":1},{"version":"bb1e5cf70d99c277c9f1fe7a216b527dd6bd2f26b307a8ab65d24248fb3319f5","impliedFormat":1},{"version":"817547eacf93922e22570ba411f23e9164544dead83e379c7ae9c1cfc700c2cf","impliedFormat":1},{"version":"a728478cb11ab09a46e664c0782610d7dd5c9db3f9a249f002c92918ca0308f7","impliedFormat":1},{"version":"9e91ef9c3e057d6d9df8bcbfbba0207e83ef9ab98aa302cf9223e81e32fdfe8d","impliedFormat":1},{"version":"66d30ef7f307f95b3f9c4f97e6c1a5e4c462703de03f2f81aca8a1a2f8739dbd","impliedFormat":1},{"version":"293ca178fd6c23ed33050052c6544c9d630f9d3b11d42c36aa86218472129243","impliedFormat":1},{"version":"90a4be0e17ba5824558c38c93894e7f480b3adf5edd1fe04877ab56c56111595","impliedFormat":1},{"version":"fadd55cddab059940934df39ce2689d37110cfe37cc6775f06b0e8decf3092d7","impliedFormat":1},{"version":"91324fe0902334523537221b6c0bef83901761cfd3bd1f140c9036fa6710fa2b","impliedFormat":1},{"version":"b4f3b4e20e2193179481ab325b8bd0871b986e1e8a8ed2961ce020c2dba7c02d","impliedFormat":1},{"version":"41744c67366a0482db029a21f0df4b52cd6f1c85cbc426b981b83b378ccb6e65","impliedFormat":1},{"version":"c3f3cf7561dd31867635c22f3c47c8491af4cfa3758c53e822a136828fc24e5d","impliedFormat":1},{"version":"a88ddea30fae38aa071a43b43205312dc5ff86f9e21d85ba26b14690dc19d95e","impliedFormat":1},{"version":"b5b2d0510e5455234016bbbaba3839ca21adbc715d1b9c3d6dede7d411a28545","impliedFormat":1},{"version":"5515f17f45c6aafe6459afa3318bba040cb466a8d91617041566808a5fd77a44","impliedFormat":1},{"version":"4df1f0c17953b0450aa988c9930061f8861b114e1649e1a16cfd70c5cbdf8d83","impliedFormat":1},{"version":"441104b363d80fe57eb79a50d495e0b7e3ebeb45a5f0d1a4067d71ef75e8fbfa","impliedFormat":1},{"version":"d270c4e567f5339afb4deea840667532b6889ff7bb24102242bc2493c28ab2f5","signature":"5db43c2d16ea16b3baa672914989062188dbf347bb0fa44820f670f5ebc82f48"},{"version":"78e336dd87ab5cfef538fafd85de5659ac4a5e160070e785920c1588724fdff4","signature":"0ef10ebca49e14367c508a2da2ef9131427a9cf96b7e97f9bf9f15812fc169da"},{"version":"3dba9a471814fe69e5c7523298f79597099ac240bc74c6d7a967258790550937","signature":"30763b33fbead766c96854ca9686e9b61efbf2f3a5c1c9c0f00f99ec93aa1186"},{"version":"3b2b2cc4b3324ed0528e8fe4b7b03614a76929f996a0614d17db13adadc68907","signature":"82df095938afa1c63d910d0432ce2479c6cb95a49c15edf3d5e6aa6c5f28c85e"},{"version":"be81d1128123c38859b147918c0ee20fd74aac665cb8b4b52a72529cf103674f","signature":"a5d10d1d92ede95e4e67cd48389beb9875ab11e0ab7c9afb7dbef248dada86b7"},{"version":"a3d3f704c5339a36da3ca8c62b29072f87e86c783b8452d235992142ec71aa2d","impliedFormat":1},{"version":"d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","impliedFormat":1},{"version":"293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","impliedFormat":1},{"version":"54f6ec6ea75acea6eb23635617252d249145edbc7bcd9d53f2d70280d2aef953","impliedFormat":1},{"version":"c25ce98cca43a3bfa885862044be0d59557be4ecd06989b2001a83dcf69620fd","impliedFormat":1},{"version":"8e71e53b02c152a38af6aec45e288cc65bede077b92b9b43b3cb54a37978bb33","impliedFormat":1},{"version":"754a9396b14ca3a4241591afb4edc644b293ccc8a3397f49be4dfd520c08acb3","impliedFormat":1},{"version":"f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","impliedFormat":1},{"version":"e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","impliedFormat":1},{"version":"de2316e90fc6d379d83002f04ad9698bc1e5285b4d52779778f454dd12ce9f44","impliedFormat":1},{"version":"25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","impliedFormat":1},{"version":"b004b3c5e264455f82c17e41eae9aa677b669171ff199148c202042bd6a3bdd2","impliedFormat":1},{"version":"5d26d2e47e2352def36f89a3e8bf8581da22b7f857e07ef3114cd52cf4813445","impliedFormat":1},{"version":"3db2efd285e7328d8014b54a7fce3f4861ebcdc655df40517092ed0050983617","impliedFormat":1},{"version":"d5d39a24c759df40480a4bfc0daffd364489702fdbcbdfc1711cde34f8739995","impliedFormat":1},{"version":"5440cce152c43adf91f7b1b7c637fe006e4fe3cb5f5156b4c5b6a7db45369b45","signature":"bb3fe1065b51280aa99a9689e2abd1a1c46bee68314ccf1b54db85161929d52f"},{"version":"419f2e846ff214a315952fcc0bdd46fe533041ebf53604a69dd96308fa6dec9a","signature":"41e80b96ae97c7b828db293bd6366a90db948793fff1d7d73410a602bc432877"},{"version":"3498737e2a8835761e106afbaf1e8ef1a0666a136a8bc82d26e821994d74240c","signature":"57b7e6245777fded4df6e20a099bc8e4016e2b0c760bb3d0925fcddedbf164e8"},{"version":"625b72575a76f990970738e268f2c956d2b3d509acb15d80331589eff5f32aae","signature":"9e5e7b48e41b25b0026a527bb59588a0a521ec360ee42416ffe032124ebab451"},{"version":"077945979c46b2a39afffb3a07b70188f79a4b4b5100a7d9de09bfe919caefed","signature":"aa1725e38b5a0b4009f6a74f296f173e7926c119a60454dbd2e523861735df69"},{"version":"abd6ccdaae9905ea2ec85488fdce744930862327633eebd40d429511f6a1d5da","impliedFormat":1},{"version":"4669b2a774cd3e5fbe0760dfe8b02b31f9301b5a3fefba896bca3cd4de334708","impliedFormat":1},{"version":"7c14e702387296711c1a829bc95052ff02f533d4aa27d53cc0186c795094a3a9","impliedFormat":1},{"version":"4c72d080623b3dcd8ebd41f38f7ac7804475510449d074ca9044a1cbe95517ae","impliedFormat":1},{"version":"579f8828da42ae02db6915a0223d23b0da07157ff484fecdbf8a96fffa0fa4df","impliedFormat":1},{"version":"279f097303c870a7ce213952224f7a66ae511741299e683e500f63646f6ebf08","impliedFormat":1},{"version":"3ae3b86c48ae3b092e5d5548acbf4416b427fed498730c227180b5b1a8aa86e3","impliedFormat":1},{"version":"8f1241f5d9f0d3d72117768b3c974e462840fbd85026fb66685078945404cf2f","impliedFormat":1},{"version":"fb893a0dfc3c9fb0f9ca93d0648694dd95f33cbad2c0f2c629f842981dfd4e2e","impliedFormat":1},{"version":"818e7c86776c67f49dbd781d445e13297b59aa7262e54b065b1332d7dcc6f59a","impliedFormat":1},{"version":"d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","impliedFormat":1},{"version":"b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","impliedFormat":1},{"version":"baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","impliedFormat":1},{"version":"2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed","impliedFormat":1},{"version":"86ea91bfa7fef1eeb958056f30f1db4e0680bc9b5132e5e9d6e9cfd773c0c4fd","affectsGlobalScope":true,"impliedFormat":1},{"version":"b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","impliedFormat":1},{"version":"0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a","impliedFormat":1},{"version":"104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","impliedFormat":1},{"version":"cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","impliedFormat":1},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"ff155930718467b27e379e4a195e4607ce277f805cad9d2fa5f4fd5dec224df6","affectsGlobalScope":true,"impliedFormat":1},{"version":"8cd7b04c479f92df50d4239bac36a67bc52d3917a988d85af0a71e9ed2af2fdf","affectsGlobalScope":true},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"03c92769f389dbd9e45232f7eb01c3e0f482b62555aaf2029dcbf380d5cee9e4","impliedFormat":1},{"version":"32d7f70fd3498bc76a46dab8b03af4215f445f490f8e213c80cf06b636a4e413","impliedFormat":1},{"version":"ba63131c5e91f797736444933af16ffa42f9f8c150d859ec65f568f037a416ea","impliedFormat":1},{"version":"44372b8b42e8916b0ab379da38dcf4de11227bad4221aba3e2dbe718999bdfab","impliedFormat":1},{"version":"43ebfcc5a9e9a9306ea4de9fda3abdd9e018040e246434b48ad56d93b14d4a3d","impliedFormat":1},{"version":"0e9aa853b5eb2ca09e0e3e3eb94cbd1d5fb3d682ab69817d4d11fe225953fc57","impliedFormat":1},{"version":"179683df1e78572988152d598f44297da79ac302545770710bba87563ce53e06","impliedFormat":1},{"version":"793c353144f16601da994fa4e62c09b7525836ce999c44f69c28929072ca206a","impliedFormat":1},{"version":"599ac4a84b7aa6a298731179ec1663a623ff8ac324cdc1dabb9c73c1259dc854","impliedFormat":1},{"version":"95c2ab3597d7d38e990bf212231a6def6f6af7e3d12b3bb1b67c15fc8bfd4f4a","impliedFormat":1},{"version":"585bc61f439c027640754dd26e480afa202f33e51db41ee283311a59c12c62e7","impliedFormat":1},{"version":"8f1241f5d9f0d3d72117768b3c974e462840fbd85026fb66685078945404cf2f","impliedFormat":1},{"version":"cc8701b189e4af93ee1a54a1f6e72eb02b1a8ddfa24ee73c912221a5dc982c5f","signature":"0de84aa08adedf293dad839a637792daa5e312e62ad1ff0b5486c91b21103ad1"},{"version":"59903cfdad93d1367615bb34684cb3b5fed23688ba1775b0ba10bedf9237cbc2","signature":"1a506582cb9122197c7e81839f86752c525f759c4aa97112f16884ad2686f0c4"},{"version":"7d2b7fe4adb76d8253f20e4dbdce044f1cdfab4902ec33c3604585f553883f7d","impliedFormat":1},{"version":"e3880367d195aef46c31107ea766ac86fb9e5fc11e855cc4d25cc4114e5c59c7","signature":"73fb329e01ac36992a640dbdeb5a43b1fab076175985a679a8d934f8b1b8c3f5"},{"version":"ef8401ab8e2bc5e6be85663a1465c5d60754dfee6018676f165238914d10b5ab","signature":"9116cbf32650ce234338c6f8395ecb044d06f6d939f2f6ca6d21335f4e663b71"},{"version":"fe4d42ceae379d15af604049b980a287574a771a5db2b01376f18105f6d177d4","signature":"aa1c955db73a9aad9dabfd13af51b83c40bad13b70261075c5cfbcf7d054ae30"},{"version":"4f0424b7c6857793498a6e60041af2a38658e8193a403a701574e80df50a360a","impliedFormat":1},{"version":"034856eb35ba68a5b7190db2d8e743cc640996545b7200e6766e86b27a2fd527","impliedFormat":1},{"version":"adb4283721e37317d30627d9c31404e46a6bb0174e5806c43c59d08d8d91ea67","impliedFormat":1},{"version":"ec379d84f25c38ceaaa81715fd1b6a0b3a000386ea41155969dc49f88eab33ef","impliedFormat":1},{"version":"d02329b04183e4f319fd78e5726375b2154d4eab6ec90ee3706b4090f94d3d99","impliedFormat":1},{"version":"81477bb2c9b97a9dd5ce7750ab4ae655e74172f0d536d637be345ba76b41cd92","impliedFormat":1},{"version":"b8ad793dc17938bc462812e3522bbd3d62519d91d9b4a6422bed1383c2d3eb42","impliedFormat":1},{"version":"8b0b6a4c032a56d5651f7dd02ba3f05fbfe4131c4095093633cda3cae0991972","impliedFormat":1},{"version":"ff3c48a17bf10dfbb62448152042e4a48a56c9972059997ab9e7ed03b191809b","impliedFormat":1},{"version":"192a0c215bffe5e4ac7b9ff1e90e94bf4dfdad4f0f69a5ae07fccc36435ebb87","impliedFormat":1},{"version":"3ef8565e3d254583cced37534f161c31e3a8f341ff005c98b582c6d8c9274538","impliedFormat":1},{"version":"d7e42a3800e287d2a1af8479c7dd58c8663e80a01686cb89e0068be6c777d687","impliedFormat":1},{"version":"1098034333d3eb3c1d974435cacba9bd5a625711453412b3a514774fec7ca748","impliedFormat":1},{"version":"f2388b97b898a93d5a864e85627e3af8638695ebfa6d732ecd39d382824f0e63","impliedFormat":1},{"version":"6c6bd91368169cfa94b4f8cc64ebca2b050685ec76bc4082c44ce125b5530cca","impliedFormat":1},{"version":"f477375e6f0bf2a638a71d4e7a3da8885e3a03f3e5350688541d136b10b762a6","impliedFormat":1},{"version":"a44d6ea4dc70c3d789e9cef3cc42b79c78d17d3ce07f5fd278a7e1cbe824da56","impliedFormat":1},{"version":"272af80940fcc0c8325e4a04322c50d11f8b8842f96ac66cbd440835e958dd14","impliedFormat":1},{"version":"1803e48a3ec919ccafbcafeef5e410776ca0644ae8c6c87beca4c92d8a964434","impliedFormat":1},{"version":"875c43c5409e197e72ee517cb1f8fd358406b4adf058dbdc1e50c8db93d68f26","impliedFormat":1},{"version":"8854713984b9588eac1cab69c9e2a6e1a33760d9a2d182169059991914dd8577","impliedFormat":1},{"version":"e333d487ca89f26eafb95ea4b59bea8ba26b357e9f2fd3728be81d999f9e8cf6","impliedFormat":1},{"version":"2f554c6798b731fc39ff4e3d86aadc932fdeaa063e3cbab025623ff5653c0031","impliedFormat":1},{"version":"fe4613c6c0d23edc04cd8585bdd86bc7337dc6265fb52037d11ca19eeb5e5aaf","impliedFormat":1},{"version":"53b26fbee1a21a6403cf4625d0e501a966b9ccf735754b854366cee8984b711c","impliedFormat":1},{"version":"c503be3ddb3990ab27ca20c6559d29b547d9f9413e05d2987dd7c4bcf52f3736","impliedFormat":1},{"version":"598b15f0ae9a73082631d14cb8297a1285150ca325dbce98fc29c4f0b7079443","impliedFormat":1},{"version":"8c59d8256086ed17676139ee43c1155673e357ab956fb9d00711a7cac73e059d","impliedFormat":1},{"version":"cfe88132f67aa055a3f49d59b01585fa8d890f5a66a0a13bb71973d57573eee7","impliedFormat":1},{"version":"53ce488a97f0b50686ade64252f60a1e491591dd7324f017b86d78239bd232ca","impliedFormat":1},{"version":"50fd11b764194f06977c162c37e5a70bcf0d3579bf82dd4de4eee3ac68d0f82f","impliedFormat":1},{"version":"e0ceb647dcdf6b27fd37e8b0406c7eafb8adfc99414837f3c9bfd28ffed6150a","impliedFormat":1},{"version":"99579aa074ed298e7a3d6a47e68f0cd099e92411212d5081ce88344a5b1b528d","impliedFormat":1},{"version":"c94c1aa80687a277396307b80774ca540d0559c2f7ba340168c2637c82b1f766","impliedFormat":1},{"version":"ce7dbf31739cc7bca35ca50e4f0cbd75cd31fd6c05c66841f8748e225dc73aaf","impliedFormat":1},{"version":"942ab34f62ac3f3d20014615b6442b6dc51815e30a878ebc390dd70e0dec63bf","impliedFormat":1},{"version":"7a671bf8b4ad81b8b8aea76213ca31b8a5de4ba39490fbdee249fc5ba974a622","impliedFormat":1},{"version":"8e07f13fb0f67e12863b096734f004e14c5ebfd34a524ed4c863c80354c25a44","impliedFormat":1},{"version":"6f6bdb523e5162216efc36ebba4f1ef8e845f1a9e55f15387df8e85206448aee","impliedFormat":1},{"version":"aa2d6531a04d6379318d29891de396f61ccc171bfd2f8448cc1649c184becdf2","impliedFormat":1},{"version":"d422f0c340060a53cb56d0db24dd170e31e236a808130ab106f7ab2c846f1cdb","impliedFormat":1},{"version":"424403ef35c4c97a7f00ea85f4a5e2f088659c731e75dbe0c546137cb64ef8d8","impliedFormat":1},{"version":"16900e9a60518461d7889be8efeca3fe2cbcd3f6ce6dee70fea81dfbf8990a76","impliedFormat":1},{"version":"6daf17b3bd9499bd0cc1733ab227267d48cd0145ed9967c983ccb8f52eb72d6e","impliedFormat":1},{"version":"e4177e6220d0fef2500432c723dbd2eb9a27dcb491344e6b342be58cc1379ec0","impliedFormat":1},{"version":"ab710f1ee2866e473454a348cffd8d5486e3c07c255f214e19e59a4f17eece4d","impliedFormat":1},{"version":"db7ff3459e80382c61441ea9171f183252b6acc82957ecb6285fff4dca55c585","impliedFormat":1},{"version":"4a168e11fe0f46918721d2f6fcdb676333395736371db1c113ae30b6fde9ccd2","impliedFormat":1},{"version":"2a899aef0c6c94cc3537fe93ec8047647e77a3f52ee7cacda95a8c956d3623fb","impliedFormat":1},{"version":"ef2c1585cad462bdf65f2640e7bcd75cd0dbc45bae297e75072e11fe3db017fa","impliedFormat":1},{"version":"6a52170a5e4600bbb47a94a1dd9522dca7348ce591d8cdbb7d4fe3e23bbea461","impliedFormat":1},{"version":"6f6eadb32844b0ec7b322293b011316486894f110443197c4c9fbcba01b3b2fa","impliedFormat":1},{"version":"a51e08f41e3e948c287268a275bfe652856a10f68ddd2bf3e3aaf5b8cdb9ef85","impliedFormat":1},{"version":"16c144a21cd99926eeba1605aec9984439e91aa864d1c210e176ca668f5f586a","impliedFormat":1},{"version":"af48a76b75041e2b3e7bd8eed786c07f39ea896bb2ff165e27e18208d09b8bee","impliedFormat":1},{"version":"fd4107bd5c899165a21ab93768904d5cfb3e98b952f91fbf5a12789a4c0744e6","impliedFormat":1},{"version":"deb092bc337b2cb0a1b14f3d43f56bc663e1447694e6d479d6df8296bdd452d6","impliedFormat":1},{"version":"041bc1c3620322cb6152183857601707ef6626e9d99f736e8780533689fb1bf9","impliedFormat":1},{"version":"77165b117f552be305d3bc2ef83424ff1e67afb22bfabd14ebebb3468c21fcaa","impliedFormat":1},{"version":"128e7c2ffd37aa29e05367400d718b0e4770cefb1e658d8783ec80a16bc0643a","impliedFormat":1},{"version":"076ac4f2d642c473fa7f01c8c1b7b4ef58f921130174d9cf78430651f44c43ec","impliedFormat":1},{"version":"396c1e5a39706999ec8cc582916e05fcb4f901631d2c192c1292e95089a494d9","impliedFormat":1},{"version":"89df75d28f34fc698fe261f9489125b4e5828fbd62d863bbe93373d3ed995056","impliedFormat":1},{"version":"8ccf5843249a042f4553a308816fe8a03aa423e55544637757d0cfa338bb5186","impliedFormat":1},{"version":"93b44aa4a7b27ba57d9e2bad6fb7943956de85c5cc330d2c3e30cd25b4583d44","impliedFormat":1},{"version":"a0c6216075f54cafdfa90412596b165ff85e2cadd319c49557cc8410f487b77c","impliedFormat":1},{"version":"3c359d811ec0097cba00fb2afd844b125a2ddf4cad88afaf864e88c8d3d358bd","impliedFormat":1},{"version":"d8ec19be7d6d3950992c3418f3a4aa2bcad144252bd7c0891462b5879f436e4e","impliedFormat":1},{"version":"db37aa3208b48bdcbc27c0c1ae3d1b86c0d5159e65543e8ab79cbfb37b1f2f34","impliedFormat":1},{"version":"d62f09256941e92a95b78ae2267e4cf5ff2ca8915d62b9561b1bc85af1baf428","impliedFormat":1},{"version":"e6223b7263dd7a49f4691bf8df2b1e69f764fb46972937e6f9b28538d050b1ba","impliedFormat":1},{"version":"2daf06d8e15cbca27baa6c106253b92dad96afd87af9996cf49a47103b97dc95","impliedFormat":1},{"version":"1db014db736a09668e0c0576585174dbcfd6471bb5e2d79f151a241e0d18d66b","impliedFormat":1},{"version":"8a153d30edde9cefd102e5523b5a9673c298fc7cf7af5173ae946cbb8dd48f11","impliedFormat":1},{"version":"abaaf8d606990f505ee5f76d0b45a44df60886a7d470820fcfb2c06eafa99659","impliedFormat":1},{"version":"8109e0580fc71dbefd6091b8825acf83209b6c07d3f54c33afeafab5e1f88844","impliedFormat":1},{"version":"d92a80c2c05cf974704088f9da904fe5eadc0b3ad49ddd1ef70ca8028b5adda1","impliedFormat":1},{"version":"fbd7450f20b4486c54f8a90486c395b14f76da66ba30a7d83590e199848f0660","impliedFormat":1},{"version":"ece5b0e45c865645ab65880854899a5422a0b76ada7baa49300c76d38a530ee1","impliedFormat":1},{"version":"62d89ac385aeab821e2d55b4f9a23a277d44f33c67fefe4859c17b80fdb397ea","impliedFormat":1},{"version":"f4dee11887c5564886026263c6ee65c0babc971b2b8848d85c35927af25da827","impliedFormat":1},{"version":"fb8dd49a4cd6d802be4554fbab193bb06e2035905779777f32326cb57cf6a2c2","impliedFormat":1},{"version":"df29ade4994de2d9327a5f44a706bbe6103022a8f40316839afa38d3e078ee06","impliedFormat":1},{"version":"82d3e00d56a71fc169f3cf9ec5f5ffcc92f6c0e67d4dfc130dafe9f1886d5515","impliedFormat":1},{"version":"d38f45cb868a830d130ac8b87d3f7e8caff4961a3a1feae055de5e538e20879a","impliedFormat":1},{"version":"4c30a5cb3097befb9704d16aa4670e64e39ea69c5964a1433b9ffd32e1a5a3a1","impliedFormat":1},{"version":"1b33478647aa1b771314745807397002a410c746480e9447db959110999873ce","impliedFormat":1},{"version":"7b3a5e25bf3c51af55cb2986b89949317aa0f6cbfb5317edd7d4037fa52219a9","impliedFormat":1},{"version":"3cd50f6a83629c0ec330fc482e587bfa96532d4c9ce85e6c3ddf9f52f63eee11","impliedFormat":1},{"version":"9fac6ebf3c60ced53dd21def30a679ec225fc3ff4b8d66b86326c285a4eebb5a","impliedFormat":1},{"version":"8cb83cb98c460cd716d2a98b64eb1a07a3a65c7362436550e02f5c2d212871d1","impliedFormat":1},{"version":"07bc8a3551e39e70c38e7293b1a09916867d728043e352b119f951742cb91624","impliedFormat":1},{"version":"e47adc2176f43c617c0ab47f2d9b2bb1706d9e0669bf349a30c3fe09ddd63261","impliedFormat":1},{"version":"7fec79dfd7319fec7456b1b53134edb54c411ba493a0aef350eee75a4f223eeb","impliedFormat":1},{"version":"189c489705bb96a308dcde9b3336011d08bfbca568bcaf5d5d55c05468e9de7a","impliedFormat":1},{"version":"98f4b1074567341764b580bf14c5aabe82a4390d11553780814f7e932970a6f7","impliedFormat":1},{"version":"dadfa5fd3d5c511ca6bfe240243b5cf2e0f87e44ea63e23c4b2fce253c0d4601","impliedFormat":1},{"version":"2e252235037a2cd8feebfbf74aa460f783e5d423895d13f29a934d7655a1f8be","impliedFormat":1},{"version":"763f4ac187891a6d71ae8821f45eef7ff915b5d687233349e2c8a76c22b3bf2a","impliedFormat":1},{"version":"cb5b0d51a7c42a3916d839e1ee149bcc18ffb9037f29636510fa433ff65684ca","impliedFormat":1},{"version":"b7d85dc2de8db4ca983d848c8cfad6cf4d743f8cb35afe1957bedf997c858052","impliedFormat":1},{"version":"83daad5d7ae60a0aede88ea6b9e40853abcbe279c10187342b25e96e35bc9f78","impliedFormat":1},{"version":"c39ddfb764058d817d0e8c4044363950edb075fa52ab0054d09dec01c5ec7267","impliedFormat":1},{"version":"3dffa83b578e67fcbfd7965c5ecb72476a293f9224608e17e0bca0eef53eb6b4","impliedFormat":1},{"version":"f7a5ab7b54bdc6a13cf1015e1b5d6eeb31d765d54045281bfeefcdfcc982a37c","impliedFormat":1},{"version":"39eaec2510829bd8503fd25defd6477575b08abd1e73bd12a73a4b1fa2ceb213","impliedFormat":1},{"version":"c9170aaac9149ca2a733230b20790dd02212b3a2ed880a696bca69a5f21f6fd2","signature":"234be12937bccf13b8f194674711d454b69ba856e3cc71969a406ed820db84ea"},{"version":"ffa125aebea0616fe68aa1e6fc684b859baa37bb166457b520eb73bed66213e2","signature":"6c7c3ad0d8503662be36fcb84f9283282ba9b4d18d038963d29594b723cd9059"},{"version":"95d9f96ed1dbd0b3c1fd43b13780b3338a8ece26fc3327f35e3a343c57b5a84d","signature":"24a24c0324e53e350a7c0f293ecb8c5d30beffde131e5f8e8de3ce12bb04c194"},{"version":"ed89444d9d6df29a3afce4854ec3bb225943a5e73ab3d42a0a816ae56edf6f94","signature":"8d1260ac0ee4dc2a2b885c71f225b0c967cb47b54fd41e4a38f6439dcba7810b"},{"version":"c75fa8fadd0404a4b5dfa3456fe0419cb02bb9e41db2eeb1aaff4abfe397fc14","signature":"a73a033a2f783f1d11a4b26cbd2f9131cd99513d44ed3c9afaec81fe5463845c"},{"version":"d26a79f97f25eb1c5fc36a8552e4decc7ad11104a016d31b1307c3afaf48feb1","impliedFormat":1},{"version":"17668c1aab598920796050ee5a00d961ede5e92595f6ac8908a975ed75a537e5","impliedFormat":1},{"version":"2422ee2f778bb5a0e99c32054fbfdaabf8a530cd8532a32e1d15208b2d44d3c6","signature":"8946bded236cfb3164cd38c49d38b720272465393200182ba310e43363d5636f"},{"version":"c34133574c99cd8678cd8502d27eb3a80cd205d83a07eb8560138056022e3b20","signature":"a28b5c0c372fb375910b3fe3c3ce4331509bc18ccef7cc39c9ee9d8daf8225d1"},{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true,"impliedFormat":1},{"version":"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","impliedFormat":1},{"version":"d95f6226b441e71b392905cf6a64af25c3ee77e77339467264c510b5995658c3","signature":"c25dc6cf0da95a43596b2bde16723bc488cb99d3bfde7f945a07442c43d730a6"},{"version":"06eacd96f42443422fb3f53911f276c59985a0ab5727983e5baee3dce3bca486","signature":"9e55d69c2879e4c1f6039d177c0daf79a72435ac51ec7d4f46fc72e8b0c503d6"},{"version":"6ecc423e71318bafbd230e6059e082c377170dfc7e02fccfa600586f8604d452","impliedFormat":1},{"version":"772f9bdd2bf50c9c01b0506001545e9b878faa7394ad6e7d90b49b179a024584","impliedFormat":1},{"version":"f204b03cb07517d71715ac8bc7552542bfab395adb53e31c07fbc67de6856de1","impliedFormat":1},{"version":"7467736a77548887faa90a7d0e074459810a5db4bbc6de302a2be6c05287ccae","impliedFormat":1},{"version":"39504a2c1278ee4d0dc1a34e27c80e58b4c53c08c87e3a7fc924f18c936bebb5","impliedFormat":1},{"version":"cd1ccdd9fd7980d43dfede5d42ee3d18064baed98b136089cf7c8221d562f058","impliedFormat":1},{"version":"d60f9a4fd1e734e7b79517f02622426ea1000deb7d6549dfdece043353691a4e","impliedFormat":1},{"version":"403d28b5e5f8fcff795ac038902033ec5890143e950af45bd91a3ed231e8b59c","impliedFormat":1},{"version":"c73b59f91088c00886d44ca296d53a75c263c3bda31e3b2f37ceb137382282be","impliedFormat":1},{"version":"e7aa2c584edb0970cb4bb01eb10344200286055f9a22bc3dadcc5a1f9199af3e","impliedFormat":1},{"version":"bfeb476eb0049185cb94c2bfcadb3ce1190554bbcf170d2bf7c68ed9bb00458e","impliedFormat":1},{"version":"ae23a65a2b664ffe979b0a2a98842e10bdf3af67a356f14bbc9d77eb3ab13585","impliedFormat":1},{"version":"eccf6ad2a8624329653896e8dbd03f30756cbd902a81b5d3942d6cf0e1a21575","impliedFormat":1},{"version":"1930c964051c04b4b5475702613cd5a27fcc2d33057aa946ff52bfca990dbc84","impliedFormat":1},{"version":"2793d525d79404df346e4ef58a82f9b6d28a7650beeb17378cd121c45ba03f02","impliedFormat":1},{"version":"62463aa3d299ae0cdc5473d2ac32213a05753c3adce87a8801c6d2b114a64116","impliedFormat":1},{"version":"c9c2eabaad71c534d7de16385977f95184fdf3ddd0339dadbd5d599488d94f90","impliedFormat":1},{"version":"d0642c453e6af4c0700182bec4afc5b2cc9498fe27c9b1bcf2e6f75dd1892699","impliedFormat":1},{"version":"8f4469dd750d15f72ba66876c8bc429d3c9ce49599a13f868a427d6681d45351","impliedFormat":1},{"version":"d1e888a33faeb1f0e3c558bbe0ea4a55056318e0b2f8eba72ffd6729c3bbff4e","impliedFormat":1},{"version":"f689c0633e8c95f550d36af943d775f3fae3dac81a28714b45c7af0bbb76a980","impliedFormat":1},{"version":"fef736cfb404b4db9aa942f377dbbac6edb76d18aabd3b647713fa75da8939e9","impliedFormat":1},{"version":"45659c92e49dfca4601acc7e57fbb03a71513c69768984baf86ead8d20387a01","impliedFormat":1},{"version":"0239d8f6a3f51b26cbdbb9362f4fde35651c6bd0ff3d9fc09ee4a2da6065cb4e","impliedFormat":1},{"version":"6e5ab399ec7bd61d4f86421cc6074fd904379c3923706c899d15146e4f9a08c8","impliedFormat":1},{"version":"c9ffec02582eed74f518ae3e32a5dcf4ac835532e548300c5c5f950cdfeead5f","impliedFormat":1},{"version":"df343f5de08f5b607a3c7954ff1b512b7fa983d561e136cce0b6dc6849602a15","impliedFormat":1},{"version":"8fc97ef271771dc6f81a9c846d007ac4f0cb5779e3f441c1de54dfda5046fe7b","impliedFormat":1},{"version":"b5a060e2a4c54695076f871ddc0c91a0ff8eea1262177c4ede5593acbf1ca3bb","impliedFormat":1},{"version":"08ee70765d3fa7c5bad4afbbe1c542771e17f84bfd5e3e872ae1fdc5160836c8","impliedFormat":1},{"version":"1c225a18846203fafc4334658715b0d3fd3ee842c4cfd42e628a535eda17730d","impliedFormat":1},{"version":"7ce93da38595d1caf57452d57e0733474564c2b290459d34f6e9dcf66e2d8beb","impliedFormat":1},{"version":"d7b672c1c583e9e34ff6df2549d6a55d7ca3adaf72e6a05081ea9ee625dac59f","impliedFormat":1},{"version":"f3a2902e84ebdef6525ed6bf116387a1256ea9ae8eeb36c22f070b7c9ea4cf09","impliedFormat":1},{"version":"33bb0d96cea9782d701332e6b7390f8efae3af92fd3e2aa2ac45e4a610e705d6","impliedFormat":1},{"version":"ae3e98448468e46474d817b5ebe74db11ab22c2feb60e292d96ce1a4ee963623","impliedFormat":1},{"version":"f0a2fdee9e801ac9320a8660dd6b8a930bf8c5b658d390ae0feafdba8b633688","impliedFormat":1},{"version":"7beb7f04f6186bdac5e622d44e4cac38d9f2b9fcad984b10d3762e369524dd77","impliedFormat":1},{"version":"8f1241f5d9f0d3d72117768b3c974e462840fbd85026fb66685078945404cf2f","impliedFormat":1},{"version":"d1d6e09a51e1c000ef3ca76ef096cb8ae901690fd0ee19679e9d9280ecd0f304","signature":"7ff7d0f06650eedf7c8b7bc5c0aee785f400940ec9e48026a3f7ee19ca962f62"},{"version":"037259f205cada692a39c224a8a3b90f96849afeb3032b92b001212cd4be3b98","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"d023752daf2a5c2e27a2a850aedc10a48a42fb507dceae37db91dc8294aafdec","impliedFormat":1},{"version":"bd61a00b150635b14813cceba3fa797df93cdbd5bd0d445fc419580b990042bf","signature":"294aa89857186184b594efaed091cf1b1ba0d7fb623c64e3218eaf96676b7f1d"},{"version":"28629c3abd038b6eabc6113f21aecabdc054ce49d39f11e358ae6565d319f9ab","signature":"788b2651281fb34c84c26cd65ef742d8baa9e2efe9d6838297831f5a81dfbe8b"},{"version":"421e56e634135d75f4e010a4618a834306cddf85d4b046d4c19e47bc0364b996","signature":"f6472235e47d129744f98eb7990ba6beec5d1ae1a6daa8882318d3dfbfd8de34"},{"version":"6e781aead05bc52c878a9f760055a0a8df31646dde27a8f1e054f2301d62d452","signature":"39bc55f98ce0af880ae6ab8db5efdfd93e873217f5d67edef91881984bcec22e"},{"version":"d9a958126cc325419b277a469268581d5b8aca1aff7197971e7abab8deef092e","signature":"6525ba306b1880cc8580165724286abd7a677cc4cf36f8e699092e575beb938d"},"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",{"version":"e43b68770b6035ccd38fa9f3706ddbe8dd4188ae8e2afd082148142b030d38a6","signature":"1d5f824cdef96a60fd70ea62d6b3a7d92768e3108a6ea07179a077668fe3b15c"},{"version":"65743188c07fff4c2c8e0d31166e3586f22170d168b1a279bff87e21b210eee5","signature":"09cfc3465531969ed8ffa4855bdf215ddb4d0e8ec4698c5921f8d43452b7add0"},{"version":"1eb30c93dc0d8dd1284cb2cefa921b651297964b64c6b0d799345e5632e23bda","signature":"81571607487247b30f16fb26a6696e1ab49f901932d6dcd78345cbdc8b2a8ee6"},{"version":"d273dc64da3e3b117c4bace1fe38c01237f61cc4f559db9f258e5dcff7fd447e","signature":"d19e5f630a620d46fc0260c16277ad5ede4105bb2f7530a71bac1f5f45d778ce"},{"version":"a2812ef97b0db67449e4946bc9bdbb07f99b4d6ea9527dc705a04fb90f94ce20","signature":"8542e9c9c5fbfc2765235aeab17fa278a714ed194bb1349774294118b6131cd1"},"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",{"version":"6605a1a69d76f11731b8400cf746f224f6e3655cbadafb0d43197b8733f00603","signature":"c106970ee4b686b5ebf0964ea4e0d1b2af02bdecd2d5cfeecedeb7bb5b2f404b"},{"version":"be719d34d3cc6d4f38953221444acb3fe9c499cbfde67373e24768b5901688c9","signature":"c106970ee4b686b5ebf0964ea4e0d1b2af02bdecd2d5cfeecedeb7bb5b2f404b"},"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855","e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"],"root":[398,399,520,521,665,[683,685],707,721,722,[724,726],[833,837],840,841,844,845,885,886,[888,906]],"options":{"allowSyntheticDefaultImports":true,"composite":false,"declaration":true,"declarationMap":true,"emitDecoratorMetadata":true,"esModuleInterop":true,"experimentalDecorators":true,"inlineSources":false,"module":1,"noFallthroughCasesInSwitch":false,"noImplicitAny":false,"noUnusedLocals":false,"noUnusedParameters":false,"outDir":"./dist","removeComments":true,"rootDir":"./src","skipLibCheck":true,"sourceMap":true,"strict":true,"strictBindCallApply":false,"strictNullChecks":false,"target":4},"referencedMap":[[735,1],[314,1],[52,1],[303,2],[304,2],[305,1],[306,3],[316,4],[307,1],[308,5],[309,1],[310,1],[311,2],[312,2],[313,2],[315,6],[323,7],[325,1],[322,1],[328,8],[326,1],[324,1],[320,9],[321,10],[327,1],[329,11],[317,1],[319,12],[318,13],[258,1],[261,14],[257,1],[782,1],[259,1],[260,1],[346,15],[331,15],[338,15],[335,15],[348,15],[339,15],[345,15],[330,16],[349,15],[352,17],[343,15],[333,15],[351,15],[336,15],[334,15],[344,15],[340,15],[350,15],[337,15],[347,15],[332,15],[342,15],[341,15],[359,18],[355,19],[354,1],[353,1],[358,20],[397,21],[53,1],[54,1],[55,1],[764,22],[57,23],[770,24],[769,25],[247,26],[248,23],[368,1],[277,1],[278,1],[369,27],[249,1],[370,1],[371,28],[56,1],[251,29],[252,1],[250,30],[253,29],[254,1],[256,31],[268,32],[269,1],[274,33],[270,1],[271,1],[272,1],[273,1],[275,1],[276,34],[282,35],[285,36],[283,1],[284,1],[302,37],[286,1],[287,1],[813,38],[267,39],[265,40],[263,41],[264,42],[266,1],[294,43],[288,1],[297,44],[290,45],[295,46],[293,47],[296,48],[291,49],[292,50],[280,51],[298,52],[281,53],[300,54],[301,55],[289,1],[255,1],[262,56],[299,57],[365,58],[360,1],[366,59],[361,60],[362,61],[363,62],[364,63],[367,64],[383,65],[382,66],[388,67],[380,1],[381,68],[384,65],[385,69],[387,70],[386,71],[389,72],[374,73],[375,74],[378,75],[377,75],[376,74],[379,74],[373,76],[391,77],[390,78],[393,79],[392,80],[394,81],[356,51],[357,82],[279,1],[395,83],[372,84],[396,85],[400,3],[509,86],[510,87],[514,88],[401,1],[407,89],[507,90],[508,91],[402,1],[403,1],[406,92],[404,1],[405,1],[512,1],[513,93],[511,94],[515,95],[733,96],[734,97],[755,98],[756,99],[757,1],[758,100],[759,101],[768,102],[761,103],[765,104],[773,105],[771,3],[772,106],[762,107],[774,1],[776,108],[777,109],[778,110],[767,111],[763,112],[787,113],[775,114],[802,115],[760,116],[803,117],[800,118],[801,3],[825,119],[750,120],[746,121],[748,122],[799,123],[741,124],[789,125],[788,1],[749,126],[796,127],[753,128],[797,1],[798,129],[751,130],[745,131],[752,132],[747,133],[740,1],[793,134],[806,135],[804,3],[736,3],[792,136],[737,10],[738,99],[739,137],[743,138],[742,139],[805,140],[744,141],[781,142],[779,108],[780,143],[790,10],[791,144],[794,145],[809,146],[810,147],[807,148],[808,149],[811,150],[812,151],[814,152],[786,153],[783,154],[784,2],[785,143],[816,155],[815,156],[822,157],[754,3],[818,158],[817,3],[820,159],[819,1],[821,160],[766,161],[795,162],[824,163],[823,3],[692,164],[688,165],[687,166],[689,1],[690,167],[691,168],[693,169],[711,1],[715,170],[719,171],[712,3],[714,172],[713,1],[716,173],[717,174],[718,175],[720,176],[846,1],[847,1],[850,177],[851,1],[852,1],[854,1],[853,1],[868,1],[855,1],[856,178],[857,1],[858,1],[859,179],[860,177],[861,1],[863,180],[864,177],[865,181],[866,179],[867,1],[869,182],[874,183],[883,184],[873,185],[848,1],[862,181],[871,186],[872,1],[870,1],[875,187],[880,188],[876,3],[877,3],[878,3],[879,3],[849,1],[881,1],[882,189],[884,190],[832,191],[730,192],[829,1],[727,1],[728,193],[731,194],[732,3],[826,195],[729,193],[827,196],[828,197],[830,198],[831,1],[453,199],[454,199],[455,200],[413,201],[456,202],[457,203],[458,204],[408,1],[411,205],[409,1],[410,1],[459,206],[460,207],[461,208],[462,209],[463,210],[464,211],[465,211],[467,212],[466,213],[468,214],[469,215],[470,216],[452,217],[412,1],[471,218],[472,219],[473,220],[505,221],[474,222],[475,223],[476,224],[477,225],[478,226],[479,227],[480,228],[481,229],[482,230],[483,231],[484,231],[485,232],[486,1],[487,233],[489,234],[488,235],[490,236],[491,237],[492,238],[493,239],[494,240],[495,241],[496,242],[497,243],[498,244],[499,245],[500,246],[501,247],[502,248],[503,249],[504,250],[506,251],[51,1],[430,252],[440,253],[429,252],[450,254],[421,255],[420,256],[449,251],[443,257],[448,258],[423,259],[437,260],[422,261],[446,262],[418,263],[417,251],[447,264],[419,265],[424,266],[425,1],[428,266],[415,1],[451,267],[441,268],[432,269],[433,270],[435,271],[431,272],[434,273],[444,251],[426,274],[427,275],[436,276],[416,277],[439,268],[438,266],[442,1],[445,278],[399,279],[845,280],[398,3],[837,281],[841,282],[724,283],[835,284],[834,284],[836,284],[722,284],[726,285],[725,286],[833,287],[721,288],[840,289],[885,290],[844,290],[888,291],[889,292],[890,292],[891,292],[892,292],[893,1],[894,292],[895,292],[896,292],[897,292],[886,293],[898,294],[899,1],[900,1],[901,1],[521,295],[520,296],[902,297],[903,298],[904,1],[905,1],[906,1],[707,299],[665,300],[684,301],[685,302],[683,303],[518,304],[517,305],[519,306],[516,1],[666,1],[704,307],[703,308],[842,309],[843,310],[701,1],[686,311],[696,1],[694,1],[710,312],[695,313],[839,314],[838,315],[709,316],[708,315],[706,317],[700,309],[705,315],[698,1],[699,1],[697,318],[702,319],[723,1],[564,320],[555,1],[556,1],[557,1],[558,1],[559,1],[560,1],[561,1],[562,1],[563,1],[414,1],[525,1],[644,321],[648,321],[647,321],[645,321],[646,321],[649,321],[528,321],[540,321],[529,321],[542,321],[544,321],[538,321],[537,321],[539,321],[543,321],[545,321],[530,321],[541,321],[531,321],[533,322],[534,321],[535,321],[536,321],[552,321],[551,321],[652,323],[546,321],[548,321],[547,321],[549,321],[550,321],[651,321],[650,321],[553,321],[635,321],[634,321],[565,324],[566,324],[568,321],[612,321],[633,321],[569,324],[613,321],[610,321],[614,321],[570,321],[571,321],[572,324],[615,321],[609,324],[567,324],[616,321],[573,324],[617,321],[597,321],[574,324],[575,321],[576,321],[607,324],[579,321],[578,321],[618,321],[619,321],[620,324],[581,321],[583,321],[584,321],[590,321],[591,321],[585,324],[621,321],[608,324],[586,321],[587,321],[622,321],[588,321],[580,324],[623,321],[606,321],[624,321],[589,324],[592,321],[593,321],[611,324],[625,321],[626,321],[605,325],[582,321],[627,324],[628,321],[629,321],[630,321],[631,324],[594,321],[632,321],[598,321],[595,324],[596,324],[577,321],[599,321],[602,321],[600,321],[601,321],[554,321],[642,321],[636,321],[637,321],[639,321],[640,321],[638,321],[643,321],[641,321],[527,326],[660,327],[658,328],[659,329],[657,330],[656,321],[655,331],[524,1],[526,1],[522,1],[653,1],[654,332],[532,326],[523,1],[887,1],[604,333],[603,1],[246,334],[219,1],[197,335],[195,335],[245,336],[210,337],[209,337],[110,338],[61,339],[217,338],[218,338],[220,340],[221,338],[222,341],[121,342],[223,338],[194,338],[224,338],[225,343],[226,338],[227,337],[228,344],[229,338],[230,338],[231,338],[232,338],[233,337],[234,338],[235,338],[236,338],[237,338],[238,345],[239,338],[240,338],[241,338],[242,338],[243,338],[60,336],[63,341],[64,341],[65,341],[66,341],[67,341],[68,341],[69,341],[70,338],[72,346],[73,341],[71,341],[74,341],[75,341],[76,341],[77,341],[78,341],[79,341],[80,338],[81,341],[82,341],[83,341],[84,341],[85,341],[86,338],[87,341],[88,341],[89,341],[90,341],[91,341],[92,341],[93,338],[95,347],[94,341],[96,341],[97,341],[98,341],[99,341],[100,345],[101,338],[102,338],[116,348],[104,349],[105,341],[106,341],[107,338],[108,341],[109,341],[111,350],[112,341],[113,341],[114,341],[115,341],[117,341],[118,341],[119,341],[120,341],[122,351],[123,341],[124,341],[125,341],[126,338],[127,341],[128,352],[129,352],[130,352],[131,338],[132,341],[133,341],[134,341],[139,341],[135,341],[136,338],[137,341],[138,338],[140,341],[141,341],[142,341],[143,341],[144,341],[145,341],[146,338],[147,341],[148,341],[149,341],[150,341],[151,341],[152,341],[153,341],[154,341],[155,341],[156,341],[157,341],[158,341],[159,341],[160,341],[161,341],[162,341],[163,353],[164,341],[165,341],[166,341],[167,341],[168,341],[169,341],[170,338],[171,338],[172,338],[173,338],[174,338],[175,341],[176,341],[177,341],[178,341],[196,354],[244,338],[181,355],[180,356],[204,357],[203,358],[199,359],[198,358],[200,360],[189,361],[187,362],[202,363],[201,360],[188,1],[190,364],[103,365],[59,366],[58,341],[193,1],[185,367],[186,368],[183,1],[184,369],[182,341],[191,370],[62,371],[211,1],[212,1],[205,1],[208,337],[207,1],[213,1],[214,1],[206,372],[215,1],[216,1],[179,373],[192,374],[48,1],[49,1],[8,1],[9,1],[13,1],[12,1],[2,1],[14,1],[15,1],[16,1],[17,1],[18,1],[19,1],[20,1],[21,1],[3,1],[22,1],[23,1],[4,1],[24,1],[50,1],[28,1],[25,1],[26,1],[27,1],[29,1],[30,1],[31,1],[5,1],[32,1],[33,1],[34,1],[35,1],[6,1],[39,1],[36,1],[37,1],[38,1],[40,1],[7,1],[41,1],[46,1],[47,1],[42,1],[43,1],[44,1],[45,1],[1,1],[11,1],[10,1],[680,375],[671,376],[678,377],[673,1],[674,1],[672,378],[675,379],[667,1],[668,1],[679,380],[670,381],[676,1],[677,382],[669,383],[681,384],[682,385],[664,386],[662,1],[663,1],[661,1]],"semanticDiagnosticsPerFile":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906],"version":"5.8.3"}
</file>

<file path="packages/core/package.json">
{
  "name": "@repo/core",
  "version": "0.0.0",
  "private": true,
  "packageManager": "yarn@4.9.1",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "scripts": {
    "build": "tsc -p tsconfig.json --declaration --declarationMap",
    "clean": "rimraf dist",
    "prebuild": "yarn clean",
    "lint": "eslint . --ext .ts,.tsx"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "eslint": "^8.57.1",
    "rimraf": "^5.0.1",
    "tsconfig": "workspace:*",
    "typescript": "^5.1.6"
  }
}
</file>

<file path="packages/ui/package.json">
{
  "name": "ui",
  "version": "0.0.0",
  "private": true,
  "packageManager": "yarn@4.9.1",
  "main": "./index.tsx",
  "types": "./index.tsx",
  "license": "MIT",
  "devDependencies": {
    "@repo/config": "workspace:*",
    "@types/react": "^18.2.18",
    "@types/react-dom": "^18.2.7",
    "tsconfig": "workspace:*",
    "typescript": "^5.1.6"
  }
}
</file>

<file path="README.md">
# Turborepo (NestJS + Prisma + NextJS + Tailwind + Typescript + Jest) Starter

This is fullstack turborepo starter. It comes with the following features. 

- ✅ Turborepo 
- ✅ Nestjs 
    - ✅ Env Config with Validation  
    - ✅ Prisma 
- ✅ NextJS 
    - ✅ Tailwind 
    - ✅ Redux Toolkit Query 
- ✅ Testing using Jest 
- ✅ Github Actions 
- ✅ Reverse Proxy using Nginx 
- ✅ Docker Integration 
- ✅ Postgres Database 
- ✅ Package scripts using NPS 

## What's inside?

This turborepo uses [Yarn](https://classic.yarnpkg.com/lang/en/) as a package manager. It includes the following packages/apps:

### Apps and Packages

- `api`: a [NestJS](https://nestjs.com/) app
- `web`: a [Next.js](https://nextjs.org) app
- `ui`: a stub React component library used by `web`.
- `config`: `eslint`, `nginx` and `tailwind` (includes `eslint-config-next` and `eslint-config-prettier`)
- `tsconfig`: `tsconfig.json`s used throughout the monorepo

Each package/app is 100% [TypeScript](https://www.typescriptlang.org/).

### Utilities

This turborepo has some additional tools already setup for you:

- [Node Package Scripts](https://github.com/sezna/nps#readme) for automation scripts
- [TypeScript](https://www.typescriptlang.org/) for static type checking
- [ESLint](https://eslint.org/) for code linting
- [Prettier](https://prettier.io) for code formatting

## Setup
This starter kit is using turborepo and yarn workspaces for monorepo workflow.

### Prerequisites 
- Install nps by running 
```
npm i -g nps
```
- Make sure docker and docker-compose are
 installed. Refer to docs for your operating system.

### Configure Environment
- Frontend 
    - `cd apps/web && cp .env.example .env`
- Backend 
    - `cd apps/api && cp .env.example .env`

### Install Dependencies
Make sure you are at root of the project and just run 

```
nps prepare
```
### Build

To build all apps and packages, run the following command at the root of project:

```
nps build
```

### Develop

To develop all apps and packages, run the following command at the root of project:

```
nps dev
```
The app should be running at `http://localhost` with reverse proxy configured.


## Other available commands
Run `nps` in the terminal to see list of all available commands.
</file>

<file path="apps/api/src/users/users.service.ts">
// apps/api/src/users/users.service.ts
import {
  Injectable,
  ConflictException,
  InternalServerErrorException,
} from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { PrismaService } from '../persistence/prisma/prisma.service';
import { CreateUserDto } from './dto/create-user.dto';
import * as bcrypt from 'bcryptjs';
import {
  Prisma,
  User as PrismaGeneratedUserType,
  Role as PrismaGeneratedRoleType,
} from '@prisma/client';
import { User as CoreUser, Role as CoreRole } from '@repo/core';
import { ServerEnv } from '@repo/config';

@Injectable()
export class UsersService {
  private readonly saltRounds: number;

  constructor(
    private prisma: PrismaService,
    private configService: ConfigService<ServerEnv, true>,
  ) {
    const saltFromEnv = this.configService.get('SALT_ROUNDS', { infer: true });
    if (typeof saltFromEnv !== 'number') {
      console.warn(
        `SALT_ROUNDS var ikke et tal i ConfigService, falder tilbage til 10. Værdi: ${saltFromEnv}`,
      );
      this.saltRounds = 10;
    } else {
      this.saltRounds = saltFromEnv;
    }
  }

  private mapToCoreUser(
    user: PrismaGeneratedUserType,
  ): Omit<CoreUser, 'passwordHash'> {
    const {
      passwordHash,
      passwordResetToken,
      passwordResetExpires,
      ...result
    } = user;
    return {
      ...result,
      name: result.name ?? undefined,
      role: user.role as CoreRole,
      createdAt: new Date(user.createdAt),
      updatedAt: new Date(user.updatedAt),
    };
  }

  async create(
    createUserDto: CreateUserDto,
  ): Promise<Omit<CoreUser, 'passwordHash'>> {
    const { email, password, name, role } = createUserDto;

    const existingUser = await this.prisma.user.findUnique({
      where: { email },
    });

    if (existingUser) {
      throw new ConflictException(
        'En bruger med denne email eksisterer allerede.',
      );
    }

    let hashedPassword;
    try {
      hashedPassword = await bcrypt.hash(password, this.saltRounds);
    } catch (error) {
      console.error('Fejl under hashing af password:', error);
      throw new InternalServerErrorException(
        'Der opstod en intern fejl under brugeroprettelse (hashing).',
      );
    }

    try {
      const prismaUser = await this.prisma.user.create({
        data: {
          email,
          passwordHash: hashedPassword,
          name: name || null,
          role:
            (role as unknown as PrismaGeneratedRoleType) ||
            ('USER' as PrismaGeneratedRoleType),
        },
      });
      return this.mapToCoreUser(prismaUser);
    } catch (error) {
      if (
        error instanceof Prisma.PrismaClientKnownRequestError &&
        error.code === 'P2002'
      ) {
        throw new ConflictException(
          'En bruger med denne email eksisterer allerede (databasefejl).',
        );
      }
      console.error('Databasefejl under brugeroprettelse:', error);
      throw new InternalServerErrorException(
        'Der opstod en databasefejl under brugeroprettelse.',
      );
    }
  }

  async findOneByEmail(email: string): Promise<PrismaGeneratedUserType | null> {
    return this.prisma.user.findUnique({
      where: { email },
    });
  }

  async findOneById(id: number): Promise<PrismaGeneratedUserType | null> {
    return this.prisma.user.findUnique({
      where: { id },
    });
  }

  async findOneByEmailForAuth(
    email: string,
  ): Promise<Omit<CoreUser, 'passwordHash'> | null> {
    const prismaUser = await this.findOneByEmail(email);
    return prismaUser ? this.mapToCoreUser(prismaUser) : null;
  }
}
</file>

<file path="apps/api/src/main.ts">
// Filsti: apps/api/src/main.ts
import { Logger, ValidationPipe } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { GlobalExceptionFilter } from './common/filters/global-exception.filter';
import cookieParser from 'cookie-parser';

declare const module: any; // For HMR (Hot Module Replacement)

async function bootstrap() {
  const logger = new Logger('EntryPoint');
  const app = await NestFactory.create(AppModule);

  // Sæt et globalt prefix for alle API-ruter
  app.setGlobalPrefix('api'); // <--- TILFØJET DENNE LINJE

  // Konfigurer CORS
  app.enableCors({
    origin: [
      'http://localhost:3000', // Standard Next.js port
      'http://localhost:3001', // Hvis port 3000 er optaget
      'http://localhost:3002', // Hvis port 3001 er optaget
      'http://localhost:3003', // Hvis port 3002 er optaget
      'http://localhost:3007', // Tilføjet for at understøtte din nuværende frontend port
      // Tilføj andre porte, din Next.js app måtte bruge under udvikling
    ],
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',
    credentials: true,
  });

  // Global Validation Pipe
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
      transformOptions: {
        enableImplicitConversion: true,
      },
    }),
  );

  // Global Exception Filter
  app.useGlobalFilters(new GlobalExceptionFilter());

  // Cookie Parser
  app.use(cookieParser());

  // CSRF Protection is handled by CsrfMiddleware in app.module.ts
  // Removing duplicate implementation here

  // Swagger API Dokumentation Setup
  // Swagger UI vil nu være tilgængelig på /api/docs
  const swaggerConfig = new DocumentBuilder()
    .setTitle('Læringsplatform API')
    .setDescription('API Dokumentation for den avancerede læringsplatform')
    .setVersion('1.0')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, swaggerConfig);
  // Swagger UI er nu på /api/docs på grund af global prefix
  // Vi bruger 'api/docs' for at undgå konflikter med global prefix
  SwaggerModule.setup('api/docs', app, document);

  // Try to find an available port starting from the default
  const DEFAULT_PORT = parseInt(process.env.PORT || '5002', 10);
  const currentPort = DEFAULT_PORT;

  // Function to try listening on a port and increment if it fails
  const tryListen = async (port: number): Promise<number> => {
    try {
      await app.listen(port);
      return port;
    } catch (error: any) {
      // Type as any to access error.code
      if (error.code === 'EADDRINUSE') {
        logger.warn(`Port ${port} is already in use, trying ${port + 1}`);
        return tryListen(port + 1);
      }
      throw error;
    }
  };

  const PORT = await tryListen(currentPort);

  if (module.hot) {
    module.hot.accept();
    module.hot.dispose(() => app.close());
  }

  logger.log(`NestJS API server kører internt på http://localhost:${PORT}`);
  logger.log(
    `API Dokumentation (internt) er tilgængelig på http://localhost:${PORT}/api/docs`,
  );
  // Nginx-relaterede logs er mindre relevante nu, da vi kører direkte
  // logger.log(
  //   `Hele applikationen (via Nginx) burde være tilgængelig på http://localhost`,
  // );
  // logger.log(
  //   `API'en (via Nginx) burde være tilgængelig på http://localhost/api/`,
  // );
}
bootstrap();
</file>

<file path="apps/api/src/auth/auth.service.ts">
// File: apps/api/src/auth/auth.service.ts
import { Injectable, BadRequestException } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { UsersService } from '../users/users.service';
import { JwtService } from '@nestjs/jwt';
import * as bcrypt from 'bcryptjs';
import { PrismaService } from '../persistence/prisma/prisma.service';
import { JwtPayload } from './strategies/jwt/jwt';
import { ResetPasswordDto } from './dto/reset-password.dto';
import { v4 as uuidv4 } from 'uuid'; // Til generering af unikke tokens
import { User as CoreUser, Role as CoreRole } from '@repo/core';
import { User as PrismaUser } from '@prisma/client'; // Typen fra Prisma

@Injectable()
export class AuthService {
  private readonly saltRounds: number;
  private readonly jwtSecret: string;
  private readonly jwtExpiresIn: string;
  private readonly jwtRefreshSecret: string;
  private readonly jwtRefreshExpiresIn: string;

  constructor(
    private readonly usersService: UsersService,
    private readonly jwtService: JwtService,
    private readonly prisma: PrismaService, // Direkte adgang til PrismaService
    private readonly configService: ConfigService,
  ) {
    // Hent SALT_ROUNDS fra config, med en default værdi hvis den ikke er sat eller er ugyldig
    const saltFromEnv = this.configService.get<string | number>(
      'SALT_ROUNDS',
      10,
    ); // Default 10
    this.saltRounds =
      typeof saltFromEnv === 'string' ? parseInt(saltFromEnv, 10) : saltFromEnv;
    if (isNaN(this.saltRounds)) {
      console.warn(
        `SALT_ROUNDS var ugyldig, falder tilbage til 10. Værdi: ${saltFromEnv}`,
      );
      this.saltRounds = 10;
    }

    // Hent JWT konfiguration. Disse forventes at være sat korrekt via ConfigModule.
    this.jwtSecret = this.configService.get<string>('JWT_SECRET');
    this.jwtExpiresIn = this.configService.get<string>(
      'JWT_EXPIRES_IN',
      '900s',
    ); // Default 15 minutter
    this.jwtRefreshSecret = this.configService.get<string>(
      'JWT_REFRESH_SECRET',
      this.jwtSecret + '_refresh',
    );
    this.jwtRefreshExpiresIn = this.configService.get<string>(
      'JWT_REFRESH_EXPIRES_IN',
      '7d',
    ); // Default 7 dage
  }

  // Mapper en Prisma User til en CoreUser (uden passwordHash)
  private mapToCoreUser(user: PrismaUser): Omit<CoreUser, 'passwordHash'> {
    const {
      passwordHash: _passwordHash, // Ignorer passwordHash
      passwordResetToken: _passwordResetToken, // Ignorer passwordResetToken
      passwordResetExpires: _passwordResetExpires, // Ignorer passwordResetExpires
      ...rest // Resten af brugerens felter
    } = user;
    return {
      ...rest,
      role: user.role as CoreRole, // Sikrer korrekt enum type
      createdAt: new Date(user.createdAt), // Konverter til Date objekt
      updatedAt: new Date(user.updatedAt), // Konverter til Date objekt
    };
  }

  // Validerer brugerens email og password
  async validateUser(
    email: string,
    password: string,
  ): Promise<Omit<CoreUser, 'passwordHash'> | null> {
    const user = await this.usersService.findOneByEmail(email); // Henter fuld Prisma User
    if (user && (await bcrypt.compare(password, user.passwordHash))) {
      return this.mapToCoreUser(user); // Returnerer CoreUser uden passwordHash
    }
    return null;
  }

  // Genererer JWT access og refresh tokens for en valideret bruger
  async login(
    user: Omit<CoreUser, 'passwordHash'>, // Forventer allerede CoreUser format
  ): Promise<{ access_token: string; refresh_token: string }> {
    const payload: JwtPayload = { email: user.email, sub: user.id };

    // Generer access token med kort levetid
    const access_token = this.jwtService.sign(payload, {
      secret: this.jwtSecret,
      expiresIn: this.jwtExpiresIn,
    });

    // Generer refresh token med længere levetid
    const refresh_token = this.jwtService.sign(payload, {
      secret: this.jwtRefreshSecret,
      expiresIn: this.jwtRefreshExpiresIn,
    });

    return {
      access_token,
      refresh_token,
    };
  }

  // Forny access token ved brug af et gyldigt refresh token
  async refreshToken(refresh_token: string): Promise<{ access_token: string }> {
    try {
      // Verificer refresh token
      const payload = this.jwtService.verify(refresh_token, {
        secret: this.jwtRefreshSecret,
      }) as JwtPayload;

      // Hent bruger for at sikre, at den stadig eksisterer
      const user = await this.usersService.findOneById(payload.sub);
      if (!user) {
        throw new Error('Bruger ikke fundet');
      }

      // Generer nyt access token
      const access_token = this.jwtService.sign(
        { email: payload.email, sub: payload.sub },
        {
          secret: this.jwtSecret,
          expiresIn: this.jwtExpiresIn,
        },
      );

      return { access_token };
    } catch (error) {
      throw new BadRequestException('Ugyldigt eller udløbet refresh token');
    }
  }

  /**
   * Håndterer anmodning om nulstilling af adgangskode.
   * Genererer et unikt token, sætter en udløbstid, og gemmer det på brugeren.
   * @param email Brugerens emailadresse.
   * @returns En generisk succesmeddelelse.
   */
  async forgotPassword(email: string): Promise<{ message: string }> {
    const user = await this.usersService.findOneByEmail(email); // Henter fuld Prisma User

    // Returner altid en generisk besked for at undgå at afsløre, om en email eksisterer i systemet.
    if (!user) {
      return {
        message:
          'Hvis din email findes i systemet, vil du modtage et link til at nulstille dit password.',
      };
    }

    const resetToken = uuidv4(); // Generer et unikt token
    const expires = new Date();
    expires.setHours(expires.getHours() + 1); // Sæt token til at udløbe om 1 time

    try {
      await this.prisma.user.update({
        where: { id: user.id },
        data: {
          passwordResetToken: resetToken,
          passwordResetExpires: expires,
        },
      });
    } catch (error) {
      console.error('Fejl ved opdatering af password reset token i DB:', error);
      // Selvom der er en intern fejl, returner stadig generisk besked for sikkerhed.
      // Logning er vigtig her for at kunne debugge.
      return {
        message:
          'Der opstod et problem med at behandle din anmodning. Prøv igen senere.',
      };
    }

    // TODO: Implementer afsendelse af email med nulstillingslinket.
    // Eksempel: sendEmail(user.email, `Nulstil dit password: ${frontendUrl}/reset-password?token=${resetToken}`);
    // Log token for udviklingsformål indtil email er implementeret:
    console.log(`Password reset token for ${user.email}: ${resetToken}`);

    return {
      message:
        'Hvis din email findes i systemet, vil du modtage et link til at nulstille dit password.',
    };
  }

  /**
   * Håndterer selve nulstillingen af adgangskoden med et gyldigt token.
   * @param dto Indeholder token, nyt password og bekræftelse af nyt password.
   * @returns En succesmeddelelse.
   */
  async resetPassword(dto: ResetPasswordDto): Promise<{ message: string }> {
    const { token, newPassword, confirmPassword } = dto;

    // Valider at de nye passwords matcher
    if (newPassword !== confirmPassword) {
      throw new BadRequestException('De nye adgangskoder matcher ikke.');
    }

    // Find brugeren baseret på reset-tokenet
    const user = await this.prisma.user.findUnique({
      where: { passwordResetToken: token },
    });

    // Tjek om tokenet er gyldigt og ikke udløbet
    if (
      !user ||
      !user.passwordResetExpires ||
      user.passwordResetExpires < new Date() // Tjek om tokenet er udløbet
    ) {
      throw new BadRequestException(
        'Ugyldigt eller udløbet reset-token. Prøv at anmode om et nyt link.',
      );
    }

    // Hash det nye password
    let hashedPassword;
    try {
      hashedPassword = await bcrypt.hash(newPassword, this.saltRounds);
    } catch (error) {
      console.error('Fejl under hashing af nyt password ved reset:', error);
      throw new BadRequestException(
        'Der opstod en fejl ved behandling af dit nye password.',
      );
    }

    // Opdater brugerens password og fjern reset-tokenet
    try {
      await this.prisma.user.update({
        where: { id: user.id },
        data: {
          passwordHash: hashedPassword,
          passwordResetToken: null, // Nulstil tokenet, så det ikke kan bruges igen
          passwordResetExpires: null, // Nulstil udløbsdato
        },
      });
    } catch (dbError) {
      console.error(
        'Fejl ved opdatering af password i DB efter reset:',
        dbError,
      );
      throw new BadRequestException('Der opstod en databasefejl. Prøv igen.');
    }

    return { message: 'Din adgangskode er blevet nulstillet med succes.' };
  }
}
</file>

<file path="apps/api/src/app.module.ts">
// apps/api/src/app.module.ts
import { Module, MiddlewareConsumer, NestModule } from '@nestjs/common';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { PersistenceModule } from './persistence/persistence.module';
import { UsersModule } from './users/users.module';
import { AuthModule } from './auth/auth.module';
import { ThrottlerModule } from '@nestjs/throttler';
import { CsrfMiddleware } from './common/middleware/csrf.middleware';
import {
  serverSchema,
  ServerEnv,
  clientEnv as getClientEnv,
} from '@repo/config';

@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true,
      validate: (configFromEnvFile) => {
        const source = { ...configFromEnvFile, ...process.env };
        const validatedConfig = serverSchema.safeParse(source);

        // In CI/CD or build environments, we don't need to validate all environment variables
        if (process.env.CI || process.env.NODE_ENV === 'production') {
          console.log(
            'Running in CI/CD or production environment, skipping strict env validation',
          );
          return source as ServerEnv;
        }

        if (!validatedConfig.success) {
          console.error(
            'Fejl i server miljøvariabel-validering (AppModule):',
            validatedConfig.error.flatten().fieldErrors,
          );
          throw new Error(
            `Server miljøvariabel-validering fejlede: ${JSON.stringify(validatedConfig.error.format())}`,
          );
        }

        try {
          getClientEnv();
        } catch (clientError) {
          // In CI/CD or build environments, we don't need to validate client environment variables
          if (!(process.env.CI || process.env.NODE_ENV === 'production')) {
            throw clientError;
          }
        }

        return validatedConfig.data as ServerEnv;
      },
    }),
    ThrottlerModule.forRoot([
      {
        ttl: 60000, // 1 minut
        limit: 10, // 10 requests per ttl
      },
    ]),
    PersistenceModule,
    UsersModule,
    AuthModule,
  ],
  controllers: [AppController],
  providers: [AppService, ConfigService],
})
export class AppModule implements NestModule {
  configure(consumer: MiddlewareConsumer) {
    // Temporarily disable CSRF middleware until properly configured
    // consumer.apply(CsrfMiddleware).forRoutes('*');
  }
}
</file>

<file path="packages/config/package.json">
{
  "name": "@repo/config",
  "version": "0.0.0",
  "private": true,
  "packageManager": "yarn@4.9.1",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "files": [
    "eslint-preset.js",
    "nginx.conf",
    "postcss.config.js",
    "tailwind.config.js",
    "src",
    "dist"
  ],
  "scripts": {
    "build": "tsc -p tsconfig.json",
    "lint": "eslint . --ext .ts,.tsx"
  },
  "dependencies": {
    "eslint-config-next": "^13.4.12",
    "eslint-config-prettier": "^8.9.0",
    "eslint-plugin-react": "7.33.1",
    "zod": "^3.24.4"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "eslint": "^8.57.1",
    "tsconfig": "workspace:*",
    "typescript": "^5.1.6"
  },
  "license": "MIT"
}
</file>

<file path="docker-compose.yml">
version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: learning-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: learninglab_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:
</file>

<file path="Struktur.txt">
```
LearningLab
├─ .node-version
├─ .repomix
│  └─ bundles.json
├─ .yarn
│  ├─ install-state.gz
│  └─ releases
│     └─ yarn-4.9.1.cjs
├─ .yarnrc.yml
├─ E1-MVP-UI-Plan.md
├─ E2-Quiz-Core-Plan.md
├─ Jira style.txt
├─ LICENSE
├─ Planen.txt
├─ README.md
├─ api
│  └─ web.txt
├─ apps
│  ├─ api
│  │  ├─ .eslintrc.js
│  │  ├─ .prettierrc
│  │  ├─ .turbo
│  │  │  └─ turbo-lint.log
│  │  ├─ nest-cli.json
│  │  ├─ package.json
│  │  ├─ prisma
│  │  │  ├─ migrations
│  │  │  │  ├─ 20220307034109_initial_migrate
│  │  │  │  │  └─ migration.sql
│  │  │  │  ├─ 20250517073440_add_user_auth_fields
│  │  │  │  │  └─ migration.sql
│  │  │  │  ├─ 20250517122525_add_password_reset_fields
│  │  │  │  │  └─ migration.sql
│  │  │  │  ├─ 20250520211803_add_pensum_and_quiz_models
│  │  │  │  │  └─ migration.sql
│  │  │  │  └─ migration_lock.toml
│  │  │  └─ schema.prisma
│  │  ├─ src
│  │  │  ├─ app.controller.spec.ts
│  │  │  ├─ app.controller.ts
│  │  │  ├─ app.module.ts
│  │  │  ├─ app.service.ts
│  │  │  ├─ auth
│  │  │  │  ├─ auth.controller.ts
│  │  │  │  ├─ auth.module.ts
│  │  │  │  ├─ auth.service.ts
│  │  │  │  ├─ dto
│  │  │  │  │  ├─ forgot-password.dto.ts
│  │  │  │  │  ├─ login.dto.ts
│  │  │  │  │  ├─ refresh-token.dto.ts
│  │  │  │  │  └─ reset-password.dto.ts
│  │  │  │  ├─ guards
│  │  │  │  │  ├─ jwt-auth.guard.ts
│  │  │  │  │  ├─ local-auth.guard.ts
│  │  │  │  │  └─ login-throttler.guard.ts
│  │  │  │  └─ strategies
│  │  │  │     ├─ jwt
│  │  │  │     │  └─ jwt.ts
│  │  │  │     └─ local
│  │  │  │        └─ local.ts
│  │  │  ├─ common
│  │  │  │  ├─ filters
│  │  │  │  │  └─ global-exception.filter.ts
│  │  │  │  └─ middleware
│  │  │  │     └─ csrf.middleware.ts
│  │  │  ├─ config
│  │  │  │  └─ environment-variables.ts
│  │  │  ├─ controllers
│  │  │  │  ├─ contentBlock.controller.ts
│  │  │  │  ├─ course.controller.ts
│  │  │  │  ├─ lesson.controller.ts
│  │  │  │  ├─ module.controller.ts
│  │  │  │  ├─ pensum.controller.ts
│  │  │  │  ├─ quiz.controller.ts
│  │  │  │  ├─ quizAttempt.controller.ts
│  │  │  │  ├─ subjectArea.controller.ts
│  │  │  │  └─ userProgress.controller.ts
│  │  │  ├─ dto
│  │  │  ├─ main.ts
│  │  │  ├─ middleware
│  │  │  │  └─ auth.middleware.ts
│  │  │  ├─ modules
│  │  │  │  ├─ pensum.module.ts
│  │  │  │  ├─ quiz.module.ts
│  │  │  │  └─ userProgress.module.ts
│  │  │  ├─ persistence
│  │  │  │  ├─ persistence.module.ts
│  │  │  │  └─ prisma
│  │  │  │     ├─ prisma.service.spec.ts
│  │  │  │     └─ prisma.service.ts
│  │  │  ├─ services
│  │  │  │  ├─ pensum.service.ts
│  │  │  │  ├─ quiz.service.ts
│  │  │  │  └─ userProgress.service.ts
│  │  │  ├─ types
│  │  │  │  └─ express.d.ts
│  │  │  └─ users
│  │  │     ├─ dto
│  │  │     │  └─ create-user.dto.ts
│  │  │     ├─ users.controller.spec.ts
│  │  │     ├─ users.controller.ts
│  │  │     ├─ users.module.ts
│  │  │     ├─ users.service.spec.ts
│  │  │     └─ users.service.ts
│  │  ├─ test
│  │  │  ├─ app.e2e-spec.ts
│  │  │  └─ jest-e2e.json
│  │  ├─ tsconfig.json
│  │  └─ webpack-hmr.config.js
│  └─ web
│     ├─ .eslintrc.js
│     ├─ .turbo
│     │  └─ turbo-lint.log
│     ├─ README.md
│     ├─ jest.config.js
│     ├─ jest.setup.js
│     ├─ next-env.d.ts
│     ├─ next.config.js
│     ├─ package.json
│     ├─ pages
│     │  ├─ _app.tsx
│     │  ├─ courses
│     │  │  ├─ [slug]
│     │  │  │  └─ quizzes
│     │  │  │     └─ [id].tsx
│     │  │  ├─ [slug].tsx
│     │  │  └─ index.tsx
│     │  ├─ dashboard.tsx
│     │  ├─ forgot-password.tsx
│     │  ├─ index.tsx
│     │  ├─ lessons
│     │  │  └─ [id].tsx
│     │  ├─ login.tsx
│     │  ├─ profile.tsx
│     │  ├─ reset-password.tsx
│     │  └─ signup.tsx
│     ├─ postcss.config.js
│     ├─ src
│     │  ├─ common
│     │  ├─ components
│     │  │  ├─ auth
│     │  │  └─ quiz
│     │  │     ├─ QuizContainer.tsx
│     │  │     ├─ QuizNavigation.tsx
│     │  │     ├─ QuizProgress.tsx
│     │  │     ├─ QuizQuestion.tsx
│     │  │     └─ ScoreToast.tsx
│     │  ├─ context
│     │  │  ├─ AuthContext.tsx
│     │  │  ├─ QuizContext.tsx
│     │  │  ├─ ThemeContext.tsx
│     │  │  └─ useAuth.ts
│     │  ├─ screens
│     │  │  ├─ admin
│     │  │  ├─ auth
│     │  │  │  ├─ forgot-password
│     │  │  │  │  └─ forgot-password.tsx
│     │  │  │  ├─ login
│     │  │  │  │  ├─ login.test.tsx
│     │  │  │  │  └─ login.tsx
│     │  │  │  ├─ reset-password
│     │  │  │  │  └─ reset-password.tsx
│     │  │  │  └─ signup
│     │  │  │     └─ signup.tsx
│     │  │  ├─ common
│     │  │  └─ employee
│     │  ├─ store
│     │  │  ├─ index.ts
│     │  │  └─ services
│     │  │     └─ api.ts
│     │  └─ styles
│     │     └─ global.css
│     ├─ tailwind.config.js
│     └─ tsconfig.json
├─ docker-compose.yml
├─ forslag.txt
├─ gitlog.txt
├─ kommando fejl.txt
├─ milesten.txt
├─ package-scripts.js
├─ package.json
├─ packages
│  ├─ config
│  │  ├─ .eslintrc.js
│  │  ├─ .turbo
│  │  │  └─ turbo-lint.log
│  │  ├─ eslint-preset.js
│  │  ├─ nginx.conf
│  │  ├─ package.json
│  │  ├─ postcss.config.js
│  │  ├─ src
│  │  │  ├─ env.d.ts
│  │  │  ├─ env.d.ts.map
│  │  │  ├─ env.js
│  │  │  ├─ env.js.map
│  │  │  ├─ env.ts
│  │  │  ├─ index.d.ts
│  │  │  ├─ index.d.ts.map
│  │  │  ├─ index.js
│  │  │  ├─ index.js.map
│  │  │  └─ index.ts
│  │  ├─ tailwind.config.js
│  │  └─ tsconfig.json
│  ├─ core
│  │  ├─ .eslintrc.js
│  │  ├─ .turbo
│  │  │  └─ turbo-lint.log
│  │  ├─ package.json
│  │  ├─ src
│  │  │  ├─ index.d.ts
│  │  │  ├─ index.d.ts.map
│  │  │  ├─ index.js
│  │  │  ├─ index.js.map
│  │  │  ├─ index.ts
│  │  │  └─ types
│  │  │     ├─ pensum.types.d.ts
│  │  │     ├─ pensum.types.d.ts.map
│  │  │     ├─ pensum.types.js
│  │  │     ├─ pensum.types.js.map
│  │  │     ├─ pensum.types.ts
│  │  │     ├─ quiz.types.d.ts
│  │  │     ├─ quiz.types.d.ts.map
│  │  │     ├─ quiz.types.js
│  │  │     ├─ quiz.types.js.map
│  │  │     ├─ quiz.types.ts
│  │  │     ├─ user.types.d.ts
│  │  │     ├─ user.types.d.ts.map
│  │  │     ├─ user.types.js
│  │  │     ├─ user.types.js.map
│  │  │     └─ user.types.ts
│  │  └─ tsconfig.json
│  ├─ tsconfig
│  │  ├─ README.md
│  │  ├─ base.json
│  │  ├─ nestjs.json
│  │  ├─ nextjs.json
│  │  ├─ package.json
│  │  └─ react-library.json
│  └─ ui
│     ├─ components
│     │  └─ Button
│     │     └─ Button.tsx
│     ├─ index.tsx
│     ├─ package.json
│     └─ tsconfig.json
├─ prisma
│  ├─ migrations
│  │  ├─ 20250520183549_new
│  │  │  └─ migration.sql
│  │  └─ migration_lock.toml
│  └─ schema.prisma
├─ render.yaml
├─ smil.txt
├─ tsconfig.json
├─ turbo.json
└─ yarn.lock

```
</file>

<file path="apps/web/package.json">
{
  "name": "web",
  "version": "0.0.0",
  "private": true,
  "packageManager": "yarn@4.9.1",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:ci": "jest --ci"
  },
  "dependencies": {
    "@reduxjs/toolkit": "^1.9.5",
    "@repo/config": "workspace:*",
    "@repo/core": "workspace:*",
    "next": "13.4.12",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-redux": "^8.1.2",
    "ui": "workspace:*",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@repo/config": "workspace:*",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^14.0.0",
    "@testing-library/user-event": "14.4.3",
    "@types/babel__core": "^7.20.5",
    "@types/node": "^20.4.5",
    "@types/react": "18.2.18",
    "@types/uuid": "^10.0.0",
    "autoprefixer": "^10.4.14",
    "eslint": "8.46.0",
    "jest": "^29.6.2",
    "jest-environment-jsdom": "^29.6.2",
    "next-router-mock": "^1.0.2",
    "next-transpile-modules": "10.0.1",
    "postcss": "^8.4.27",
    "tailwindcss": "^3.3.3",
    "tsconfig": "workspace:*",
    "typescript": "^5.1.6"
  }
}
</file>

<file path="render.yaml">
# render.yaml
services:
  - type: web
    name: api-service
    env: node
    rootDir: apps/api
    plan: free
    region: frankfurt

    buildCommand: |
      corepack enable
      yarn install --immutable
      yarn workspace api prisma generate
      # 🚀 Bygger core, config og api i korrekt rækkefølge
      npx turbo run build --filter=...api
      # 🗄 Kør databasmigrationer
      yarn workspace api prisma migrate deploy

    startCommand: node dist/main.js
    healthCheckPath: /api
    autoDeploy: true

    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: learning-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_EXPIRES_IN
        value: 1h
      - key: NODE_ENV
        value: production

databases:
  - name: learning-db
    plan: free
    region: frankfurt
    ipAllowList: []
    postgresMajorVersion: "15"
</file>

<file path="package.json">
{
  "name": "turborepo-basic-shared",
  "version": "0.0.0",
  "private": true,
  "packageManager": "yarn@4.9.1",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "build": "turbo run build",
    "dev": "turbo run dev --parallel",
    "lint": "turbo run lint",
    "format": "prettier --write \"**/*.{ts,tsx,md}\"",
    "prisma:migrate": "cd apps/api && npx prisma migrate dev",
    "prisma:generate": "cd apps/api && npx prisma generate",
    "prisma:studio": "cd apps/api && npx prisma studio"
  },
  "devDependencies": {
    "@nestjs/common": "^11.1.1",
    "@types/eslint": "^9.6.1",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.15.18",
    "prettier": "^3.0.0",
    "prisma": "^5.1.0",
    "rxjs": "^7.8.2",
    "turbo": "1.10.12",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@nestjs/config": "^4.0.2",
    "@types/axios": "^0.14.4",
    "axios": "^1.9.0",
    "reflect-metadata": "^0.2.2"
  },
  "engines": {
    "npm": ">=7.0.0",
    "node": ">=22 <23"
  }
}
</file>

<file path="apps/api/package.json">
{
  "name": "api",
  "version": "0.0.1",
  "private": true,
  "license": "UNLICENSED",
  "packageManager": "yarn@4.9.1",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "tsc -p tsconfig.build.json --skipLibCheck",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "dev": "yarn prisma generate && nest build --webpack --webpackPath webpack-hmr.config.js --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch --runInBand",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json --runInBand",
    "test:ci": "yarn prisma generate && jest --ci --runInBand"
  },
  "dependencies": {
    "@nestjs/common": "^10.4.17",
    "@nestjs/config": "^3.0.0",
    "@nestjs/core": "^10.4.17",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^10.1.3",
    "@nestjs/swagger": "^7.1.6",
    "@nestjs/throttler": "^5.0.0",
    "@prisma/client": "5.22.0",
    "@repo/config": "workspace:*",
    "@repo/core": "workspace:*",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cookie-parser": "^1.4.6",
    "csurf": "^1.11.0",
    "express": "^5.1.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^5.0.1",
    "rxjs": "^7.8.2",
    "swagger-ui-express": "^5.0.0",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.4.9",
    "@nestjs/schematics": "^10.0.1",
    "@nestjs/testing": "^10.1.3",
    "@swc/core": "^1.11.24",
    "@types/bcryptjs": "^2.4.6",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.3",
    "@types/joi": "^17.2.3",
    "@types/node": "^20.4.5",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^6.2.1",
    "@typescript-eslint/parser": "^6.2.1",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^8.9.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.6.2",
    "prettier": "^3.0.0",
    "prisma": "5.22.0",
    "run-script-webpack-plugin": "^0.2.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.4.4",
    "ts-node": "^10.9.1",
    "tsconfig": "workspace:*",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.6",
    "webpack": "^5.88.2",
    "webpack-node-externals": "^3.0.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^@repo/core/(.*)$": "<rootDir>/../../packages/core/dist/$1",
      "^@repo/config/(.*)$": "<rootDir>/../../packages/config/dist/$1",
      "^src/(.*)$": "<rootDir>/$1"
    }
  }
}
</file>

</files>
