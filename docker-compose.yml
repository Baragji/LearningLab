version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: learning-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: learninglab_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: learning-api
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://test:test@postgres:5432/learninglab_dev?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
      - SALT_ROUNDS=${SALT_ROUNDS}
      - CORS_ORIGINS=http://localhost:80,http://localhost:3001
      - NODE_ENV=production
      - RUNNING_IN_DOCKER=true
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: learning-web
    environment:
      - PORT=3001
      - NEXT_PUBLIC_API_URL=http://nginx/api
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - api

  nginx:
    image: nginx:alpine
    container_name: learning-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - api
      - web

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
