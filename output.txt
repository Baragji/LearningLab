api:dev: src/controllers/questionBank.controller.ts:95:42 - error TS2551: Property 'questionBank' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'. Did you mean 'question'?
api:dev: 
api:dev: 95     const newQuestionBank = await prisma.questionBank.create({
api:dev:                                             ~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:361:7
api:dev:     361   get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;
api:dev:               ~~~~~~~~
api:dev:     'question' is declared here.
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:133:47 - error TS2551: Property 'questionBank' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'. Did you mean 'question'?
api:dev: 
api:dev: 133     const existingQuestionBank = await prisma.questionBank.findUnique({
api:dev:                                                   ~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:361:7
api:dev:     361   get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;
api:dev:               ~~~~~~~~
api:dev:     'question' is declared here.
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:142:46 - error TS2551: Property 'questionBank' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'. Did you mean 'question'?
api:dev: 
api:dev: 142     const updatedQuestionBank = await prisma.questionBank.update({
api:dev:                                                  ~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:361:7
api:dev:     361   get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;
api:dev:               ~~~~~~~~
api:dev:     'question' is declared here.
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:182:47 - error TS2551: Property 'questionBank' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'. Did you mean 'question'?
api:dev: 
api:dev: 182     const existingQuestionBank = await prisma.questionBank.findUnique({
api:dev:                                                   ~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:361:7
api:dev:     361   get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;
api:dev:               ~~~~~~~~
api:dev:     'question' is declared here.
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:195:18 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 195     await prisma.questionBankItem.updateMany({
api:dev:                      ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:204:18 - error TS2551: Property 'questionBank' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'. Did you mean 'question'?
api:dev: 
api:dev: 204     await prisma.questionBank.update({
api:dev:                      ~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:361:7
api:dev:     361   get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;
api:dev:               ~~~~~~~~
api:dev:     'question' is declared here.
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:251:39 - error TS2551: Property 'questionBank' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'. Did you mean 'question'?
api:dev: 
api:dev: 251     const questionBank = await prisma.questionBank.findUnique({
api:dev:                                           ~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:361:7
api:dev:     361   get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;
api:dev:               ~~~~~~~~
api:dev:     'question' is declared here.
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:269:46 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 269     const newQuestionBankItem = await prisma.questionBankItem.create({
api:dev:                                                  ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:327:43 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 327     const existingQuestion = await prisma.questionBankItem.findUnique({
api:dev:                                               ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:352:42 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 352     const updatedQuestion = await prisma.questionBankItem.update({
api:dev:                                              ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:419:43 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 419     const existingQuestion = await prisma.questionBankItem.findUnique({
api:dev:                                               ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:429:18 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 429     await prisma.questionBankItem.update({
api:dev:                      ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:464:39 - error TS2551: Property 'questionBank' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'. Did you mean 'question'?
api:dev: 
api:dev: 464     const questionBank = await prisma.questionBank.findUnique({
api:dev:                                           ~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:361:7
api:dev:     361   get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;
api:dev:               ~~~~~~~~
api:dev:     'question' is declared here.
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:519:23 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 519         return prisma.questionBankItem.create({
api:dev:                           ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:582:44 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 582     const questionBankItems = await prisma.questionBankItem.findMany({
api:dev:                                                ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:603:13 - error TS2353: Object literal may only specify known properties, and 'type' does not exist in type '(Without<QuestionCreateInput, QuestionUncheckedCreateInput> & QuestionUncheckedCreateInput) | (Without<...> & QuestionCreateInput)'.
api:dev: 
api:dev: 603             type: item.type,
api:dev:                 ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:13351:5
api:dev:     13351     data: XOR<QuestionCreateInput, QuestionUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuestionSelect<DefaultArgs>; omit?: QuestionOmit<DefaultArgs>; include?: QuestionInclude<DefaultArgs>; data: (Without<...> & QuestionUncheckedCreateInput) | (Without<...> & QuestionCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/questionBank.controller.ts:625:17 - error TS2322: Type '{ text: any; isCorrect: any; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type '(Without<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput)'.
api:dev:   Type '{ text: any; isCorrect: any; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput> & AnswerOptionCreateInput'.
api:dev:     Type '{ text: any; isCorrect: any; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput>'.
api:dev:       Types of property 'createdBy' are incompatible.
api:dev:         Type 'number' is not assignable to type 'never'.
api:dev: 
api:dev: 625                 data: {
api:dev:                     ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:14654:5
api:dev:     14654     data: XOR<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: AnswerOptionSelect<DefaultArgs>; omit?: AnswerOptionOmit<DefaultArgs>; include?: AnswerOptionInclude<DefaultArgs>; data: (Without<...> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:281:11 - error TS2353: Object literal may only specify known properties, and 'showAnswers' does not exist in type '(Without<QuizCreateInput, QuizUncheckedCreateInput> & QuizUncheckedCreateInput) | (Without<...> & QuizCreateInput)'.
api:dev: 
api:dev: 281           showAnswers:
api:dev:               ~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:11989:5
api:dev:     11989     data: XOR<QuizCreateInput, QuizUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuizSelect<DefaultArgs>; omit?: QuizOmit<DefaultArgs>; include?: QuizInclude<DefaultArgs>; data: (Without<...> & QuizUncheckedCreateInput) | (Without<...> & QuizCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:378:11 - error TS2353: Object literal may only specify known properties, and 'showAnswers' does not exist in type '(Without<QuizUpdateInput, QuizUncheckedUpdateInput> & QuizUncheckedUpdateInput) | (Without<...> & QuizUpdateInput)'.
api:dev: 
api:dev: 378           showAnswers:
api:dev:               ~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:12046:5
api:dev:     12046     data: XOR<QuizUpdateInput, QuizUncheckedUpdateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuizSelect<DefaultArgs>; omit?: QuizOmit<DefaultArgs>; include?: QuizInclude<DefaultArgs>; data: (Without<...> & QuizUncheckedUpdateInput) | (Without<...> & QuizUpdateInput); where: QuizWhereUniqueInput; relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:381:30 - error TS2339: Property 'showAnswers' does not exist on type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; title: string; description: string; order: number; topicId: number; lessonId: number; ... 4 more ...; randomizeQuestions: boolean; }'.
api:dev: 
api:dev: 381               : existingQuiz.showAnswers,
api:dev:                                  ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:517:11 - error TS2353: Object literal may only specify known properties, and 'type' does not exist in type '(Without<QuestionCreateInput, QuestionUncheckedCreateInput> & QuestionUncheckedCreateInput) | (Without<...> & QuestionCreateInput)'.
api:dev: 
api:dev: 517           type,
api:dev:               ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:13351:5
api:dev:     13351     data: XOR<QuestionCreateInput, QuestionUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuestionSelect<DefaultArgs>; omit?: QuestionOmit<DefaultArgs>; include?: QuestionInclude<DefaultArgs>; data: (Without<...> & QuestionUncheckedCreateInput) | (Without<...> & QuestionCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:526:13 - error TS2322: Type '{ text: string; isCorrect: boolean; questionId: number; }' is not assignable to type '(Without<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput)'.
api:dev:   Type '{ text: string; isCorrect: boolean; questionId: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput> & AnswerOptionCreateInput'.
api:dev:     Type '{ text: string; isCorrect: boolean; questionId: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput>'.
api:dev:       Types of property 'questionId' are incompatible.
api:dev:         Type 'number' is not assignable to type 'never'.
api:dev: 
api:dev: 526             data: {
api:dev:                 ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:14654:5
api:dev:     14654     data: XOR<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: AnswerOptionSelect<DefaultArgs>; omit?: AnswerOptionOmit<DefaultArgs>; include?: AnswerOptionInclude<DefaultArgs>; data: (Without<...> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:543:7 - error TS2741: Property 'type' is missing in type '{ answerOptions: { id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; order: number; text: string; isCorrect: boolean; explanation: string; questionId: number; }[]; } & { ...; }' but required in type 'QuestionDto'.
api:dev: 
api:dev: 543       return questionWithOptions;
api:dev:           ~~~~~~
api:dev: 
api:dev:   src/controllers/dto/quiz/question.dto.ts:38:3
api:dev:     38   type: QuestionType;
api:dev:          ~~~~
api:dev:     'type' is declared here.
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:592:11 - error TS2353: Object literal may only specify known properties, and 'type' does not exist in type '(Without<QuestionUpdateInput, QuestionUncheckedUpdateInput> & QuestionUncheckedUpdateInput) | (Without<...> & QuestionUpdateInput)'.
api:dev: 
api:dev: 592           type: type !== undefined ? type : existingQuestion.type,
api:dev:               ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:13408:5
api:dev:     13408     data: XOR<QuestionUpdateInput, QuestionUncheckedUpdateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuestionSelect<DefaultArgs>; omit?: QuestionOmit<DefaultArgs>; include?: QuestionInclude<DefaultArgs>; data: (Without<...> & QuestionUncheckedUpdateInput) | (Without<...> & QuestionUpdateInput); where: QuestionWhereUniqueInput; relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:592:62 - error TS2339: Property 'type' does not exist on type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; order: number; text: string; quizId: number; points: number; questionType: QuestionType; explanation: string; }'.
api:dev: 
api:dev: 592           type: type !== undefined ? type : existingQuestion.type,
api:dev:                                                                  ~~~~
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:597:7 - error TS2741: Property 'type' is missing in type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; order: number; text: string; quizId: number; points: number; questionType: QuestionType; explanation: string; }' but required in type 'QuestionDto'.
api:dev: 
api:dev: 597       return updatedQuestion;
api:dev:           ~~~~~~
api:dev: 
api:dev:   src/controllers/dto/quiz/question.dto.ts:38:3
api:dev:     38   type: QuestionType;
api:dev:          ~~~~
api:dev:     'type' is declared here.
api:dev: 
api:dev: src/controllers/quiz.controller.nest.ts:715:9 - error TS2322: Type '{ text: string; isCorrect: boolean; questionId: number; }' is not assignable to type '(Without<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput)'.
api:dev:   Type '{ text: string; isCorrect: boolean; questionId: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput> & AnswerOptionCreateInput'.
api:dev:     Type '{ text: string; isCorrect: boolean; questionId: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput>'.
api:dev:       Types of property 'questionId' are incompatible.
api:dev:         Type 'number' is not assignable to type 'never'.
api:dev: 
api:dev: 715         data: {
api:dev:             ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:14654:5
api:dev:     14654     data: XOR<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: AnswerOptionSelect<DefaultArgs>; omit?: AnswerOptionOmit<DefaultArgs>; include?: AnswerOptionInclude<DefaultArgs>; data: (Without<...> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:28:10 - error TS2305: Module '"@prisma/client"' has no exported member 'ProgressStatus'.
api:dev: 
api:dev: 28 import { ProgressStatus } from '@prisma/client';
api:dev:             ~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:62:32 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 62       return await this.prisma.quizAttempt.findMany({
api:dev:                                   ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:111:45 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 111       const quizAttempt = await this.prisma.quizAttempt.findUnique({
api:dev:                                                 ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:205:48 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 205       const newQuizAttempt = await this.prisma.quizAttempt.create({
api:dev:                                                    ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:215:50 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 215       const existingProgress = await this.prisma.userProgress.findFirst({
api:dev:                                                      ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:223:27 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 223         await this.prisma.userProgress.update({
api:dev:                               ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:231:27 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 231         await this.prisma.userProgress.create({
api:dev:                               ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:301:45 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 301       const quizAttempt = await this.prisma.quizAttempt.findUnique({
api:dev:                                                 ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:338:11 - error TS2561: Object literal may only specify known properties, but 'quizAttemptId' does not exist in type 'UserAnswerWhereInput'. Did you mean to write 'userQuizAttemptId'?
api:dev: 
api:dev: 338           quizAttemptId,
api:dev:               ~~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17140:5
api:dev:     17140     where?: UserAnswerWhereInput
api:dev:               ~~~~~
api:dev:     The expected type comes from property 'where' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; ... 6 more ...; relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:345:9 - error TS2741: Property 'quizAttemptId' is missing in type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; isCorrect: boolean; questionId: number; userQuizAttemptId: number; answerOptionId: number; answerText: string; pointsAwarded: number; }' but required in type 'UserAnswerDto'.
api:dev: 
api:dev: 345         return await this.prisma.userAnswer.update({
api:dev:             ~~~~~~
api:dev: 
api:dev:   src/controllers/dto/quiz-attempt/quiz-attempt.dto.ts:325:3
api:dev:     325   quizAttemptId: number;
api:dev:           ~~~~~~~~~~~~~
api:dev:     'quizAttemptId' is declared here.
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:348:13 - error TS2353: Object literal may only specify known properties, and 'selectedAnswerOptionId' does not exist in type '(Without<UserAnswerUpdateInput, UserAnswerUncheckedUpdateInput> & UserAnswerUncheckedUpdateInput) | (Without<...> & UserAnswerUpdateInput)'.
api:dev: 
api:dev: 348             selectedAnswerOptionId: selectedAnswerOptionId || null,
api:dev:                 ~~~~~~~~~~~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17351:5
api:dev:     17351     data: XOR<UserAnswerUpdateInput, UserAnswerUncheckedUpdateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; data: (Without<...> & UserAnswerUncheckedUpdateInput) | (Without<...> & UserAnswerUpdateInput); where: UserAnswerWhereUniqueInput; relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:355:7 - error TS2322: Type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; isCorrect: boolean; questionId: number; userQuizAttemptId: number; answerOptionId: number; answerText: string; pointsAwarded: number; }' is not assignable to type 'UserAnswerDto'.
api:dev: 
api:dev: 355       return await this.prisma.userAnswer.create({
api:dev:           ~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:357:11 - error TS2561: Object literal may only specify known properties, but 'quizAttemptId' does not exist in type '(Without<UserAnswerCreateInput, UserAnswerUncheckedCreateInput> & UserAnswerUncheckedCreateInput) | (Without<...> & UserAnswerCreateInput)'. Did you mean to write 'userQuizAttemptId'?
api:dev: 
api:dev: 357           quizAttemptId,
api:dev:               ~~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17294:5
api:dev:     17294     data: XOR<UserAnswerCreateInput, UserAnswerUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; data: (Without<...> & UserAnswerUncheckedCreateInput) | (Without<...> & UserAnswerCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:416:45 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 416       const quizAttempt = await this.prisma.quizAttempt.findUnique({
api:dev:                                                 ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:475:52 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 475       const updatedQuizAttempt = await this.prisma.quizAttempt.update({
api:dev:                                                        ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.nest.ts:484:25 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 484       await this.prisma.userProgress.updateMany({
api:dev:                             ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:4:24 - error TS2305: Module '"@prisma/client"' has no exported member 'ProgressStatus'.
api:dev: 
api:dev: 4 import { PrismaClient, ProgressStatus } from '@prisma/client';
api:dev:                          ~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:28:39 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 28     const quizAttempts = await prisma.quizAttempt.findMany({
api:dev:                                          ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:67:38 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 67     const quizAttempt = await prisma.quizAttempt.findUnique({
api:dev:                                         ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:144:41 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 144     const newQuizAttempt = await prisma.quizAttempt.create({
api:dev:                                             ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:154:43 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 154     const existingProgress = await prisma.userProgress.findFirst({
api:dev:                                               ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:162:20 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 162       await prisma.userProgress.update({
api:dev:                        ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:170:20 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 170       await prisma.userProgress.create({
api:dev:                        ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:213:38 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 213     const quizAttempt = await prisma.quizAttempt.findUnique({
api:dev:                                          ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:257:9 - error TS2561: Object literal may only specify known properties, but 'quizAttemptId' does not exist in type 'UserAnswerWhereInput'. Did you mean to write 'userQuizAttemptId'?
api:dev: 
api:dev: 257         quizAttemptId,
api:dev:             ~~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17140:5
api:dev:     17140     where?: UserAnswerWhereInput
api:dev:               ~~~~~
api:dev:     The expected type comes from property 'where' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; ... 6 more ...; relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:274:9 - error TS2322: Type '{ selectedAnswerOptionId: any; inputText: any; codeAnswer: any; dragDropAnswer: any; }' is not assignable to type '(Without<UserAnswerUpdateInput, UserAnswerUncheckedUpdateInput> & UserAnswerUncheckedUpdateInput) | (Without<...> & UserAnswerUpdateInput)'.
api:dev: 
api:dev: 274         data: answerData,
api:dev:             ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17351:5
api:dev:     17351     data: XOR<UserAnswerUpdateInput, UserAnswerUncheckedUpdateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; data: (Without<...> & UserAnswerUncheckedUpdateInput) | (Without<...> & UserAnswerUpdateInput); where: UserAnswerWhereUniqueInput; relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:284:9 - error TS2561: Object literal may only specify known properties, but 'quizAttemptId' does not exist in type '(Without<UserAnswerCreateInput, UserAnswerUncheckedCreateInput> & UserAnswerUncheckedCreateInput) | (Without<...> & UserAnswerCreateInput)'. Did you mean to write 'userQuizAttemptId'?
api:dev: 
api:dev: 284         quizAttemptId,
api:dev:             ~~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17294:5
api:dev:     17294     data: XOR<UserAnswerCreateInput, UserAnswerUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; data: (Without<...> & UserAnswerUncheckedCreateInput) | (Without<...> & UserAnswerCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:319:38 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 319     const quizAttempt = await prisma.quizAttempt.findUnique({
api:dev:                                          ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:569:13 - error TS2353: Object literal may only specify known properties, and 'score' does not exist in type '(Without<UserAnswerUpdateInput, UserAnswerUncheckedUpdateInput> & UserAnswerUncheckedUpdateInput) | (Without<...> & UserAnswerUpdateInput)'.
api:dev: 
api:dev: 569             score: answerScore,
api:dev:                 ~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17351:5
api:dev:     17351     data: XOR<UserAnswerUpdateInput, UserAnswerUncheckedUpdateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; data: (Without<...> & UserAnswerUncheckedUpdateInput) | (Without<...> & UserAnswerUpdateInput); where: UserAnswerWhereUniqueInput; relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:599:45 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 599     const updatedQuizAttempt = await prisma.quizAttempt.update({
api:dev:                                                 ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:608:18 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 608     await prisma.userProgress.updateMany({
api:dev:                      ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:624:50 - error TS2339: Property 'certificate' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 624         const existingCertificate = await prisma.certificate.findFirst({
api:dev:                                                      ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/quizAttempt.controller.ts:637:24 - error TS2339: Property 'certificate' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 637           await prisma.certificate.create({
api:dev:                            ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/services/education-program.service.ts:143:68 - error TS2339: Property 'tags' does not exist on type '{ name: string; id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; slug: string; }'.
api:dev: 
api:dev: 143         tags: tags !== undefined ? tags : existingEducationProgram.tags,
api:dev:                                                                        ~~~~
api:dev: 
api:dev: src/controllers/services/education-program.service.ts:144:86 - error TS2339: Property 'categories' does not exist on type '{ name: string; id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; slug: string; }'.
api:dev: 
api:dev: 144         categories: categories !== undefined ? categories : existingEducationProgram.categories,
api:dev:                                                                                          ~~~~~~~~~~
api:dev: 
api:dev: src/controllers/services/education-program.service.ts:145:71 - error TS2339: Property 'image' does not exist on type '{ name: string; id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; slug: string; }'.
api:dev: 
api:dev: 145         image: image !== undefined ? image : existingEducationProgram.image,
api:dev:                                                                           ~~~~~
api:dev: 
api:dev: src/controllers/services/education-program.service.ts:146:74 - error TS2339: Property 'banner' does not exist on type '{ name: string; id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; slug: string; }'.
api:dev: 
api:dev: 146         banner: banner !== undefined ? banner : existingEducationProgram.banner,
api:dev:                                                                              ~~~~~~
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:274:28 - error TS2339: Property 'showAnswers' does not exist on type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; title: string; description: string; order: number; topicId: number; lessonId: number; ... 4 more ...; randomizeQuestions: boolean; }'.
api:dev: 
api:dev: 274             : existingQuiz.showAnswers,
api:dev:                                ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:282:28 - error TS2339: Property 'issueCertificate' does not exist on type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; title: string; description: string; order: number; topicId: number; lessonId: number; ... 4 more ...; randomizeQuestions: boolean; }'.
api:dev: 
api:dev: 282             : existingQuiz.issueCertificate,
api:dev:                                ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:286:28 - error TS2339: Property 'questionBankCategory' does not exist on type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; title: string; description: string; order: number; topicId: number; lessonId: number; ... 4 more ...; randomizeQuestions: boolean; }'.
api:dev: 
api:dev: 286             : existingQuiz.questionBankCategory,
api:dev:                                ~~~~~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:288:80 - error TS2339: Property 'tags' does not exist on type '{ id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; title: string; description: string; order: number; topicId: number; lessonId: number; ... 4 more ...; randomizeQuestions: boolean; }'.
api:dev: 
api:dev: 288           updateQuizDto.tags !== undefined ? updateQuizDto.tags : existingQuiz.tags,
api:dev:                                                                                    ~~~~
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:348:9 - error TS2353: Object literal may only specify known properties, and 'type' does not exist in type '(Without<QuestionCreateInput, QuestionUncheckedCreateInput> & QuestionUncheckedCreateInput) | (Without<...> & QuestionCreateInput)'.
api:dev: 
api:dev: 348         type: type as QuestionType,
api:dev:             ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:13351:5
api:dev:     13351     data: XOR<QuestionCreateInput, QuestionUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuestionSelect<DefaultArgs>; omit?: QuestionOmit<DefaultArgs>; include?: QuestionInclude<DefaultArgs>; data: (Without<...> & QuestionUncheckedCreateInput) | (Without<...> & QuestionCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:362:11 - error TS2322: Type '{ text: string; isCorrect: boolean; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type '(Without<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput)'.
api:dev:   Type '{ text: string; isCorrect: boolean; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput> & AnswerOptionCreateInput'.
api:dev:     Type '{ text: string; isCorrect: boolean; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput>'.
api:dev:       Types of property 'createdBy' are incompatible.
api:dev:         Type 'number' is not assignable to type 'never'.
api:dev: 
api:dev: 362           data: {
api:dev:               ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:14654:5
api:dev:     14654     data: XOR<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: AnswerOptionSelect<DefaultArgs>; omit?: AnswerOptionOmit<DefaultArgs>; include?: AnswerOptionInclude<DefaultArgs>; data: (Without<...> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:419:9 - error TS2353: Object literal may only specify known properties, and 'type' does not exist in type '(Without<QuestionUpdateInput, QuestionUncheckedUpdateInput> & QuestionUncheckedUpdateInput) | (Without<...> & QuestionUpdateInput)'.
api:dev: 
api:dev: 419         type: type !== undefined ? (type as QuestionType) : existingQuestion.type,
api:dev:             ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:13408:5
api:dev:     13408     data: XOR<QuestionUpdateInput, QuestionUncheckedUpdateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuestionSelect<DefaultArgs>; omit?: QuestionOmit<DefaultArgs>; include?: QuestionInclude<DefaultArgs>; data: (Without<...> & QuestionUncheckedUpdateInput) | (Without<...> & QuestionUpdateInput); where: QuestionWhereUniqueInput; relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:419:78 - error TS2339: Property 'type' does not exist on type '{ quiz: { id: number; createdAt: Date; updatedAt: Date; createdBy: number; deletedAt: Date; updatedBy: number; title: string; description: string; order: number; topicId: number; ... 5 more ...; randomizeQuestions: boolean; }; } & { ...; }'.
api:dev: 
api:dev: 419         type: type !== undefined ? (type as QuestionType) : existingQuestion.type,
api:dev:                                                                                  ~~~~
api:dev: 
api:dev: src/controllers/services/quiz.service.ts:492:7 - error TS2322: Type '{ text: string; isCorrect: boolean; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type '(Without<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput)'.
api:dev:   Type '{ text: string; isCorrect: boolean; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput> & AnswerOptionCreateInput'.
api:dev:     Type '{ text: string; isCorrect: boolean; questionId: number; createdBy: number; updatedBy: number; }' is not assignable to type 'Without<AnswerOptionUncheckedCreateInput, AnswerOptionCreateInput>'.
api:dev:       Types of property 'createdBy' are incompatible.
api:dev:         Type 'number' is not assignable to type 'never'.
api:dev: 
api:dev: 492       data: {
api:dev:           ~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:14654:5
api:dev:     14654     data: XOR<AnswerOptionCreateInput, AnswerOptionUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: AnswerOptionSelect<DefaultArgs>; omit?: AnswerOptionOmit<DefaultArgs>; include?: AnswerOptionInclude<DefaultArgs>; data: (Without<...> & AnswerOptionUncheckedCreateInput) | (Without<...> & AnswerOptionCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:28:10 - error TS2305: Module '"@prisma/client"' has no exported member 'ProgressStatus'.
api:dev: 
api:dev: 28 import { ProgressStatus, Role } from '@prisma/client';
api:dev:             ~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:60:32 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 60       return await this.prisma.userProgress.findMany({
api:dev:                                   ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:129:32 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 129       return await this.prisma.userProgress.findMany({
api:dev:                                    ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:194:40 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 194       let progress = await this.prisma.userProgress.findFirst({
api:dev:                                            ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:203:38 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 203         progress = await this.prisma.userProgress.create({
api:dev:                                          ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:273:50 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 273       const existingProgress = await this.prisma.userProgress.findFirst({
api:dev:                                                      ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:281:34 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 281         return await this.prisma.userProgress.update({
api:dev:                                      ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:288:34 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 288         return await this.prisma.userProgress.create({
api:dev:                                      ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:352:50 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 352       const existingProgress = await this.prisma.userProgress.findFirst({
api:dev:                                                      ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:361:38 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 361         progress = await this.prisma.userProgress.update({
api:dev:                                          ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:370:38 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 370         progress = await this.prisma.userProgress.create({
api:dev:                                          ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:383:47 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 383         const quizAttempt = await this.prisma.quizAttempt.create({
api:dev:                                                   ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:394:27 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 394         await this.prisma.userProgress.update({
api:dev:                               ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:405:15 - error TS2561: Object literal may only specify known properties, but 'quizAttemptId' does not exist in type '(Without<UserAnswerCreateInput, UserAnswerUncheckedCreateInput> & UserAnswerUncheckedCreateInput) | (Without<...> & UserAnswerCreateInput)'. Did you mean to write 'userQuizAttemptId'?
api:dev: 
api:dev: 405               quizAttemptId: quizAttempt.id,
api:dev:                   ~~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17294:5
api:dev:     17294     data: XOR<UserAnswerCreateInput, UserAnswerUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; data: (Without<...> & UserAnswerUncheckedCreateInput) | (Without<...> & UserAnswerCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:469:23 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 469           this.prisma.userProgress.findFirst({
api:dev:                           ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:474:23 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 474           this.prisma.userProgress.findFirst({
api:dev:                           ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:595:25 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 595             this.prisma.userProgress.findFirst({
api:dev:                             ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:600:25 - error TS2339: Property 'userProgress' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 600             this.prisma.userProgress.findFirst({
api:dev:                             ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:712:46 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 712       const quizAttempts = await this.prisma.quizAttempt.findMany({
api:dev:                                                  ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:4:24 - error TS2305: Module '"@prisma/client"' has no exported member 'ProgressStatus'.
api:dev: 
api:dev: 4 import { PrismaClient, ProgressStatus } from '@prisma/client';
api:dev:                          ~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:24:35 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 24     const progress = await prisma.userProgress.findMany({
api:dev:                                      ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:82:35 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 82     const progress = await prisma.userProgress.findMany({
api:dev:                                      ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:142:33 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 142     let progress = await prisma.userProgress.findFirst({
api:dev:                                     ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:151:31 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 151       progress = await prisma.userProgress.create({
api:dev:                                   ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:206:43 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 206     const existingProgress = await prisma.userProgress.findFirst({
api:dev:                                               ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:215:31 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 215       progress = await prisma.userProgress.update({
api:dev:                                   ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:222:31 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 222       progress = await prisma.userProgress.create({
api:dev:                                   ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:275:43 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 275     const existingProgress = await prisma.userProgress.findFirst({
api:dev:                                               ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:284:31 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 284       progress = await prisma.userProgress.update({
api:dev:                                   ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:293:31 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 293       progress = await prisma.userProgress.create({
api:dev:                                   ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:306:40 - error TS2339: Property 'quizAttempt' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 306       const quizAttempt = await prisma.quizAttempt.create({
api:dev:                                            ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:316:20 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 316       await prisma.userProgress.update({
api:dev:                        ~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:327:13 - error TS2561: Object literal may only specify known properties, but 'quizAttemptId' does not exist in type '(Without<UserAnswerCreateInput, UserAnswerUncheckedCreateInput> & UserAnswerUncheckedCreateInput) | (Without<...> & UserAnswerCreateInput)'. Did you mean to write 'userQuizAttemptId'?
api:dev: 
api:dev: 327             quizAttemptId: quizAttempt.id,
api:dev:                 ~~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:17294:5
api:dev:     17294     data: XOR<UserAnswerCreateInput, UserAnswerUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: UserAnswerSelect<DefaultArgs>; omit?: UserAnswerOmit<DefaultArgs>; include?: UserAnswerInclude<DefaultArgs>; data: (Without<...> & UserAnswerUncheckedCreateInput) | (Without<...> & UserAnswerCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:386:35 - error TS2339: Property 'userProgress' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 386     const progress = await prisma.userProgress.findMany({
api:dev:                                       ~~~~~~~~~~~~
api:dev: 
api:dev: src/create-test-data.ts:26:9 - error TS2353: Object literal may only specify known properties, and 'description' does not exist in type '(Without<EducationProgramCreateInput, EducationProgramUncheckedCreateInput> & EducationProgramUncheckedCreateInput) | (Without<...> & EducationProgramCreateInput)'.
api:dev: 
api:dev: 26         description: 'A test education program for testing purposes',
api:dev:            ~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:5501:5
api:dev:     5501     data: XOR<EducationProgramCreateInput, EducationProgramUncheckedCreateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: EducationProgramSelect<DefaultArgs>; omit?: EducationProgramOmit<DefaultArgs>; include?: EducationProgramInclude<DefaultArgs>; data: (Without<...> & EducationProgramUncheckedCreateInput) | (Without<...> & EducationProgramCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: src/dto/update-lesson-progress.dto.ts:3:10 - error TS2305: Module '"@prisma/client"' has no exported member 'ProgressStatus'.
api:dev: 
api:dev: 3 import { ProgressStatus } from '@prisma/client'; // Antager at ProgressStatus er i Prisma schema
api:dev:            ~~~~~~~~~~~~~~
api:dev: 
api:dev: src/search/search.controller.ts:22:10 - error TS2305: Module '"@prisma/client"' has no exported member 'Difficulty'.
api:dev: 
api:dev: 22 import { Difficulty, CourseStatus, Role } from '@prisma/client';
api:dev:             ~~~~~~~~~~
api:dev: 
api:dev: src/search/search.controller.ts:22:22 - error TS2305: Module '"@prisma/client"' has no exported member 'CourseStatus'.
api:dev: 
api:dev: 22 import { Difficulty, CourseStatus, Role } from '@prisma/client';
api:dev:                         ~~~~~~~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:4:10 - error TS2305: Module '"@prisma/client"' has no exported member 'Difficulty'.
api:dev: 
api:dev: 4 import { Difficulty, CourseStatus, Prisma } from '@prisma/client';
api:dev:            ~~~~~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:4:22 - error TS2305: Module '"@prisma/client"' has no exported member 'CourseStatus'.
api:dev: 
api:dev: 4 import { Difficulty, CourseStatus, Prisma } from '@prisma/client';
api:dev:                        ~~~~~~~~~~~~
api:dev: 
api:dev: src/services/question-import.service.ts:4:24 - error TS2305: Module '"@prisma/client"' has no exported member 'Difficulty'.
api:dev: 
api:dev: 4 import { QuestionType, Difficulty } from '@prisma/client';
api:dev:                          ~~~~~~~~~~
api:dev: 
api:dev: src/services/question-import.service.ts:318:44 - error TS2551: Property 'questionBank' does not exist on type 'PrismaService'. Did you mean 'question'?
api:dev: 
api:dev: 318     const questionBank = await this.prisma.questionBank.findUnique({
api:dev:                                                ~~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:361:7
api:dev:     361   get question(): Prisma.QuestionDelegate<ExtArgs, ClientOptions>;
api:dev:               ~~~~~~~~
api:dev:     'question' is declared here.
api:dev: 
api:dev: src/services/question-import.service.ts:329:51 - error TS2339: Property 'questionBankItem' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 329         const createdQuestion = await this.prisma.questionBankItem.create({
api:dev:                                                       ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/test-quiz-fields.ts:32:9 - error TS2353: Object literal may only specify known properties, and 'showAnswers' does not exist in type '(Without<QuizCreateInput, QuizUncheckedCreateInput> & QuizUncheckedCreateInput) | (Without<...> & QuizCreateInput)'.
api:dev: 
api:dev: 32         showAnswers: false,
api:dev:            ~~~~~~~~~~~
api:dev: 
api:dev:   node_modules/.prisma/client/index.d.ts:11989:5
api:dev:     11989     data: XOR<QuizCreateInput, QuizUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuizSelect<DefaultArgs>; omit?: QuizOmit<DefaultArgs>; include?: QuizInclude<DefaultArgs>; data: (Without<...> & QuizUncheckedCreateInput) | (Without<...> & QuizCreateInput); relationLoadStrategy?: RelationLoadStrategy; }'
api:dev: 
api:dev: [5:49:17 PM] Found 143 errors. Watching for file changes.
api:dev: 
^C    ...Finishing writing to cache...                                                                               
web:dev: 
 ERROR  run failed: command  exited (1)                                                                              
Yousef@MacBook-Pro-tilhrende-Yousef LearningLab % 