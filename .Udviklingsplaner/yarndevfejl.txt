api:dev: âœ” Generated Prisma Client (v5.22.0) to ./../../node_modules/@prisma/client in 227ms
api:dev: 
api:dev: Start by importing your Prisma Client (See: https://pris.ly/d/importing-client)
api:dev: 
api:dev: Tip: Easily identify and fix slow SQL queries in your app. Optimize helps you enhance your visibility: https://pris.ly/--optimize
api:dev: 
web:dev: - event compiled client and server successfully in 414 ms (20 modules)
web:dev: - wait compiling...
web:dev: - event compiled client and server successfully in 111 ms (20 modules)
api:dev: [12:10:22 PM] Starting compilation in watch mode...
api:dev: 
api:dev: src/controllers/course.controller.ts:19:9 - error TS2353: Object literal may only specify known properties, and 'subjectArea' does not exist in type 'CourseInclude<DefaultArgs>'.
api:dev: 
api:dev: 19         subjectArea: true,
api:dev:            ~~~~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6776:5
api:dev:     6776     include?: CourseInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where?: CourseWhereInput; ... 4 more ...; distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]; }'
api:dev: 
api:dev: src/controllers/course.controller.ts:44:16 - error TS2353: Object literal may only specify known properties, and 'subjectAreaId' does not exist in type 'CourseWhereInput'.
api:dev: 
api:dev: 44       where: { subjectAreaId: Number(subjectAreaId) },
api:dev:                   ~~~~~~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6780:5
api:dev:     6780     where?: CourseWhereInput
api:dev:              ~~~~~
api:dev:     The expected type comes from property 'where' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where?: CourseWhereInput; ... 4 more ...; distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]; }'
api:dev: 
api:dev: src/controllers/course.controller.ts:73:9 - error TS2353: Object literal may only specify known properties, and 'subjectArea' does not exist in type 'CourseInclude<DefaultArgs>'.
api:dev: 
api:dev: 73         subjectArea: true,
api:dev:            ~~~~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6644:5
api:dev:     6644     include?: CourseInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where: CourseWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/course.controller.ts:107:9 - error TS2353: Object literal may only specify known properties, and 'subjectArea' does not exist in type 'CourseInclude<DefaultArgs>'.
api:dev: 
api:dev: 107         subjectArea: true,
api:dev:             ~~~~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6644:5
api:dev:     6644     include?: CourseInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where: CourseWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/course.controller.ts:140:38 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 140     const subjectArea = await prisma.subjectArea.findUnique({
api:dev:                                          ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/course.controller.ts:166:9 - error TS2353: Object literal may only specify known properties, and 'subjectAreaId' does not exist in type '(Without<CourseCreateInput, CourseUncheckedCreateInput> & CourseUncheckedCreateInput) | (Without<...> & CourseCreateInput)'.
api:dev: 
api:dev: 166         subjectAreaId,
api:dev:             ~~~~~~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6823:5
api:dev:     6823     data: XOR<CourseCreateInput, CourseUncheckedCreateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; data: (Without<CourseCreateInput, CourseUncheckedCreateInput> & CourseUncheckedCreateInput) | (Without<...> & CourseCreateInput); }'
api:dev: 
api:dev: src/controllers/course.controller.ts:201:59 - error TS2339: Property 'subjectAreaId' does not exist on type '{ description: string; title: string; id: number; slug: string; educationProgramId: number; createdAt: Date; updatedAt: Date; tags: string[]; difficulty: Difficulty; estimatedHours: number; ... 5 more ...; updatedBy: number; }'.
api:dev: 
api:dev: 201     if (subjectAreaId && subjectAreaId !== existingCourse.subjectAreaId) {
api:dev:                                                               ~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/course.controller.ts:202:40 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 202       const subjectArea = await prisma.subjectArea.findUnique({
api:dev:                                            ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/course.controller.ts:232:9 - error TS2353: Object literal may only specify known properties, and 'subjectAreaId' does not exist in type '(Without<CourseUpdateInput, CourseUncheckedUpdateInput> & CourseUncheckedUpdateInput) | (Without<...> & CourseUpdateInput)'.
api:dev: 
api:dev: 232         subjectAreaId: subjectAreaId || existingCourse.subjectAreaId,
api:dev:             ~~~~~~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6871:5
api:dev:     6871     data: XOR<CourseUpdateInput, CourseUncheckedUpdateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; data: (Without<CourseUpdateInput, CourseUncheckedUpdateInput> & CourseUncheckedUpdateInput) | (Without<...> & CourseUpdateInput); where: CourseWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/course.controller.ts:232:56 - error TS2339: Property 'subjectAreaId' does not exist on type '{ description: string; title: string; id: number; slug: string; educationProgramId: number; createdAt: Date; updatedAt: Date; tags: string[]; difficulty: Difficulty; estimatedHours: number; ... 5 more ...; updatedBy: number; }'.
api:dev: 
api:dev: 232         subjectAreaId: subjectAreaId || existingCourse.subjectAreaId,
api:dev:                                                            ~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/course.controller.ts:258:18 - error TS2353: Object literal may only specify known properties, and 'modules' does not exist in type 'CourseInclude<DefaultArgs>'.
api:dev: 
api:dev: 258       include: { modules: true },
api:dev:                      ~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6644:5
api:dev:     6644     include?: CourseInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where: CourseWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/course.controller.ts:267:24 - error TS2339: Property 'modules' does not exist on type '{ description: string; title: string; id: number; slug: string; educationProgramId: number; createdAt: Date; updatedAt: Date; tags: string[]; difficulty: Difficulty; estimatedHours: number; ... 5 more ...; updatedBy: number; }'.
api:dev: 
api:dev: 267     if (existingCourse.modules.length > 0) {
api:dev:                            ~~~~~~~
api:dev: 
api:dev: src/controllers/educationProgram.controller.ts:5:10 - error TS2305: Module '"@repo/core"' has no exported member 'CreateEducationProgramInput'.
api:dev: 
api:dev: 5 import { CreateEducationProgramInput } from '@repo/core';
api:dev:            ~~~~~~~~~~~~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/educationProgram.controller.ts:124:9 - error TS2353: Object literal may only specify known properties, and 'title' does not exist in type '(Without<EducationProgramCreateInput, EducationProgramUncheckedCreateInput> & EducationProgramUncheckedCreateInput) | (Without<...> & EducationProgramCreateInput)'.
api:dev: 
api:dev: 124         title,
api:dev:             ~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:5644:5
api:dev:     5644     data: XOR<EducationProgramCreateInput, EducationProgramUncheckedCreateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: EducationProgramSelect<DefaultArgs>; include?: EducationProgramInclude<DefaultArgs>; data: (Without<...> & EducationProgramUncheckedCreateInput) | (Without<...> & EducationProgramCreateInput); }'
api:dev: 
api:dev: src/controllers/educationProgram.controller.ts:177:9 - error TS2353: Object literal may only specify known properties, and 'title' does not exist in type '(Without<EducationProgramUpdateInput, EducationProgramUncheckedUpdateInput> & EducationProgramUncheckedUpdateInput) | (Without<...> & EducationProgramUpdateInput)'.
api:dev: 
api:dev: 177         title: title || existingEducationProgram.title,
api:dev:             ~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:5692:5
api:dev:     5692     data: XOR<EducationProgramUpdateInput, EducationProgramUncheckedUpdateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: EducationProgramSelect<DefaultArgs>; include?: EducationProgramInclude<DefaultArgs>; data: (Without<...> & EducationProgramUncheckedUpdateInput) | (Without<...> & EducationProgramUpdateInput); where: EducationProgramWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/educationProgram.controller.ts:177:50 - error TS2339: Property 'title' does not exist on type '{ name: string; description: string; id: number; slug: string; createdAt: Date; updatedAt: Date; tags: string[]; image: string; banner: string; deletedAt: Date; createdBy: number; updatedBy: number; categories: string[]; }'.
api:dev: 
api:dev: 177         title: title || existingEducationProgram.title,
api:dev:                                                      ~~~~~
api:dev: 
api:dev: src/controllers/lesson.controller.ts:20:16 - error TS2353: Object literal may only specify known properties, and 'moduleId' does not exist in type 'LessonWhereInput'.
api:dev: 
api:dev: 20       where: { moduleId: Number(moduleId) },
api:dev:                   ~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:9034:5
api:dev:     9034     where?: LessonWhereInput
api:dev:              ~~~~~
api:dev:     The expected type comes from property 'where' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; where?: LessonWhereInput; ... 4 more ...; distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]; }'
api:dev: 
api:dev: src/controllers/lesson.controller.ts:49:9 - error TS2353: Object literal may only specify known properties, and 'module' does not exist in type 'LessonInclude<DefaultArgs>'.
api:dev: 
api:dev: 49         module: {
api:dev:            ~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:8898:5
api:dev:     8898     include?: LessonInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; where: LessonWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/lesson.controller.ts:90:33 - error TS2339: Property 'module' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 90     const module = await prisma.module.findUnique({
api:dev:                                    ~~~~~~
api:dev: 
api:dev: src/controllers/lesson.controller.ts:103:18 - error TS2353: Object literal may only specify known properties, and 'moduleId' does not exist in type 'LessonWhereInput'.
api:dev: 
api:dev: 103         where: { moduleId },
api:dev:                      ~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:8938:5
api:dev:     8938     where?: LessonWhereInput
api:dev:              ~~~~~
api:dev:     The expected type comes from property 'where' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; where?: LessonWhereInput; ... 4 more ...; distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]; }'
api:dev: 
api:dev: src/controllers/lesson.controller.ts:115:9 - error TS2353: Object literal may only specify known properties, and 'moduleId' does not exist in type '(Without<LessonCreateInput, LessonUncheckedCreateInput> & LessonUncheckedCreateInput) | (Without<...> & LessonCreateInput)'.
api:dev: 
api:dev: 115         moduleId,
api:dev:             ~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:9077:5
api:dev:     9077     data: XOR<LessonCreateInput, LessonUncheckedCreateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; data: (Without<LessonCreateInput, LessonUncheckedCreateInput> & LessonUncheckedCreateInput) | (Without<...> & LessonCreateInput); }'
api:dev: 
api:dev: src/controllers/lesson.controller.ts:150:49 - error TS2339: Property 'moduleId' does not exist on type '{ description: string; title: string; id: number; createdAt: Date; updatedAt: Date; deletedAt: Date; createdBy: number; updatedBy: number; order: number; topicId: number; }'.
api:dev: 
api:dev: 150     if (moduleId && moduleId !== existingLesson.moduleId) {
api:dev:                                                     ~~~~~~~~
api:dev: 
api:dev: src/controllers/lesson.controller.ts:151:35 - error TS2339: Property 'module' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 151       const module = await prisma.module.findUnique({
api:dev:                                       ~~~~~~
api:dev: 
api:dev: src/controllers/lesson.controller.ts:167:9 - error TS2353: Object literal may only specify known properties, and 'moduleId' does not exist in type '(Without<LessonUpdateInput, LessonUncheckedUpdateInput> & LessonUncheckedUpdateInput) | (Without<...> & LessonUpdateInput)'.
api:dev: 
api:dev: 167         moduleId: moduleId || existingLesson.moduleId,
api:dev:             ~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:9125:5
api:dev:     9125     data: XOR<LessonUpdateInput, LessonUncheckedUpdateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; data: (Without<LessonUpdateInput, LessonUncheckedUpdateInput> & LessonUncheckedUpdateInput) | (Without<...> & LessonUpdateInput); where: LessonWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/lesson.controller.ts:167:46 - error TS2339: Property 'moduleId' does not exist on type '{ description: string; title: string; id: number; createdAt: Date; updatedAt: Date; deletedAt: Date; createdBy: number; updatedBy: number; order: number; topicId: number; }'.
api:dev: 
api:dev: 167         moduleId: moduleId || existingLesson.moduleId,
api:dev:                                                  ~~~~~~~~
api:dev: 
api:dev: src/controllers/lesson.controller.ts:199:33 - error TS2339: Property 'module' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 199     const module = await prisma.module.findUnique({
api:dev:                                     ~~~~~~
api:dev: 
api:dev: src/controllers/lesson.controller.ts:233:16 - error TS2353: Object literal may only specify known properties, and 'moduleId' does not exist in type 'LessonWhereInput'.
api:dev: 
api:dev: 233       where: { moduleId: Number(moduleId) },
api:dev:                    ~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:9034:5
api:dev:     9034     where?: LessonWhereInput
api:dev:              ~~~~~
api:dev:     The expected type comes from property 'where' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; where?: LessonWhereInput; ... 4 more ...; distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]; }'
api:dev: 
api:dev: src/controllers/lesson.controller.ts:288:16 - error TS2353: Object literal may only specify known properties, and 'moduleId' does not exist in type 'LessonWhereInput'.
api:dev: 
api:dev: 288       where: { moduleId: existingLesson.moduleId },
api:dev:                    ~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:9034:5
api:dev:     9034     where?: LessonWhereInput
api:dev:              ~~~~~
api:dev:     The expected type comes from property 'where' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; where?: LessonWhereInput; ... 4 more ...; distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]; }'
api:dev: 
api:dev: src/controllers/lesson.controller.ts:288:41 - error TS2339: Property 'moduleId' does not exist on type '{ quizzes: { description: string; title: string; id: number; createdAt: Date; updatedAt: Date; tags: string[]; deletedAt: Date; createdBy: number; updatedBy: number; topicId: number; ... 7 more ...; questionBankCategory: string; }[]; contentBlocks: { ...; }[]; } & { ...; }'.
api:dev: 
api:dev: 288       where: { moduleId: existingLesson.moduleId },
api:dev:                                             ~~~~~~~~
api:dev: 
api:dev: src/controllers/modules.module.ts:3:34 - error TS2307: Cannot find module './module.controller.nest' or its corresponding type declarations.
api:dev: 
api:dev: 3 import { ModuleController } from './module.controller.nest';
api:dev:                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/services/topic.service.ts:188:23 - error TS2339: Property 'lessons' does not exist on type '{ id: number; title: string; description: string; order: number; courseId: number; createdAt: Date; updatedAt: Date; deletedAt: Date; createdBy: number; updatedBy: number; }'.
api:dev: 
api:dev: 188     if (existingTopic.lessons.length > 0 || existingTopic.quizzes.length > 0) {
api:dev:                           ~~~~~~~
api:dev: 
api:dev: src/controllers/services/topic.service.ts:188:59 - error TS2339: Property 'quizzes' does not exist on type '{ id: number; title: string; description: string; order: number; courseId: number; createdAt: Date; updatedAt: Date; deletedAt: Date; createdBy: number; updatedBy: number; }'.
api:dev: 
api:dev: 188     if (existingTopic.lessons.length > 0 || existingTopic.quizzes.length > 0) {
api:dev:                                                               ~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.nest.updated.ts:41:8 - error TS2307: Cannot find module './dto/subject-area/subject-area.dto' or its corresponding type declarations.
api:dev: 
api:dev: 41 } from './dto/subject-area/subject-area.dto';
api:dev:           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.nest.updated.ts:42:36 - error TS2307: Cannot find module './services/subject-area.service' or its corresponding type declarations.
api:dev: 
api:dev: 42 import { SubjectAreaService } from './services/subject-area.service';
api:dev:                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:17:39 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 17     const subjectAreas = await prisma.subjectArea.findMany({
api:dev:                                          ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:40:38 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 40     const subjectArea = await prisma.subjectArea.findUnique({
api:dev:                                         ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:69:38 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 69     const subjectArea = await prisma.subjectArea.findUnique({
api:dev:                                         ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:99:46 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 99     const existingSubjectArea = await prisma.subjectArea.findUnique({
api:dev:                                                 ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:110:41 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 110     const newSubjectArea = await prisma.subjectArea.create({
api:dev:                                             ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:138:46 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 138     const existingSubjectArea = await prisma.subjectArea.findUnique({
api:dev:                                                  ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:149:39 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 149       const slugExists = await prisma.subjectArea.findUnique({
api:dev:                                           ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:161:45 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 161     const updatedSubjectArea = await prisma.subjectArea.update({
api:dev:                                                 ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:189:46 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 189     const existingSubjectArea = await prisma.subjectArea.findUnique({
api:dev:                                                  ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/subjectArea.controller.ts:208:18 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 208     await prisma.subjectArea.delete({
api:dev:                      ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:67:19 - error TS2353: Object literal may only specify known properties, and 'emne' does not exist in type 'TopicInclude<DefaultArgs>'.
api:dev: 
api:dev: 67                   emne: {
api:dev:                      ~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:140:19 - error TS2353: Object literal may only specify known properties, and 'emne' does not exist in type 'TopicInclude<DefaultArgs>'.
api:dev: 
api:dev: 140                   emne: {
api:dev:                       ~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:461:11 - error TS2353: Object literal may only specify known properties, and 'emner' does not exist in type 'CourseInclude<DefaultArgs>'.
api:dev: 
api:dev: 461           emner: {
api:dev:               ~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6644:5
api:dev:     6644     include?: CourseInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where: CourseWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:480:39 - error TS2339: Property 'emner' does not exist on type '{ id: number; title: string; description: string; createdAt: Date; updatedAt: Date; deletedAt: Date; createdBy: number; updatedBy: number; slug: string; educationProgramId: number; ... 5 more ...; banner: string; }'.
api:dev: 
api:dev: 480       const progressPromises = course.emner.flatMap((emne) =>
api:dev:                                           ~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:502:14 - error TS2339: Property 'emner' does not exist on type '{ id: number; title: string; description: string; createdAt: Date; updatedAt: Date; deletedAt: Date; createdBy: number; updatedBy: number; slug: string; educationProgramId: number; ... 5 more ...; banner: string; }'.
api:dev: 
api:dev: 502       course.emner.forEach((emne) => {
api:dev:                  ~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:530:9 - error TS2353: Object literal may only specify known properties, and 'courseTitle' does not exist in type 'CourseProgressDto'.
api:dev: 
api:dev: 530         courseTitle: course.title,
api:dev:             ~~~~~~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:575:11 - error TS2353: Object literal may only specify known properties, and 'emner' does not exist in type 'CourseInclude<DefaultArgs>'.
api:dev: 
api:dev: 575           emner: {
api:dev:               ~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6776:5
api:dev:     6776     include?: CourseInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where?: CourseWhereInput; ... 4 more ...; distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]; }'
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:597:41 - error TS2339: Property 'emner' does not exist on type '{ id: number; title: string; description: string; createdAt: Date; updatedAt: Date; deletedAt: Date; createdBy: number; updatedBy: number; slug: string; educationProgramId: number; ... 5 more ...; banner: string; }'.
api:dev: 
api:dev: 597         const progressPromises = course.emner.flatMap((emne) =>
api:dev:                                             ~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:613:16 - error TS2339: Property 'emner' does not exist on type '{ id: number; title: string; description: string; createdAt: Date; updatedAt: Date; deletedAt: Date; createdBy: number; updatedBy: number; slug: string; educationProgramId: number; ... 5 more ...; banner: string; }'.
api:dev: 
api:dev: 613         course.emner.forEach((emne) => {
api:dev:                    ~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.nest.ts:650:7 - error TS2322: Type '{ courseId: number; courseTitle: string; totalLessons: number; completedLessons: number; totalQuizzes: number; completedQuizzes: number; overallProgress: number; }[]' is not assignable to type 'CourseProgressDto[]'.
api:dev:   Type '{ courseId: number; courseTitle: string; totalLessons: number; completedLessons: number; totalQuizzes: number; completedQuizzes: number; overallProgress: number; }' is missing the following properties from type 'CourseProgressDto': totalItems, completedItems, inProgressItems, percentageComplete, status
api:dev: 
api:dev: 650       return Promise.all(courseProgressPromises);
api:dev:           ~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:29:13 - error TS2353: Object literal may only specify known properties, and 'module' does not exist in type 'LessonInclude<DefaultArgs>'.
api:dev: 
api:dev: 29             module: {
api:dev:                ~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:87:13 - error TS2353: Object literal may only specify known properties, and 'module' does not exist in type 'LessonInclude<DefaultArgs>'.
api:dev: 
api:dev: 87             module: {
api:dev:                ~~~~~~
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:362:9 - error TS2353: Object literal may only specify known properties, and 'modules' does not exist in type 'CourseInclude<DefaultArgs>'.
api:dev: 
api:dev: 362         modules: {
api:dev:             ~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6644:5
api:dev:     6644     include?: CourseInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where: CourseWhereUniqueInput; }'
api:dev: 
api:dev: src/controllers/userProgress.controller.ts:380:12 - error TS2339: Property 'modules' does not exist on type '{ description: string; title: string; id: number; slug: string; educationProgramId: number; createdAt: Date; updatedAt: Date; tags: string[]; difficulty: Difficulty; estimatedHours: number; ... 5 more ...; updatedBy: number; }'.
api:dev: 
api:dev: 380     course.modules.forEach((module) => {
api:dev:                ~~~~~~~
api:dev: 
api:dev: src/create-test-data.ts:22:38 - error TS2339: Property 'subjectArea' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 22     const subjectArea = await prisma.subjectArea.create({
api:dev:                                         ~~~~~~~~~~~
api:dev: 
api:dev: src/create-test-data.ts:39:9 - error TS2353: Object literal may only specify known properties, and 'subjectAreaId' does not exist in type '(Without<CourseCreateInput, CourseUncheckedCreateInput> & CourseUncheckedCreateInput) | (Without<...> & CourseCreateInput)'.
api:dev: 
api:dev: 39         subjectAreaId: subjectArea.id,
api:dev:            ~~~~~~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6823:5
api:dev:     6823     data: XOR<CourseCreateInput, CourseUncheckedCreateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; data: (Without<CourseCreateInput, CourseUncheckedCreateInput> & CourseUncheckedCreateInput) | (Without<...> & CourseCreateInput); }'
api:dev: 
api:dev: src/create-test-data.ts:47:33 - error TS2339: Property 'module' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 47     const module = await prisma.module.create({
api:dev:                                    ~~~~~~
api:dev: 
api:dev: src/create-test-data.ts:65:9 - error TS2353: Object literal may only specify known properties, and 'moduleId' does not exist in type '(Without<LessonCreateInput, LessonUncheckedCreateInput> & LessonUncheckedCreateInput) | (Without<...> & LessonCreateInput)'.
api:dev: 
api:dev: 65         moduleId: module.id,
api:dev:            ~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:9077:5
api:dev:     9077     data: XOR<LessonCreateInput, LessonUncheckedCreateInput>
api:dev:              ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; data: (Without<LessonCreateInput, LessonUncheckedCreateInput> & LessonUncheckedCreateInput) | (Without<...> & LessonCreateInput); }'
api:dev: 
api:dev: src/routes/pensum.routes.ts:6:35 - error TS2307: Cannot find module '../controllers/module.controller' or its corresponding type declarations.
api:dev: 
api:dev: 6 import * as moduleController from '../controllers/module.controller';
api:dev:                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/routes/pensum.routes.ts:45:20 - error TS2339: Property 'getCoursesByEducationProgram' does not exist on type 'typeof import("/Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/apps/api/src/controllers/course.controller")'.
api:dev: 
api:dev: 45   courseController.getCoursesByEducationProgram,
api:dev:                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:69:11 - error TS2353: Object literal may only specify known properties, and 'subjectArea' does not exist in type 'CourseInclude<DefaultArgs>'.
api:dev: 
api:dev: 69           subjectArea: {
api:dev:              ~~~~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:6776:5
api:dev:     6776     include?: CourseInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: CourseSelect<DefaultArgs>; include?: CourseInclude<DefaultArgs>; where?: CourseWhereInput; ... 4 more ...; distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]; }'
api:dev: 
api:dev: src/search/search.service.ts:103:33 - error TS2724: '"/Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/node_modules/.prisma/client/index".Prisma' has no exported member named 'ModuleWhereInput'. Did you mean 'CourseWhereInput'?
api:dev: 
api:dev: 103       const moduleWhere: Prisma.ModuleWhereInput = {
api:dev:                                     ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:125:35 - error TS2339: Property 'module' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 125       modules = await this.prisma.module.findMany({
api:dev:                                       ~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:160:35 - error TS2339: Property 'module' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 160         total = await this.prisma.module.count({
api:dev:                                       ~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:185:9 - error TS2353: Object literal may only specify known properties, and 'module' does not exist in type 'LessonWhereInput'.
api:dev: 
api:dev: 185         module: {
api:dev:             ~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:205:11 - error TS2353: Object literal may only specify known properties, and 'module' does not exist in type 'LessonInclude<DefaultArgs>'.
api:dev: 
api:dev: 205           module: {
api:dev:               ~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:9030:5
api:dev:     9030     include?: LessonInclude<ExtArgs> | null
api:dev:              ~~~~~~~
api:dev:     The expected type comes from property 'include' which is declared here on type '{ select?: LessonSelect<DefaultArgs>; include?: LessonInclude<DefaultArgs>; where?: LessonWhereInput; ... 4 more ...; distinct?: LessonScalarFieldEnum | LessonScalarFieldEnum[]; }'
api:dev: 
api:dev: src/search/search.service.ts:256:33 - error TS2724: '"/Users/Yousef_1/Dokumenter/Kodefiler/Ejaztemplate/LearningLab/LearningLab/node_modules/.prisma/client/index".Prisma' has no exported member named 'ModuleWhereInput'. Did you mean 'CourseWhereInput'?
api:dev: 
api:dev: 256       const moduleWhere: Prisma.ModuleWhereInput = {
api:dev:                                     ~~~~~~~~~~~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:278:46 - error TS2339: Property 'module' does not exist on type 'PrismaService'.
api:dev: 
api:dev: 278       const modulesCount = await this.prisma.module.count({
api:dev:                                                  ~~~~~~
api:dev: 
api:dev: src/search/search.service.ts:298:9 - error TS2353: Object literal may only specify known properties, and 'module' does not exist in type 'LessonWhereInput'.
api:dev: 
api:dev: 298         module: {
api:dev:             ~~~~~~
api:dev: 
api:dev: src/test-quiz-fields.ts:11:33 - error TS2339: Property 'module' does not exist on type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>'.
api:dev: 
api:dev: 11     const module = await prisma.module.findFirst({
api:dev:                                    ~~~~~~
api:dev: 
api:dev: src/test-quiz-fields.ts:28:9 - error TS2353: Object literal may only specify known properties, and 'moduleId' does not exist in type '(Without<QuizCreateInput, QuizUncheckedCreateInput> & QuizUncheckedCreateInput) | (Without<...> & QuizCreateInput)'.
api:dev: 
api:dev: 28         moduleId: module.id,
api:dev:            ~~~~~~~~
api:dev: 
api:dev:   ../../node_modules/.prisma/client/index.d.ts:11435:5
api:dev:     11435     data: XOR<QuizCreateInput, QuizUncheckedCreateInput>
api:dev:               ~~~~
api:dev:     The expected type comes from property 'data' which is declared here on type '{ select?: QuizSelect<DefaultArgs>; include?: QuizInclude<DefaultArgs>; data: (Without<QuizCreateInput, QuizUncheckedCreateInput> & QuizUncheckedCreateInput) | (Without<...> & QuizCreateInput); }'
api:dev: 
api:dev: [12:10:25 PM] Found 75 errors. Watching for file changes.
api:dev: 
