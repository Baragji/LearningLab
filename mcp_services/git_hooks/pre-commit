#!/usr/bin/env bash
#
# 🔧 Git Pre-Commit Hook for LearningLab
#   - Kører kodeformatering (Black/Prettier)
#   - Kører linte-checks (flake8, ESLint)
#   - Kører unit tests (om muligt)
#   - Genindekserer RAG (index_code_chunks.py)
#   - Forhindrer commit hvis alvorlige fejl
#

# ----------------------------------------
# Funktioner
# ----------------------------------------

# Udskrivning af farver
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Skift til projektens rod
PROJECT_ROOT=$(git rev-parse --show-toplevel)
cd "$PROJECT_ROOT" || exit 1

echo -e "${YELLOW}🔍 Kører Git pre-commit checks...${NC}"

# 1) Kør Python-format (Black) og -lint (flake8)
if command -v black >/dev/null 2>&1; then
  echo -e "${GREEN}🪄 Formaterer Python-kode med Black...${NC}"
  black --quiet .
else
  echo -e "${YELLOW}⚠️ Black ikke installeret – springer format over${NC}"
fi

if command -v flake8 >/dev/null 2>&1; then
  echo -e "${GREEN}🔍 Kører flake8 (Python lint)...${NC}"
  flake8 .
  if [ $? -ne 0 ]; then
    echo -e "${RED}❌ flake8 fandt problemer. Fix inden commit!${NC}"
    exit 1
  fi
else
  echo -e "${YELLOW}⚠️ flake8 ikke installeret – springer lint over${NC}"
fi

# 2) Kør JS/TS-format (Prettier) og -lint (ESLint)
if command -v npm >/dev/null 2>&1; then
  if [ -f "package.json" ]; then
    echo -e "${GREEN}🛠️ Kører Prettier + ESLint for JS/TS...${NC}"
    npm run prettier -- --check . 2>/dev/null
    if [ $? -ne 0 ]; then
      echo -e "${RED}❌ Prettier-formattingfejl. Kør 'npm run prettier -- --write .'${NC}"
      exit 1
    fi

    npm run lint 2>/dev/null
    if [ $? -ne 0 ]; then
      echo -e "${RED}❌ ESLint fandt problemer. Fix inden commit!${NC}"
      exit 1
    fi
  fi
else
  echo -e "${YELLOW}⚠️ npm ikke tilgængeligt – springer JS/TS-lint over${NC}"
fi

# 3) Kør unit tests (hvis tilgængelig)
if command -v pytest >/dev/null 2>&1; then
  if [ -d "tests" ]; then
    echo -e "${GREEN}🧪 Kører Python unit tests med pytest...${NC}"
    pytest --maxfail=1 --disable-warnings -q
    if [ $? -ne 0 ]; then
      echo -e "${RED}❌ Unit tests fejlede. Fix inden commit!${NC}"
      exit 1
    fi
  fi
fi

if command -v npm >/dev/null 2>&1; then
  if [ -f "package.json" ] && grep -q "\"test\":" package.json; then
    echo -e "${GREEN}🧪 Kører JS/TS unit tests med npm test...${NC}"
    npm test -- --bail --silent
    if [ $? -ne 0 ]; then
      echo -e "${RED}❌ JS/TS tests fejlede. Fix inden commit!${NC}"
      exit 1
    fi
  fi
fi

# 4) Genindeksering af RAG (ChromaDB)
echo -e "${YELLOW}🔄 Opdaterer ChromaDB RAG-indeks...${NC}"
if [ -f "scripts/index_code_chunks.py" ]; then
  python3 scripts/index_code_chunks.py
  if [ $? -eq 0 ]; then
    echo -e "${GREEN}✅ RAG-indeks opdateret${NC}"
  else
    echo -e "${RED}⚠️ Fejl ved opdatering af RAG-indeks – commit fortsætter alligevel${NC}"
  fi
else
  echo -e "${YELLOW}⚠️ scripts/index_code_chunks.py ikke fundet – springer indeksering over${NC}"
fi

# 5) Tilføj evt. andre custom checks her (f.eks. sikkerheds-scanning)

echo -e "${GREEN}🎉 Alle pre-commit checks bestået! Du kan committe nu.${NC}"
exit 0
