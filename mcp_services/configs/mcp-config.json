{
  "$schema": "https://schema.anthropic.com/mcp/config.json",
  "version": "1.0.0",
  "description": "MCP Server Configuration for LearningLab Platform (avanceret/optimeret)",

  "servers": {
    "filesystem": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-filesystem", "./"],
      "env": {
        "MCP_FILESYSTEM_ALLOWED_DIRS": "./apps,./packages,./docs,./scripts"
      },
      "description": "File system access for uploads and material management",
      "phase": "1",
      "priority": "high",
      "healthcheck": {
        "cmd": ["true"],
        "interval_seconds": 30,
        "timeout_seconds": 5
      }
    },

    "git": {
      "command": "npx",
      "args": ["@idosal/git-mcp"],
      "env": {
        "GIT_REPO_PATH": "./"
      },
      "description": "Git operations and version control",
      "phase": "1",
      "priority": "high",
      "healthcheck": {
        "cmd": ["git", "status"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "python-sandbox": {
      "command": "python3",
      "args": ["-m", "mcp_run_python"],
      "env": {
        "PYTHON_SANDBOX_TIMEOUT": "30",
        "PYTHON_SANDBOX_MEMORY_LIMIT": "512MB"
      },
      "description": "Python code execution for testing and validation",
      "phase": "1",
      "priority": "high",
      "healthcheck": {
        "cmd": ["python3", "--version"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "prompt-history": {
      "command": "python3",
      "args": ["./scripts/prompt_history_server.py"],
      "description": "Persistent memory API (history server) on port 5007",
      "phase": "1",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:5007/last?n=1"],
        "interval_seconds": 30,
        "timeout_seconds": 5
      }
    },

    "vector-search": {
      "command": "python3",
      "args": ["./scripts/vector_search_server.py"],
      "description": "RAG-server (ChromaDB vektor-s√∏gning) on port 5004",
      "phase": "1",
      "priority": "high",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:5004/search -X POST -H \"Content-Type: application/json\" -d '{\"query\":\"test\",\"filepath\":\"\"}'"],
        "interval_seconds": 30,
        "timeout_seconds": 5
      }
    },

    "code-lens": {
      "command": "python3",
      "args": ["./scripts/code_lens_server.py"],
      "description": "Code Lens server for contextual code suggestions on port 5008",
      "phase": "1",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:5008/analyze-file -X POST -H \"Content-Type: application/json\" -d '{\"filepath\":\"./README.md\"}'"],
        "interval_seconds": 30,
        "timeout_seconds": 5
      }
    },

    "node-sandbox": {
      "command": "docker",
      "args": ["run", "--rm", "-i", "node-sandbox-mcp"],
      "description": "Node.js/TypeScript execution sandbox",
      "phase": "1",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["docker", "ps"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "jupyter": {
      "command": "python3",
      "args": ["-m", "jupyter_mcp_server"],
      "env": {
        "JUPYTER_CONFIG_DIR": "./jupyter-config",
        "JUPYTER_DATA_DIR": "./jupyter-data"
      },
      "description": "Jupyter notebook management for AI development",
      "phase": "2",
      "priority": "high",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:8888"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "data-analysis": {
      "command": "python3",
      "args": ["-m", "zaturn_mcp"],
      "env": {
        "ZATURN_ALLOWED_SOURCES": "csv,json,sql",
        "ZATURN_MAX_ROWS": "10000"
      },
      "description": "Multi-source data analysis for AI training",
      "phase": "2",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:8889"], 
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "openapi": {
      "command": "docker",
      "args": ["run", "--rm", "-p", "3001:3000", "openapi-mcp"],
      "env": {
        "OPENAPI_SPEC_URL": "./docs/api-openapi.yaml"
      },
      "description": "API testing and integration with OpenAPI",
      "phase": "1",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:3001"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "kubernetes": {
      "command": "kubectl",
      "args": ["mcp-server"],
      "env": {
        "KUBECONFIG": "~/.kube/config",
        "K8S_NAMESPACE": "learninglab"
      },
      "description": "Kubernetes cluster management for deployment",
      "phase": "4",
      "priority": "high",
      "healthcheck": {
        "cmd": ["kubectl", "get nodes"],
        "interval_seconds": 120,
        "timeout_seconds": 10
      }
    },

    "portainer": {
      "command": "portainer-mcp",
      "args": ["--endpoint", "http://localhost:9000"],
      "env": {
        "PORTAINER_API_KEY": "${PORTAINER_API_KEY}"
      },
      "description": "Container management for CI/CD",
      "phase": "4",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:9000/api/status"],
        "interval_seconds": 120,
        "timeout_seconds": 10
      }
    },

    "grafana": {
      "command": "grafana-mcp",
      "args": ["--url", "http://localhost:3000"],
      "env": {
        "GRAFANA_API_KEY": "${GRAFANA_API_KEY}",
        "GRAFANA_ORG_ID": "1"
      },
      "description": "Monitoring and analytics dashboard",
      "phase": "3",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:3000/api/health"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "email": {
      "command": "agentmail-mcp",
      "args": ["--provider", "smtp"],
      "env": {
        "SMTP_HOST": "${SMTP_HOST}",
        "SMTP_PORT": "${SMTP_PORT}",
        "SMTP_USER": "${SMTP_USER}",
        "SMTP_PASS": "${SMTP_PASS}"
      },
      "description": "Email notifications and communication",
      "phase": "1",
      "priority": "low",
      "healthcheck": {
        "cmd": ["echo", ""],
        "interval_seconds": 300,
        "timeout_seconds": 5
      }
    }
  },

  "security": {
    "authentication": {
      "oauth": {
        "enabled": true,
        "providers": ["google", "github"]
      },
      "api_keys": {
        "enabled": true,
        "rotation_days": 90
      }
    },
    "permissions": {
      "filesystem": {
        "read_only_paths": ["./migrations/legacy", "./seed"],
        "restricted_paths": ["./packages/config"]
      },
      "git": {
        "allowed_operations": ["read", "status", "diff", "log"],
        "restricted_operations": ["push", "merge", "rebase"]
      }
    },
    "rate_limiting": {
      "requests_per_minute": 100,
      "burst_limit": 20
    }
  },

  "monitoring": {
    "telemetry": {
      "enabled": true,
      "endpoint": "http://localhost:3000/api/telemetry"
    },
    "logging": {
      "level": "info",
      "file": "./logs/mcp-servers.log",
      "rotation": "daily"
    },
    "health_checks": {
      "interval_seconds": 30,
      "timeout_seconds": 10
    }
  },

  "deployment": {
    "phases": {
      "1": ["filesystem", "git", "python-sandbox", "openapi", "email", "prompt-history", "vector-search", "code-lens"],
      "2": ["jupyter", "data-analysis"],
      "3": ["grafana"],
      "4": ["kubernetes", "portainer"]
    },
    "auto_start": {
      "development": ["filesystem", "git", "python-sandbox", "prompt-history", "vector-search", "code-lens"],
      "testing": ["filesystem", "git", "python-sandbox", "openapi", "vector-search", "code-lens"],
      "production": ["kubernetes", "portainer", "grafana", "vector-search", "code-lens"]
    }
  }
}
