{
  "$schema": "https://schema.anthropic.com/mcp/config.json",
  "version": "1.0.0",
  "description": "Optimeret MCP Server Configuration for LearningLab Platform",

  "servers": {
    "filesystem": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-filesystem", "./"],
      "env": {
        "MCP_FILESYSTEM_ALLOWED_DIRS": "./apps,./packages,./docs,./scripts,./mcp_services"
      },
      "description": "File system access for code management",
      "phase": "1",
      "priority": "high",
      "healthcheck": {
        "cmd": ["true"],
        "interval_seconds": 30,
        "timeout_seconds": 5
      }
    },

    "git": {
      "command": "npx",
      "args": ["@idosal/git-mcp"],
      "env": {
        "GIT_REPO_PATH": "./"
      },
      "description": "Git operations and version control",
      "phase": "1",
      "priority": "high",
      "healthcheck": {
        "cmd": ["git", "status"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "memory": {
      "command": "python3",
      "args": ["./mcp_services/memory_server/prompt_history_server.py"],
      "description": "Persistent memory API (history server) on port 5007",
      "phase": "1",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:5007/last?n=1"],
        "interval_seconds": 30,
        "timeout_seconds": 5
      }
    },

  

    "brave-search": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-brave-search"],
      "env": {
        "BRAVE_API_KEY": "${BRAVE_API_KEY}"
      },
      "description": "Brave search for web information",
      "phase": "1",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["true"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "description": "Sequential thinking for step-by-step planning",
      "phase": "1",
      "priority": "high",
      "healthcheck": {
        "cmd": ["true"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "file-context-server": {
      "command": "python3",
      "args": ["./mcp_services/code_lens_server/code_lens_server.py"],
      "description": "Code Lens server for contextual code suggestions on port 5008",
      "phase": "1",
      "priority": "high",
      "healthcheck": {
        "cmd": ["curl", "-fs", "http://localhost:5008/analyze-file -X POST -H \"Content-Type: application/json\" -d '{\"filepath\":\"./README.md\"}'"],
        "interval_seconds": 30,
        "timeout_seconds": 5
      }
    },

    "puppeteer": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
      "description": "Web automation and testing with Puppeteer",
      "phase": "1",
      "priority": "medium",
      "healthcheck": {
        "cmd": ["true"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    },

    "package-version": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-package-version"],
      "description": "Package version management",
      "phase": "1",
      "priority": "low",
      "healthcheck": {
        "cmd": ["true"],
        "interval_seconds": 60,
        "timeout_seconds": 5
      }
    }
  },

  "security": {
    "authentication": {
      "api_keys": {
        "enabled": true,
        "rotation_days": 90
      }
    },
    "permissions": {
      "filesystem": {
        "read_only_paths": ["./migrations/legacy", "./seed"],
        "restricted_paths": ["./packages/config"]
      },
      "git": {
        "allowed_operations": ["read", "status", "diff", "log"],
        "restricted_operations": ["push", "merge", "rebase"]
      }
    },
    "rate_limiting": {
      "requests_per_minute": 100,
      "burst_limit": 20
    }
  },

  "monitoring": {
    "logging": {
      "level": "info",
      "file": "./logs/mcp-servers.log",
      "rotation": "daily"
    },
    "health_checks": {
      "interval_seconds": 30,
      "timeout_seconds": 10
    }
  },

  "deployment": {
    "phases": {
    },
    "auto_start": {
    }
  }
}